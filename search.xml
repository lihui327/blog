<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2020下半年英语六级</title>
    <url>/posts/13114/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码不太对，请再试试" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="5e5d1b5dcad55c19b284deb2834f8c5a61df1e68c09d3f32cae4a6c8d99ebf62">d78246ed3107d3ce8473038a4d318bc2c12397b6f8fd0659c30b879abfe1771d2db706a6c0efdec121d515f444099df0aeacb789e99be73957b3b8b56dc29b5f6590ce670260011cc237f47b4639f63542d10e49aeba9ac7fe228c35ff9b7a9b999306b67b5e2c1635856ece6b59308f4d0ca10e36e5fbc46bde8a7cebcaf079816c71ebfdc476b99ed670ce431e0d6e6d3d3d0ad4d22ce13c230f2e87abb6fd63ff380d0e7ea3efc85607f1db1a0c7da454aa533f136eda2ef9da2b734cd4e6f784a324c131c50209c8a66208aef31fdcae3651172af92d2310c222c7aba503615d6b6e46e29e222e219d91f76a2b2a35c3b98529bd2c407be4269bc53ef57c10da4cf33c823798f290e833e5063121383166c7eeedc41817fce3002162341b8e187c97493cc34f54c3842fd7a307d630cd9e7408c8dfd3fd0a22375c13e0cba2a04547d23909aae62dc08d6eef4bb69ae5b8e6c3b41c550dc0eb73e7bb23d87dbb23818904f8a5dcb808e6594abbe50ad18e8769f16329ff208103d46e5d6bdc635e11f136e049660758154ccd3a72e4b80f093bcd83a7c02429cbb6f902518bd9eeefffcee22701939ea4c6f175c93ba5c5b6bcb9fe203a87c93cc20ca0cd4cfb5f1a05d05e5d394c94826bf6f94d756a19fe5695eb507e55eb340e322ba3572bc6ce5671f79a317b87cf014d5aaa184f2916cc2c5ae831f6ca1839daf83a11d2bc19673a3fc4a2ebf9fee8d43337c7c4b654914e6d4d6a521f48db4bb56476fe6f1cf70c94396a7b2138a16f3a51acbf9cc2ee947983b54b57465ebdc4a8425e9f7463fa0a9ce8322503faa8ddf2d3ac423800519b606d37f4157249aee69cc046be57f05aba5d14aca3f0661787a698e0d1489ec82de436366be3a4db5317c6a86eea6b6595c07c2db23fb2b5e38fa79a7cabab5fd9f84d46a226adf5fa9972f0f991461fba6c8f46f82e37f49f55e812d89748a18ba5d4f3b118983d144e6debaa4c78e682441278092bf612b5fb895cba17f73798b9b72c2aed7ecf420168f5aeb10cb2d69ac52362384e77da2ec566d6cc71b68f8394808c41a8437474b69623d82f5b0ad2dec41edd69af3895ddc5bee5a40b3500b8caf8d035c79511c2d7cb23f5877156c539fd14967b3199631bdb3ced6fb30b581425e0ddce4d5c0532b5cdbda71ba77a143876c252d3b43f9c7b8d81279cb9803e989da418887ef3385ffb9348901bade627f829219efb0f3a32f740f914e4042f890e0f67362a3883bcbadfcc2f8ad3dc9266416ff9f718f74fe3b40c138ce093de08f26a558b460b7e08f50a2e9b388bfca603476b35d4f83e13ff5fbe2909aab003b412c5c1fda0672415170826b2ebc48cb79d75319f677f7119496bda8943d7269809fe299043c4eb7f0afad81922986959170f692089a1965baab356fdeb82a17cd133b6b43c1074108ae0f854c42c703302efcbfa05e5a09a723b35b2b3195ae600a0f3f71a9d7b128251f3ad58a8671894c7fa11f3360a22d091c26a668d4648c498</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">这里需要密码才能访问</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>C实现非递减有序数组删除重复元素</title>
    <url>/posts/46996/</url>
    <content><![CDATA[<p>参考csdn上一位大佬的文章：<a href="https://blog.csdn.net/zy010101/article/details/81302145?utm_source=app&app_version=4.5.5">删除一个有序数组中的重复元素</a>  </p>
<span id="more"></span>  

<p>本人采用的是方案二，代码实现如下：  </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="comment">//#define OK 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 10</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">DelSameX</span><span class="params">(<span class="type">int</span> *L,<span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>,j;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        i=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;n;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(L[j]!=L[i])</span><br><span class="line">            &#123;</span><br><span class="line">                i++;</span><br><span class="line">                L[i]=L[j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Please input feidijian youxu shuzu[%d]: &quot;</span>,N);</span><br><span class="line">    <span class="type">int</span> num[N];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;num[i]);</span><br><span class="line">    <span class="type">int</span> j=DelSameX(num,N);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=j;i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,num[i]);</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>运行效果如图：<img src="https://cdn.jsdelivr.net/gh/Li-hui327/PhotoBed/img/DelSame.JPG">  </p>
<p><strong>完！</strong></p>
]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>ENIAC计算机与ABC计算机的关于第一台计算机的十余年之争</title>
    <url>/posts/20094/</url>
    <content><![CDATA[<p>分享一篇文章<a href="https://baijiahao.baidu.com/s?id=1645658087402989097&wfr=spider&for=pc">ENIAC计算机与ABC计算机的关于第一台计算机的十余年之争</a>。</p>
<span id="more"></span>  

<p><strong>完！</strong>  </p>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>Java finally和return的执行顺序(非常重要)</title>
    <url>/posts/28311/</url>
    <content><![CDATA[<p>分享两篇文章，我个人认为好！  </p>
<p><a href="https://blog.csdn.net/coder_no/article/details/83581442?utm_source=app&app_version=4.5.8">《java return与finally执行顺序测试》</a>  <a href="https://blog.csdn.net/qq_36299025/article/details/89435275?utm_source=app&app_version=4.5.8">《Java中finally和return执行顺序》</a>  </p>
<span id="more"></span>  

<p><strong>完！</strong>  </p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>Java static的常见问题和使用误区</title>
    <url>/posts/10897/</url>
    <content><![CDATA[<p>详细介绍可学习csdn大佬的一篇文章<a href="https://blog.csdn.net/weixin_44234912/article/details/108737054?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522161512057416780266281223%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=161512057416780266281223&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~baidu_landing_v2~default-2-108737054.first_rank_v2_pc_rank_v29&utm_term=Java+static%E7%9A%84%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E5%92%8C%E4%BD%BF%E7%94%A8%E8%AF%AF%E5%8C%BA">《static的常见问题和使用误区》</a>  </p>
<span id="more"></span>  

<p><strong>完！</strong>  </p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>Java中Lambda表达式的3种简写方式</title>
    <url>/posts/56742/</url>
    <content><![CDATA[<p>分享一篇文章：<a href="https://blog.csdn.net/weixin_42397335/article/details/114941616?utm_source=app&app_version=4.5.8">《java中-&gt;表达式_Java Lambda表达式的3种简写方式》</a>  </p>
<span id="more"></span>  

<p><strong>完！</strong></p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>Java内部类的作用，实现多重继承</title>
    <url>/posts/39656/</url>
    <content><![CDATA[<p>分享一篇文章：<a href="https://blog.csdn.net/yzw_will/article/details/21229225?utm_source=app&app_version=4.5.7">Java内部类的作用，实现多重继承</a>  </p>
<span id="more"></span>  

<p><strong>完！</strong></p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>Java使用二维数组输出杨辉三角</title>
    <url>/posts/9719/</url>
    <content><![CDATA[<p>代码如下：    </p>
<span id="more"></span>  

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayTest5</span> &#123;</span><br><span class="line">	<span class="comment">/*</span></span><br><span class="line"><span class="comment">	 * 声明num()方法，在 num() 方法中传入两个参数，即 x 和 y。</span></span><br><span class="line"><span class="comment">	 * 其中，x 表示行，y 表示列。num() 方法用于计算第 x 行第 y 列的数值。</span></span><br><span class="line"><span class="comment">	 * 代码如下：</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">num</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span>	&#123;</span><br><span class="line">		<span class="keyword">if</span>(y==<span class="number">1</span> || y==x)</span><br><span class="line">			<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">		<span class="type">int</span> c=num(x-<span class="number">1</span>,y-<span class="number">1</span>)+num(x-<span class="number">1</span>,y);</span><br><span class="line">		<span class="keyword">return</span> c;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>	&#123;</span><br><span class="line">		<span class="meta">@SuppressWarnings(&quot;resource&quot;)</span></span><br><span class="line">		Scanner input=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">		System.out.print(<span class="string">&quot;输入打印杨辉三角形的行数：&quot;</span>);</span><br><span class="line">		<span class="type">int</span> row=input.nextInt();</span><br><span class="line">		<span class="type">int</span>[][] yhsj=<span class="keyword">new</span> <span class="title class_">int</span>[row+<span class="number">1</span>][row+<span class="number">1</span>];</span><br><span class="line">		<span class="comment">//定义二维数组，因为第0行不用，所以数组空间大小要+1</span></span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=row;i++)	&#123;</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=i;j++)	&#123;</span><br><span class="line">				yhsj[i][j]=num(i,j);</span><br><span class="line">				<span class="comment">//通过数组来存储每行的数值</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=row;i++)	&#123;</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=row-i;j++)	&#123;</span><br><span class="line">				System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=i;j++)	&#123;</span><br><span class="line">				System.out.print(yhsj[i][j] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			System.out.println();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>保存，输出结果如图示：<img src="https://cdn.jsdelivr.net/gh/Li-hui327/PhotoBed/img/yhsj.JPG">  </p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>Java抽象类和接口的联系与区别</title>
    <url>/posts/4792/</url>
    <content><![CDATA[<p>分享一篇文章：<a href="https://blog.csdn.net/qq_33591903/article/details/81709511?utm_source=app&app_version=4.5.7">【JAVA】抽象类和接口的联系与区别</a>，留着以后不懂时多拿出来看看。  </p>
<span id="more"></span>  

<p><strong>完！</strong>  </p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>Java数组实战训练</title>
    <url>/posts/22327/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>我是参考csdn的一位大佬的代码编写的，传送门：<a href="https://blog.csdn.net/weixin_45743799/article/details/104696705?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522161286173616780264077580%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=161286173616780264077580&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~rank_v29-1-104696705.pc_search_result_no_baidu_js&utm_term=java%E8%BD%AC%E4%BA%BA%E6%B0%91%E5%B8%81%E8%AF%BB%E6%B3%95&spm=1018.2226.3001.4187">java人民币读法转换</a>，以下为详细代码：  </p>
<span id="more"></span>      

<ol>
<li>Java数字转人民币读法，代码如下：      <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayTest2</span> &#123;</span><br><span class="line">	<span class="keyword">private</span> String[] str1= &#123;<span class="string">&quot;零&quot;</span>,<span class="string">&quot;壹&quot;</span>,<span class="string">&quot;贰&quot;</span>,<span class="string">&quot;叁&quot;</span>,<span class="string">&quot;肆&quot;</span>,<span class="string">&quot;伍&quot;</span>,</span><br><span class="line">			<span class="string">&quot;陆&quot;</span>,<span class="string">&quot;柒&quot;</span>,<span class="string">&quot;捌&quot;</span>,<span class="string">&quot;玖&quot;</span>&#125;;</span><br><span class="line">	<span class="keyword">private</span> String[] str2= &#123;<span class="string">&quot;十&quot;</span>,<span class="string">&quot;百&quot;</span>,<span class="string">&quot;千&quot;</span>&#125;;</span><br><span class="line">	<span class="keyword">private</span> String[] str3= &#123;<span class="string">&quot;角&quot;</span>,<span class="string">&quot;分&quot;</span>&#125;;</span><br><span class="line">	<span class="keyword">private</span> String[] str4= &#123;<span class="string">&quot;元&quot;</span>,<span class="string">&quot;万&quot;</span>,<span class="string">&quot;亿&quot;</span>&#125;;</span><br><span class="line">	<span class="keyword">private</span> String <span class="title function_">divadeZheng</span><span class="params">(<span class="type">double</span> num)</span>	&#123;</span><br><span class="line">		<span class="comment">//把浮点数分解成整数部分字符串</span></span><br><span class="line">		<span class="type">long</span> zheng=(<span class="type">long</span>)num;</span><br><span class="line">		<span class="keyword">return</span> String.valueOf(zheng);<span class="comment">//整型转换成字符串</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">private</span> String <span class="title function_">divadeXiao</span><span class="params">(<span class="type">double</span> num)</span>	&#123;</span><br><span class="line">		<span class="comment">//把浮点数分解成小数部分字符串</span></span><br><span class="line">		<span class="type">long</span> zheng=(<span class="type">long</span>)num;</span><br><span class="line">		<span class="type">long</span> xiao=Math.round((num-zheng)*<span class="number">100</span>);</span><br><span class="line">		<span class="comment">//得到浮点数的小数部分</span></span><br><span class="line">		<span class="keyword">return</span> String.valueOf(xiao);<span class="comment">//返回字符串</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">private</span> String <span class="title function_">toStr1</span><span class="params">(String xiao)</span>	&#123;</span><br><span class="line">		<span class="comment">//把小数部分的数字字符串转换成汉字字符串</span></span><br><span class="line">		String re1=<span class="string">&quot;&quot;</span>;</span><br><span class="line">		<span class="type">int</span> len=xiao.length();</span><br><span class="line">		<span class="keyword">if</span>(len==<span class="number">2</span>)	&#123;</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">2</span>;i++)	&#123;</span><br><span class="line">				<span class="type">int</span> num=xiao.charAt(i)-<span class="number">48</span>;<span class="comment">//把字符串转换成数字</span></span><br><span class="line">				<span class="keyword">if</span>(num!=<span class="number">0</span>)	&#123;</span><br><span class="line">					re1+=str1[num]+str3[i];</span><br><span class="line">					<span class="comment">//数字不为零则需要加单位，为零则不操作</span></span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(len==<span class="number">1</span> &amp;&amp; xiao.charAt(<span class="number">0</span>)!=<span class="string">&#x27;0&#x27;</span>)	&#123;</span><br><span class="line">			<span class="comment">//若长度为1，例：12.09小数部分为9</span></span><br><span class="line">			<span class="type">int</span> num=xiao.charAt(<span class="number">0</span>)-<span class="number">48</span>;</span><br><span class="line">			re1+=str1[num]+str3[<span class="number">1</span>];</span><br><span class="line">			<span class="comment">//此时只有分，加单位str3[1]</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> re1;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">private</span> String <span class="title function_">toStr</span><span class="params">(String zheng)</span>	&#123;</span><br><span class="line">		<span class="comment">//把一个四位的数字字符串变成汉字字符串</span></span><br><span class="line">		String re=<span class="string">&quot;&quot;</span>;</span><br><span class="line">		<span class="type">int</span> j=<span class="number">0</span>;</span><br><span class="line">		<span class="type">int</span> lenz=zheng.length();</span><br><span class="line">		<span class="keyword">if</span>(zheng.charAt(<span class="number">0</span>)==<span class="string">&#x27;0&#x27;</span> &amp;&amp; lenz==<span class="number">1</span>)	&#123;</span><br><span class="line">			<span class="comment">//特殊情况如输入0.89时，整数字符串为0的处理</span></span><br><span class="line">			re+=<span class="string">&quot;零&quot;</span>;</span><br><span class="line">			<span class="keyword">return</span> re;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;lenz;i++)	&#123;<span class="comment">//遍历每一位数字</span></span><br><span class="line">			<span class="type">int</span> num=zheng.charAt(i)-<span class="number">48</span>;</span><br><span class="line">			<span class="keyword">if</span>(i!=lenz-<span class="number">1</span> &amp;&amp; num!=<span class="number">0</span>)	&#123;</span><br><span class="line">				<span class="comment">//若不是最后一位数字且数字不为零，则需要添加单位</span></span><br><span class="line">				re+=str1[num]+str2[lenz-<span class="number">2</span>-i];</span><br><span class="line">			&#125;	<span class="keyword">else</span> <span class="keyword">if</span>(!(num==<span class="number">0</span> &amp;&amp; re.charAt(j-<span class="number">1</span>)==<span class="string">&#x27;零&#x27;</span>)</span><br><span class="line">					)	&#123;</span><br><span class="line">				<span class="comment">//对于连续0出现的特殊处理，如009，第二个零不进行操作</span></span><br><span class="line">				re+=str1[num];</span><br><span class="line">			&#125;</span><br><span class="line">			j=re.length();</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(re.charAt(j-<span class="number">1</span>)==<span class="string">&#x27;零&#x27;</span>)	&#123;</span><br><span class="line">			<span class="comment">//对特殊情况最后一位是零的处理，如1990，删除掉末尾的零</span></span><br><span class="line">			re=re.substring(<span class="number">0</span>, j-<span class="number">1</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> re;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">private</span> String <span class="title function_">zhengDivade</span><span class="params">(String zheng)</span>	&#123;</span><br><span class="line">		<span class="comment">//对于金额的整数部分在12位数以内的处理，以4位数为一组</span></span><br><span class="line">		<span class="comment">//如1234（亿），5678（万），1234（元）.89</span></span><br><span class="line">		<span class="type">int</span> len=zheng.length();</span><br><span class="line">		String Re=<span class="string">&quot;&quot;</span>;</span><br><span class="line">		<span class="type">int</span> n=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">if</span>(len&gt;=<span class="number">9</span>)</span><br><span class="line">			<span class="comment">//判断整数部分的长度，考虑需要分几个组</span></span><br><span class="line">			n=<span class="number">3</span>;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(len&gt;=<span class="number">5</span> &amp;&amp; n&lt;<span class="number">9</span>)</span><br><span class="line">			n=<span class="number">2</span>;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(len&gt;=<span class="number">1</span> &amp;&amp; n&lt;<span class="number">5</span>)</span><br><span class="line">			n=<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">if</span>(len%<span class="number">4</span> != <span class="number">0</span>)	&#123;</span><br><span class="line">			<span class="comment">//若位数非4的倍数，则在前面补0，直到位数为4的倍数为止</span></span><br><span class="line">			<span class="comment">//如12，2345补为0012，2345</span></span><br><span class="line">			String zh=<span class="string">&quot;&quot;</span>;</span><br><span class="line">			<span class="type">int</span> s=len%<span class="number">4</span>;</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">0</span>;k&lt;(<span class="number">4</span>-s);k++)	&#123;</span><br><span class="line">				<span class="comment">//在前面补0</span></span><br><span class="line">				zh+=<span class="string">&quot;0&quot;</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			zh+=zheng;</span><br><span class="line">			zheng=zh;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)	&#123;</span><br><span class="line">			<span class="comment">//进行n个组合的串联</span></span><br><span class="line">			<span class="comment">//进行n次循环</span></span><br><span class="line">			String Zheng=<span class="string">&quot;&quot;</span>;</span><br><span class="line">			String sss=<span class="string">&quot;&quot;</span>;</span><br><span class="line">			len=zheng.length();<span class="comment">//长度在变化</span></span><br><span class="line">			<span class="comment">//提取出整数部分后四位，进行分开的转换</span></span><br><span class="line">			Zheng=zheng.substring(len-<span class="number">4</span>);</span><br><span class="line">			<span class="comment">//除去已经提取的字符串以外的字符串，字符串更新</span></span><br><span class="line">			zheng=zheng.substring(<span class="number">0</span>, len-<span class="number">4</span>);</span><br><span class="line">			<span class="type">int</span> m=<span class="number">0</span>,me=<span class="number">0</span>;</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">3</span>;j&gt;=<span class="number">0</span>;j--)	&#123;</span><br><span class="line">				<span class="comment">//把字符串转换成整形数，如0012换成12</span></span><br><span class="line">				m=(<span class="type">int</span>)((Zheng.charAt(j)-<span class="number">48</span>)*Math.pow</span><br><span class="line">						(<span class="number">10</span>, <span class="number">3</span>-j));</span><br><span class="line">				me+=m;</span><br><span class="line">			&#125;</span><br><span class="line">			Zheng=String.valueOf(me);<span class="comment">//把数字转换成字符串</span></span><br><span class="line">			sss=<span class="built_in">this</span>.toStr(Zheng);<span class="comment">//把字符串转换成中文汉字</span></span><br><span class="line">			sss+=str4[i]+Re;</span><br><span class="line">			<span class="comment">//衔接上元等单位，再加上已经转换好的汉字字符串，注意每组</span></span><br><span class="line">			<span class="comment">//字符串间的顺序</span></span><br><span class="line">			Re=sss;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> Re;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>	&#123;</span><br><span class="line">		<span class="comment">//输入金额，并将整数部分和小数部分连接</span></span><br><span class="line">		<span class="comment">//TODO Auto-generated method stub</span></span><br><span class="line">		ArrayTest2 s=<span class="keyword">new</span> <span class="title class_">ArrayTest2</span>();</span><br><span class="line">		System.out.println(<span class="string">&quot;请输入整数部分为十二位以内的金额：&quot;</span>);</span><br><span class="line">		<span class="meta">@SuppressWarnings(&quot;resource&quot;)</span></span><br><span class="line">		Scanner input=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">		<span class="type">double</span> a=input.nextDouble();</span><br><span class="line">		System.out.println(<span class="string">&quot;人民币读法为：&quot;</span>);</span><br><span class="line">		System.out.println(s.zhengDivade(s.divadeZheng(a))</span><br><span class="line">				+s.toStr1(s.divadeXiao(a)));</span><br><span class="line">		<span class="comment">//将整数部分的汉字字符串和小数部分的汉字字符串连接</span></span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>Java数组实战训练2</title>
    <url>/posts/919/</url>
    <content><![CDATA[<p>假设在仓库系统中，每件商品都有 3 个库存信息，分别是入库量、出库量和当前库存量。定义一个一维数组来存储 5 件商品的名称，并定义一个二维数组来存储这 5 件商品的 3 个库存信息。用户可以根据商品名称查询该商品的所有库存，也可以查看某个类别库存下数量小于 100 的商品名单，并将该类别的所有库存量按从低到高的顺序排列。具体代码如下:  </p>
<span id="more"></span>          

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayTest4</span> &#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>	&#123;</span><br><span class="line">		<span class="meta">@SuppressWarnings(&quot;resource&quot;)</span></span><br><span class="line">		Scanner input=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">		String[] products= &#123;<span class="string">&quot;洗发水&quot;</span>,<span class="string">&quot;纸巾&quot;</span>,<span class="string">&quot;水杯&quot;</span>,<span class="string">&quot;牙膏&quot;</span>,</span><br><span class="line">			<span class="string">&quot;香皂&quot;</span>&#125;;</span><br><span class="line">		<span class="type">int</span>[][] amounts= &#123;&#123;<span class="number">50</span>,<span class="number">80</span>,<span class="number">90</span>&#125;,&#123;<span class="number">40</span>,<span class="number">80</span>,<span class="number">78</span>&#125;,&#123;<span class="number">50</span>,<span class="number">45</span></span><br><span class="line">			,<span class="number">789</span>&#125;,&#123;<span class="number">100</span>,<span class="number">685</span>,<span class="number">55</span>&#125;,&#123;<span class="number">898</span>,<span class="number">754</span>,<span class="number">63</span>&#125;&#125;;</span><br><span class="line">		System.out.println(<span class="string">&quot;————————库存系统————————&quot;</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;请输入要查询库存信息的商品名称：&quot;</span>);</span><br><span class="line">		String name=input.next();</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;products.length;i++)	&#123;</span><br><span class="line">			<span class="keyword">if</span>(products[i].equals(name))	&#123;</span><br><span class="line">				System.out.println(<span class="string">&quot;商品【&quot;</span> + products[i]</span><br><span class="line">						+ <span class="string">&quot;】的库存信息如下：&quot;</span>);</span><br><span class="line">				System.out.println(<span class="string">&quot;入库\t出库\t库存&quot;</span>);</span><br><span class="line">				<span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">3</span>;j++)	&#123;</span><br><span class="line">					System.out.print(amounts[i][j] + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		System.out.println(<span class="string">&quot;\n————————查询库存不足100的商品&quot;</span></span><br><span class="line">				+ <span class="string">&quot;————————&quot;</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;1.入库\t2.出库\t3.库存&quot;</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;请输入序号：&quot;</span>);</span><br><span class="line">		<span class="type">int</span> no=input.nextInt();</span><br><span class="line">		<span class="type">int</span>[] temp=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">5</span>];<span class="comment">//定义数组，存储该类别的所有商品</span></span><br><span class="line">		System.out.println(<span class="string">&quot;该类别下数量较少的商品有：&quot;</span>);</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)	&#123;</span><br><span class="line">			temp[i]=amounts[i][no-<span class="number">1</span>];<span class="comment">//将指定类别的商品数目</span></span><br><span class="line">			<span class="comment">//存储到temp数组中</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;temp.length;i++)	&#123;</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> j=temp.length-i-<span class="number">2</span>;j&gt;=i;j--)	&#123;</span><br><span class="line">				<span class="keyword">if</span>(temp[j]&gt;temp[j+<span class="number">1</span>])	&#123;</span><br><span class="line">					<span class="type">int</span> x=temp[j];</span><br><span class="line">					temp[j]=temp[j+<span class="number">1</span>];</span><br><span class="line">					temp[j+<span class="number">1</span>]=x;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)	&#123;</span><br><span class="line">			<span class="keyword">if</span>(temp[i]&lt;<span class="number">100</span> &amp;&amp; temp[i]!=temp[i+<span class="number">1</span>])	&#123;</span><br><span class="line">				<span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">5</span>;j++)	&#123;</span><br><span class="line">					<span class="keyword">if</span>(amounts[j][no-<span class="number">1</span>]==temp[i])	&#123;</span><br><span class="line">						System.out.print(products[j] + </span><br><span class="line">								<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">						</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		System.out.println(<span class="string">&quot;\n该类别的商品库存信息从低到高的&quot;</span></span><br><span class="line">				+ <span class="string">&quot;排列如下：&quot;</span>);</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;temp.length;i++)	&#123;</span><br><span class="line">			System.out.print(temp[i] + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;     </span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>Java实现简单的五子棋</title>
    <url>/posts/43300/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>我是参考csdn大佬的博客写的代码，不得不承认csdn是一个学习计算机语言的好地方，那里面有数不清的免费资源，挺好的，里面的博主个个都是大佬，在这里我就不过多介绍csdn了，切入正题，传送门：<a href="https://blog.csdn.net/qq_44756792/article/details/96135969?utm_source=app&app_version=4.5.2">用Java实现简单的五子棋游戏，….</a>  </p>
<span id="more"></span>  

<p>具体实现代码如下：  </p>
<blockquote>
<ol>
<li>导入需要的类  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;  </span><br></pre></td></tr></table></figure></li>
</ol>
</blockquote>
<blockquote>
<ol start="2">
<li>新建测试类，在类里定义静态变量  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="type">int</span> length=<span class="number">20</span>;<span class="comment">//初始化棋盘数据</span></span><br><span class="line"><span class="keyword">static</span> String[][] goBang=<span class="keyword">new</span> <span class="title class_">String</span>[length][length];</span><br><span class="line"><span class="keyword">static</span> String add=<span class="string">&quot;十&quot;</span>;</span><br><span class="line"><span class="keyword">static</span> String black=<span class="string">&quot;●&quot;</span>;</span><br><span class="line"><span class="keyword">static</span> String white=<span class="string">&quot;○&quot;</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="type">boolean</span> begin=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">static</span> String zb=<span class="literal">null</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="type">int</span> a,b;</span><br><span class="line"><span class="keyword">static</span> <span class="type">int</span> blackScore=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="type">int</span> whiteScore=<span class="number">1</span>;  </span><br></pre></td></tr></table></figure></li>
</ol>
</blockquote>
<blockquote>
<ol start="3">
<li>初始化棋局，用十填充</li>
</ol>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>	&#123;</span><br><span class="line">		<span class="type">boolean</span> goOn=<span class="literal">true</span>;  </span><br><span class="line">	    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;goBang.length;i++)	&#123;</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;goBang.length;j++)	&#123;</span><br><span class="line">				goBang[i][j]=add;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		show();</span><br><span class="line">		<span class="keyword">do</span>	&#123;</span><br><span class="line">			<span class="type">boolean</span> blackDo=<span class="literal">true</span>;</span><br><span class="line">			<span class="comment">//true时为黑方选手的落子，false时为白方选手的落子，黑方代表玩家</span></span><br><span class="line">			<span class="meta">@SuppressWarnings(&quot;resource&quot;)</span></span><br><span class="line">			Scanner input=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">			<span class="comment">//开始下棋</span></span><br><span class="line">			<span class="keyword">do</span> &#123;<span class="comment">//赢面出现之前的循环走棋</span></span><br><span class="line">				System.out.println(<span class="string">&quot;请输入您下棋的行和列，如：3,5&quot;</span></span><br><span class="line">						+ <span class="string">&quot;表示第3行第5列，x范围[1,20]，y范围[1,&quot;</span></span><br><span class="line">						+ <span class="string">&quot;20]：&quot;</span>);</span><br><span class="line">				zb=input.next();<span class="comment">//输入走棋的位置</span></span><br><span class="line">				String[] str=zb.split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">				<span class="comment">//以,为界把一个字符串分成两个字符串</span></span><br><span class="line">				a=Integer.valueOf(str[<span class="number">0</span>])-<span class="number">1</span>;</span><br><span class="line">				b=Integer.valueOf(str[<span class="number">1</span>])-<span class="number">1</span>;</span><br><span class="line">				<span class="comment">//将字符串转int，并-1才能转换成数组的索引下标</span></span><br><span class="line">				<span class="comment">//用黑子填充棋局</span></span><br><span class="line">				<span class="keyword">if</span>(goBang[a][b].equals(add))	&#123;</span><br><span class="line">					<span class="comment">//判断goBang[a][b]这个位置是否可用</span></span><br><span class="line">	                <span class="keyword">if</span>(blackDo)	&#123;</span><br><span class="line">						<span class="comment">/*</span></span><br><span class="line"><span class="comment">						 * 是黑方走的棋时把黑子填充在输入的坐标里，并改变</span></span><br><span class="line"><span class="comment">						 * blackDo的值，使下一次为白方填充</span></span><br><span class="line"><span class="comment">						 */</span></span><br><span class="line">						goBang[a][b]=black;</span><br><span class="line">						blackDo=<span class="literal">false</span>;</span><br><span class="line">					&#125;	<span class="keyword">else</span>	&#123;</span><br><span class="line">						<span class="comment">/*</span></span><br><span class="line"><span class="comment">						 * 不是黑方走的棋时把白子填充在输入的坐标里，并改变</span></span><br><span class="line"><span class="comment">						 * blackDo的值，使下一次为黑方填充</span></span><br><span class="line"><span class="comment">						 */</span></span><br><span class="line">						goBang[a][b]=white;</span><br><span class="line">						blackDo=<span class="literal">true</span>;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;	<span class="keyword">else</span>	&#123;<span class="comment">//输入的坐标位置不可用时</span></span><br><span class="line">					<span class="keyword">do</span> &#123;</span><br><span class="line">						System.out.println(<span class="string">&quot;输入位已经存在棋子，&quot;</span></span><br><span class="line">								+ <span class="string">&quot;请从新输入：&quot;</span>);</span><br><span class="line">						zb=input.next();</span><br><span class="line">						str=zb.split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">						<span class="comment">//以,为界把一个字符串分成两个字符串</span></span><br><span class="line">						a=Integer.valueOf(str[<span class="number">0</span>])-<span class="number">1</span>;</span><br><span class="line">						b=Integer.valueOf(str[<span class="number">1</span>])-<span class="number">1</span>;</span><br><span class="line">						<span class="comment">//将字符串转int，并-1才能转换成数组的索引下标</span></span><br><span class="line">	                    &#125;	<span class="keyword">while</span>(!goBang[a][b].equals(add));</span><br><span class="line">					<span class="keyword">if</span>(blackDo)	&#123;</span><br><span class="line">						<span class="comment">/*</span></span><br><span class="line"><span class="comment">						 * 是黑方走的棋时把黑子填充在输入的坐标里，并改变</span></span><br><span class="line"><span class="comment">						 * blackDo的值，使下一次为白方填充</span></span><br><span class="line"><span class="comment">						 */</span></span><br><span class="line">						goBang[a][b]=black;</span><br><span class="line">						blackDo=<span class="literal">false</span>;</span><br><span class="line">					&#125;	<span class="keyword">else</span>	&#123;</span><br><span class="line">						<span class="comment">/*</span></span><br><span class="line"><span class="comment">						 * 不是黑方走的棋时把白子填充在输入的坐标里，并改变</span></span><br><span class="line"><span class="comment">						 * blackDo的值，使下一次为黑方填充</span></span><br><span class="line"><span class="comment">						 */</span></span><br><span class="line">						goBang[a][b]=white;</span><br><span class="line">						blackDo=<span class="literal">true</span>;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				PanDing();<span class="comment">//调用判定方法进行判定</span></span><br><span class="line">				<span class="comment">//如果人赢了，机器就不需要再走</span></span><br><span class="line">				<span class="keyword">if</span>(blackScore&lt;<span class="number">5</span>)	&#123;</span><br><span class="line">					<span class="comment">//机器走棋</span></span><br><span class="line">	                Random rand=<span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">					b=rand.nextInt(<span class="number">20</span>);</span><br><span class="line">					<span class="comment">//生成[0,20)之间的随机整数，不包括20</span></span><br><span class="line">					a=rand.nextInt(<span class="number">20</span>);</span><br><span class="line">					<span class="comment">//生成[0,20)之间的随机整数，不包括20</span></span><br><span class="line">					<span class="keyword">if</span>(goBang[a][b].equals(add))	&#123;</span><br><span class="line">						goBang[a][b]=white;</span><br><span class="line">						blackDo=<span class="literal">true</span>;</span><br><span class="line">					&#125;	<span class="keyword">else</span>	&#123;</span><br><span class="line">						<span class="keyword">do</span> &#123;</span><br><span class="line">							b=rand.nextInt(<span class="number">20</span>);</span><br><span class="line">							<span class="comment">//生成[0,20)之间的随机整数，不包括20</span></span><br><span class="line">							a=rand.nextInt(<span class="number">20</span>);</span><br><span class="line">							<span class="comment">//生成[0,20)之间的随机整数，不包括20</span></span><br><span class="line">						&#125;	<span class="keyword">while</span>(goBang[a][b].equals(add));</span><br><span class="line">						goBang[a][b]=white;</span><br><span class="line">						blackDo=<span class="literal">true</span>;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				show();</span><br><span class="line">			&#125;	<span class="keyword">while</span>(begin);</span><br><span class="line">	        <span class="keyword">if</span>(blackScore&gt;=<span class="number">5</span> || whiteScore&gt;=<span class="number">5</span>)	&#123;</span><br><span class="line">				System.out.println(<span class="string">&quot;是否再来一局？y/n：&quot;</span>);</span><br><span class="line">				<span class="keyword">if</span>(input.next().equals(<span class="string">&quot;n&quot;</span>))	&#123;</span><br><span class="line">					goOn=<span class="literal">false</span>;</span><br><span class="line">					System.out.println(<span class="string">&quot;游戏结束！&quot;</span>);</span><br><span class="line">				&#125;	<span class="keyword">else</span>	&#123;</span><br><span class="line">					<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;goBang.length;i++)	&#123;</span><br><span class="line">						<span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;goBang.length;j++)	&#123;</span><br><span class="line">							goBang[i][j]=add;</span><br><span class="line">						&#125;</span><br><span class="line">					&#125;</span><br><span class="line">					show();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;	<span class="keyword">while</span>(goOn);</span><br><span class="line">	&#125;<span class="comment">//主方法结束  </span></span><br></pre></td></tr></table></figure>

<blockquote>
<ol start="4">
<li>定义静态方法显示棋局</li>
</ol>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span>	&#123;<span class="comment">//静态方法显示棋局</span></span><br><span class="line">		<span class="comment">//输出棋局的方法用增强for循环</span></span><br><span class="line">		<span class="keyword">for</span>(String[] strs:goBang)	&#123;</span><br><span class="line">			<span class="keyword">for</span>(String str:strs)	&#123;</span><br><span class="line">				System.out.print(str);</span><br><span class="line">			&#125;</span><br><span class="line">			System.out.println();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;  </span><br></pre></td></tr></table></figure>

<blockquote>
<ol start="5">
<li>定义判定方法</li>
</ol>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">PanDing</span><span class="params">()</span>	&#123;</span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		 * 判断输赢，赢面出现时共有4种情况</span></span><br><span class="line"><span class="comment">		 * 定义blackScore为黑方棋子连续的连接个数，值为5时赢</span></span><br><span class="line"><span class="comment">		 * 定义whiteScore为白方棋子连续的连接个数，值为5时赢</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		blackScore=<span class="number">1</span>;</span><br><span class="line">		whiteScore=<span class="number">1</span>;</span><br><span class="line">		<span class="comment">//1. 5个横着的连续的相同颜色的棋子</span></span><br><span class="line">		lableA:</span><br><span class="line">			<span class="keyword">for</span>(String[] strs:goBang)	&#123;</span><br><span class="line">				<span class="keyword">for</span>(String str:strs)	&#123;</span><br><span class="line">					<span class="keyword">if</span>(str.equals(black))	&#123;</span><br><span class="line">						blackScore++;</span><br><span class="line">					&#125;	<span class="keyword">else</span></span><br><span class="line">						blackScore=<span class="number">0</span>;</span><br><span class="line">					<span class="keyword">if</span>(str.equals(white))	&#123;</span><br><span class="line">						whiteScore++;</span><br><span class="line">					&#125;	<span class="keyword">else</span></span><br><span class="line">						whiteScore=<span class="number">0</span>;</span><br><span class="line">					<span class="keyword">if</span>(blackScore&gt;<span class="number">5</span>)	&#123;</span><br><span class="line">						begin=<span class="literal">false</span>;</span><br><span class="line">						System.out.println(<span class="string">&quot;游戏结束，&quot;</span></span><br><span class="line">								+ <span class="string">&quot;你赢了！&quot;</span>);</span><br><span class="line">						<span class="keyword">break</span> lableA;</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">if</span>(whiteScore&gt;<span class="number">5</span>)	&#123;</span><br><span class="line">						begin=<span class="literal">false</span>;</span><br><span class="line">						System.out.println(<span class="string">&quot;游戏结束，&quot;</span></span><br><span class="line">								+ <span class="string">&quot;你输了！&quot;</span>);</span><br><span class="line">						<span class="keyword">break</span> lableA;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		<span class="comment">//2. 分两种情况竖线，分两种判定方式</span></span><br><span class="line">		<span class="comment">//2.1 最后落子在竖线的顶端构成五子连珠，由上往下判定</span></span><br><span class="line">		<span class="keyword">if</span>(a&lt;<span class="number">16</span> &amp;&amp; blackScore&lt;<span class="number">5</span>)	&#123;</span><br><span class="line">			blackScore=<span class="number">1</span>;</span><br><span class="line">			whiteScore=<span class="number">1</span>;</span><br><span class="line">			<span class="type">int</span> a1=a;</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)	&#123;</span><br><span class="line">				<span class="type">int</span> a0=a1++;</span><br><span class="line">	            <span class="keyword">if</span>(goBang[a1][b].equals(goBang[a0][b])</span><br><span class="line">						&amp;&amp; goBang[a1][b].equals(black))	&#123;</span><br><span class="line">					blackScore++;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">if</span>(goBang[a1][b].equals(goBang[a0][b])</span><br><span class="line">						&amp;&amp; goBang[a1][b].equals(white))	&#123;</span><br><span class="line">					whiteScore++;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">if</span>(blackScore&gt;=<span class="number">5</span>)	&#123;</span><br><span class="line">					begin=<span class="literal">false</span>;</span><br><span class="line">					System.out.println(<span class="string">&quot;游戏结束，你赢了！&quot;</span>);</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">if</span>(whiteScore&gt;=<span class="number">5</span>)	&#123;</span><br><span class="line">					begin=<span class="literal">false</span>;</span><br><span class="line">					System.out.println(<span class="string">&quot;游戏结束，你输了！&quot;</span>);</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">	            &#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//2.2 最后落子在竖线的底端构成五子连珠，由下往上判定</span></span><br><span class="line">		<span class="keyword">if</span>(a&gt;<span class="number">3</span> &amp;&amp; blackScore&lt;<span class="number">5</span>)	&#123;</span><br><span class="line">			blackScore=<span class="number">1</span>;</span><br><span class="line">			whiteScore=<span class="number">1</span>;</span><br><span class="line">			<span class="type">int</span> a1=a;</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)	&#123;</span><br><span class="line">				<span class="type">int</span> a0=a1--;</span><br><span class="line">				<span class="keyword">if</span>(goBang[a1][b].equals(goBang[a0][b])</span><br><span class="line">						&amp;&amp; goBang[a1][b].equals(black))	&#123;</span><br><span class="line">					blackScore++;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">if</span>(goBang[a1][b].equals(goBang[a0][b])</span><br><span class="line">						&amp;&amp; goBang[a1][b].equals(white))	&#123;</span><br><span class="line">					whiteScore++;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">if</span>(blackScore&gt;=<span class="number">5</span>)	&#123;</span><br><span class="line">					begin=<span class="literal">false</span>;</span><br><span class="line">					System.out.println(<span class="string">&quot;游戏结束，你赢了！&quot;</span>);</span><br><span class="line">	                <span class="keyword">break</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">if</span>(whiteScore&gt;=<span class="number">5</span>)	&#123;</span><br><span class="line">					begin=<span class="literal">false</span>;</span><br><span class="line">					System.out.println(<span class="string">&quot;游戏结束，你输了！&quot;</span>);</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//3. &quot;\&quot;分两种判定方式</span></span><br><span class="line">		<span class="comment">//3.1 从左上往右下判定</span></span><br><span class="line">		<span class="keyword">if</span>(a&lt;<span class="number">16</span> &amp;&amp; b&lt;<span class="number">16</span> &amp;&amp; blackScore&lt;<span class="number">5</span>)	&#123;</span><br><span class="line">			blackScore=<span class="number">1</span>;</span><br><span class="line">			whiteScore=<span class="number">1</span>;</span><br><span class="line">			<span class="type">int</span> a1=a;</span><br><span class="line">			<span class="type">int</span> b1=b;</span><br><span class="line">	        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)	&#123;</span><br><span class="line">				<span class="type">int</span> a0=a1++;</span><br><span class="line">				<span class="type">int</span> b0=b1++;</span><br><span class="line">				<span class="keyword">if</span>(goBang[a1][b1].equals(goBang[a0][b0])</span><br><span class="line">						&amp;&amp; goBang[a1][b1].equals(black))	&#123;</span><br><span class="line">					blackScore++;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">if</span>(goBang[a1][b1].equals(goBang[a0][b0])</span><br><span class="line">						&amp;&amp; goBang[a1][b1].equals(white))	&#123;</span><br><span class="line">					whiteScore++;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">if</span>(blackScore&gt;=<span class="number">5</span>)	&#123;</span><br><span class="line">					begin=<span class="literal">false</span>;</span><br><span class="line">	                System.out.println(<span class="string">&quot;游戏结束，你赢了！&quot;</span>);</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">if</span>(whiteScore&gt;=<span class="number">5</span>)	&#123;</span><br><span class="line">					begin=<span class="literal">false</span>;</span><br><span class="line">					System.out.println(<span class="string">&quot;游戏结束，你输了！&quot;</span>);</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	    <span class="comment">//3.2 从右下往左上判定</span></span><br><span class="line">		<span class="keyword">if</span>(a&gt;<span class="number">3</span> &amp;&amp; b&gt;<span class="number">3</span> &amp;&amp; blackScore&lt;<span class="number">5</span>)	&#123;</span><br><span class="line">			blackScore=<span class="number">1</span>;</span><br><span class="line">			whiteScore=<span class="number">1</span>;</span><br><span class="line">			<span class="type">int</span> a1=a;</span><br><span class="line">			<span class="type">int</span> b1=b;</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)	&#123;</span><br><span class="line">				<span class="type">int</span> a0=a1--;</span><br><span class="line">				<span class="type">int</span> b0=b1--;</span><br><span class="line">				<span class="keyword">if</span>(goBang[a1][b1].equals(goBang[a0][b0])</span><br><span class="line">						&amp;&amp; goBang[a1][b1].equals(black))	&#123;</span><br><span class="line">					blackScore++;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">if</span>(goBang[a1][b1].equals(goBang[a0][b0])</span><br><span class="line">						&amp;&amp; goBang[a1][b1].equals(white))	&#123;</span><br><span class="line">					whiteScore++;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">if</span>(blackScore&gt;=<span class="number">5</span>)	&#123;</span><br><span class="line">					begin=<span class="literal">false</span>;</span><br><span class="line">	                System.out.println(<span class="string">&quot;游戏结束，你赢了！&quot;</span>);</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">if</span>(whiteScore&gt;=<span class="number">5</span>)	&#123;</span><br><span class="line">					begin=<span class="literal">false</span>;</span><br><span class="line">					System.out.println(<span class="string">&quot;游戏结束，你输了！&quot;</span>);</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//4. &quot;/&quot;分两种判定方式</span></span><br><span class="line">		<span class="comment">//4.1 从右上往左下判定</span></span><br><span class="line">		<span class="keyword">if</span>(a&lt;<span class="number">16</span> &amp;&amp; b&gt;<span class="number">3</span> &amp;&amp; blackScore&lt;<span class="number">5</span>)	&#123;</span><br><span class="line">			blackScore=<span class="number">1</span>;</span><br><span class="line">			whiteScore=<span class="number">1</span>;</span><br><span class="line">			<span class="type">int</span> a1=a;</span><br><span class="line">			<span class="type">int</span> b1=b;</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)	&#123;</span><br><span class="line">				<span class="type">int</span> a0=a1++;</span><br><span class="line">				<span class="type">int</span> b0=b1--;</span><br><span class="line">	            <span class="keyword">if</span>(goBang[a1][b1].equals(goBang[a0][b0])</span><br><span class="line">						&amp;&amp; goBang[a1][b1].equals(black))	&#123;</span><br><span class="line">					blackScore++;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">if</span>(goBang[a1][b1].equals(goBang[a0][b0])</span><br><span class="line">						&amp;&amp; goBang[a1][b1].equals(white))	&#123;</span><br><span class="line">					whiteScore++;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">if</span>(blackScore&gt;=<span class="number">5</span>)	&#123;</span><br><span class="line">					begin=<span class="literal">false</span>;</span><br><span class="line">					System.out.println(<span class="string">&quot;游戏结束，你赢了！&quot;</span>);</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">if</span>(whiteScore&gt;=<span class="number">5</span>)	&#123;</span><br><span class="line">					begin=<span class="literal">false</span>;</span><br><span class="line">					System.out.println(<span class="string">&quot;游戏结束，你输了！&quot;</span>);</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">	            &#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//4.2 从左下往右上判定</span></span><br><span class="line">		<span class="keyword">if</span>(a&gt;<span class="number">3</span> &amp;&amp; b&lt;<span class="number">16</span> &amp;&amp; blackScore&lt;<span class="number">5</span>)	&#123;</span><br><span class="line">			blackScore=<span class="number">1</span>;</span><br><span class="line">			whiteScore=<span class="number">1</span>;</span><br><span class="line">			<span class="type">int</span> a1=a;</span><br><span class="line">			<span class="type">int</span> b1=b;</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)	&#123;</span><br><span class="line">				<span class="type">int</span> a0=a1--;</span><br><span class="line">				<span class="type">int</span> b0=b1++;</span><br><span class="line">				<span class="keyword">if</span>(goBang[a1][b1].equals(goBang[a0][b0])</span><br><span class="line">						&amp;&amp; goBang[a1][b1].equals(black))	&#123;</span><br><span class="line">					blackScore++;</span><br><span class="line">				&#125;</span><br><span class="line">	            <span class="keyword">if</span>(goBang[a1][b1].equals(goBang[a0][b0])</span><br><span class="line">						&amp;&amp; goBang[a1][b1].equals(white))	&#123;</span><br><span class="line">					whiteScore++;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">if</span>(blackScore&gt;=<span class="number">5</span>)	&#123;</span><br><span class="line">					begin=<span class="literal">false</span>;</span><br><span class="line">					System.out.println(<span class="string">&quot;游戏结束，你赢了！&quot;</span>);</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">if</span>(whiteScore&gt;=<span class="number">5</span>)	&#123;</span><br><span class="line">					begin=<span class="literal">false</span>;</span><br><span class="line">					System.out.println(<span class="string">&quot;游戏结束，你输了！&quot;</span>);</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;  </span><br></pre></td></tr></table></figure>


<blockquote>
<ol start="6">
<li>保存，输出结果如图所示：<br><img src="https://cdn.jsdelivr.net/gh/Li-hui327/PhotoBed/img/wuziqi.JPG"></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>Java中的空对象</title>
    <url>/posts/31520/</url>
    <content><![CDATA[<p>详细介绍可参考<a href="https://blog.csdn.net/lgh2691861/article/details/52248038?utm_source=app&app_version=4.5.2">《Java中空对象（null)引用方法及属性简单分析！》</a>  </p>
<span id="more"></span>  

<p><strong>完！</strong>  </p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>Java注释:类、方法和字段注释</title>
    <url>/posts/65033/</url>
    <content><![CDATA[<p>详细介绍可参考c语言中文网教程<a href="http://c.biancheng.net/view/6114.html">《Java注释:类、方法和字段注释》</a>。  </p>
<span id="more"></span>  

<p><strong>完！</strong>  </p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>Java用户修改密码程序</title>
    <url>/posts/63646/</url>
    <content><![CDATA[<p>详细内容请看阅读全文：</p>
<span id="more"></span>  

<p>每一个应用系统或程序都离不开用户模块。用户模块除了提供登录之外，还允许用户查看自己的信息和进行修改。本实例将创建一个用户类，然后再创建一个测试类调用用户类，实现修改密码的功能。</p>
<ol>
<li><p>先创建用户类，仅包含用户名和密码两个属性。  </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> classExample;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Member</span> &#123;<span class="comment">//用户类</span></span><br><span class="line">	<span class="keyword">private</span> String username;<span class="comment">//用户名</span></span><br><span class="line">	<span class="keyword">private</span> String password;<span class="comment">//密码</span></span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">getUsername</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> username;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUsername</span><span class="params">(String username)</span> &#123;</span><br><span class="line">		<span class="built_in">this</span>.username=username;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">getPassword</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> password;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPassword</span><span class="params">(String password)</span> &#123;</span><br><span class="line">		<span class="built_in">this</span>.password=password;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="title function_">Member</span><span class="params">(String username, String password)</span> &#123;</span><br><span class="line">		<span class="built_in">this</span>.username=username;</span><br><span class="line">		<span class="built_in">this</span>.password=password;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">&quot;用户名：&quot;</span> + username + <span class="string">&quot;\n密码：&quot;</span> + password;</span><br><span class="line">		<span class="comment">//输出用户信息</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>再创建MemberTest类实现修改密码的功能，即当用户输入的密码与原理密码相同时方可进行修改密码操作，否则提示用户输入的密码不正确。  </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> classExample;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MemberTest</span> &#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">		Member admin=<span class="keyword">new</span> <span class="title class_">Member</span>(<span class="string">&quot;admin&quot;</span>,<span class="string">&quot;123456&quot;</span>);</span><br><span class="line">		<span class="comment">//创建用户对象</span></span><br><span class="line">		<span class="meta">@SuppressWarnings(&quot;resource&quot;)</span></span><br><span class="line">		Scanner input=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">		System.out.println(<span class="string">&quot;请输入原密码：&quot;</span>);</span><br><span class="line">		String pwd=input.next();<span class="comment">//获取用户输入的原密码</span></span><br><span class="line">		<span class="keyword">if</span>(pwd.equals(admin.getPassword())) &#123;</span><br><span class="line">			<span class="comment">//对用户输入的密码与原密码进行验证</span></span><br><span class="line">			System.out.println(<span class="string">&quot;请输入新密码：&quot;</span>);</span><br><span class="line">			admin.setPassword(input.next());</span><br><span class="line">			<span class="comment">//获取用户输入的新密码</span></span><br><span class="line">		&#125;	<span class="keyword">else</span> &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;输入的密码错误，无法进行修改！&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		System.out.println(<span class="string">&quot;————————用户信息————————\n&quot;</span></span><br><span class="line">				+ admin);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
<p>在main()方法中创建了Member类的对象admin，并访问了该对象的成员变量password和成员方法toString()。  </p>
<p>输出结果如图所示：<img src="https://cdn.jsdelivr.net/gh/Li-hui327/PhotoBed/img/chpw.JPG">  <img src="https://cdn.jsdelivr.net/gh/Li-hui327/PhotoBed/img/chpw2.JPG">  </p>
<p><strong>完！</strong>  </p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>Java程序易错点</title>
    <url>/posts/21658/</url>
    <content><![CDATA[<p>易错点警示：  </p>
<span id="more"></span>

<p>1、增强的for循环出现的错误：  </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> a[]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> n=<span class="number">0</span>;n&lt;a.length;n++) &#123;</span><br><span class="line">            System.out.println(a[n]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i:a) &#123;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> m=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(m:a) &#123;<span class="comment">//错误</span></span><br><span class="line">            System.out.println(m);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2、<img src="https://cdn.jsdelivr.net/gh/Li-hui327/PhotoBed/img/javaCuoTi.JPG">  </p>
<p>3、<img src="https://cdn.jsdelivr.net/gh/Li-hui327/PhotoBed/img/javaCuoTi2.JPG">  </p>
<p><img src="https://cdn.jsdelivr.net/gh/Li-hui327/PhotoBed/img/javaCuoTi2_2.JPG">  </p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>Java访问控制修饰符详解</title>
    <url>/posts/44557/</url>
    <content><![CDATA[<p>详细介绍可参考C语言中文网Java教程<a href="http://c.biancheng.net/view/965.html">《Java访问控制修饰符详解(public、private、protected和friendly)</a>  </p>
<span id="more"></span>  

<p><strong>完！</strong>  </p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>Lambda表达式与匿名内部类的联系和区别</title>
    <url>/posts/47201/</url>
    <content><![CDATA[<p>分享一篇文章：<a href="https://blog.csdn.net/hlang8160/article/details/78285971?utm_source=app&app_version=4.5.8">《Lambda表达式与匿名内部类的联系和区别》</a>  </p>
<span id="more"></span>  

<p><strong>完！</strong></p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>Java类和对象</title>
    <url>/posts/21840/</url>
    <content><![CDATA[<p>原创详见<a href="http://c.biancheng.net/java/80/">Java类和对象</a>   </p>
<span id="more"></span>  

<h2 id="本章学习要点"><a href="#本章学习要点" class="headerlink" title="本章学习要点"></a>本章学习要点</h2><ol>
<li>掌握类的声明和类的成员  </li>
<li>熟悉类的构造方法及其使用  </li>
<li>掌握对象的创建、销毁和使用  </li>
<li>掌握main()方法、构造方法和析构方法的使用  </li>
<li>熟悉this关键字的使用  </li>
<li>了解系统提供的常用包  </li>
<li>掌握如何声明和使用包</li>
</ol>
<p>本章内容：</p>
<table>
<thead>
<tr>
<th align="center"><a href="/My2Blog/2021/02/16/%E6%B5%85%E8%B0%88Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1">1. 浅谈Java面向对象</a></th>
<th align="center"><a href="http://c.biancheng.net/view/940.html">2. Java认识类和对象</a></th>
<th align="center"><a href="http://c.biancheng.net/view/943.html">3. Java类的定义以及定义类时可用的关键字</a></th>
<th align="center"><a href="http://c.biancheng.net/view/945.html">4. Java类的属性：成员变量的定义和声明</a></th>
</tr>
</thead>
<tbody><tr>
<td align="center"><a href="http://c.biancheng.net/view/948.html">5. Java创建一个学生类</a></td>
<td align="center"><a href="http://c.biancheng.net/view/952.html">6. Java成员方法的声明和调用</a></td>
<td align="center"><a href="http://c.biancheng.net/view/953.html">7. Java this关键字详解（3种用法）</a></td>
<td align="center"><a href="http://c.biancheng.net/view/956.html">8. Java创建对象详解（显式创建和隐含创建）</a></td>
</tr>
<tr>
<td align="center"><a href="https://blog.csdn.net/qq_44861675/article/details/105428749?utm_source=app&app_version=4.5.2">9. Java new运算符深入剖析</a></td>
<td align="center"><a href="http://c.biancheng.net/view/6104.html">10. Java匿名对象</a></td>
<td align="center"><a href="http://c.biancheng.net/view/957.html">11. Java访问对象的属性和行为</a></td>
<td align="center"><a href="http://c.biancheng.net/view/959.html">12. Java对象的销毁</a></td>
</tr>
<tr>
<td align="center"><a href="/My2Blog/2021/03/01/Java%E4%B8%AD%E7%9A%84%E7%A9%BA%E5%AF%B9%E8%B1%A1">13. Java中的空对象</a></td>
<td align="center"><a href="/My2Blog/2021/03/01/Java%E7%94%A8%E6%88%B7%E4%BF%AE%E6%94%B9%E5%AF%86%E7%A0%81%E7%A8%8B%E5%BA%8F">14. Java用户修改密码程序</a></td>
<td align="center"><a href="/My2Blog/2021/03/01/Java%E6%B3%A8%E9%87%8A-%E7%B1%BB%E3%80%81%E6%96%B9%E6%B3%95%E5%92%8C%E5%AD%97%E6%AE%B5%E6%B3%A8%E9%87%8A">15. Java注释类、方法和字段注释</a></td>
<td align="center"><a href="/My2Blog/2021/03/05/Java%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6%E4%BF%AE%E9%A5%B0%E7%AC%A6%E8%AF%A6%E8%A7%A3">16. Java访问控制修饰符详解</a></td>
</tr>
<tr>
<td align="center"><a href="http://c.biancheng.net/view/6150.html">17. Java import static静态导入</a></td>
<td align="center">[18. Java static的常见问题和使用误区](&#x2F;My2Blog&#x2F;2021&#x2F;03&#x2F;07&#x2F;Java static的常见问题和使用误区)</td>
<td align="center"><a href="http://c.biancheng.net/view/6053.html">19. Java final修饰符详解</a></td>
<td align="center"><a href="http://c.biancheng.net/view/6053.html">20. Java final修饰符详解</a></td>
</tr>
<tr>
<td align="center"><a href="http://c.biancheng.net/view/972.html">21. Java main()方法</a></td>
<td align="center"><a href="https://blog.csdn.net/qq_51372098/article/details/112699979?utm_source=app&app_version=4.5.2">22. Java中的main()方法的格式为什么是固定不变的</a></td>
<td align="center"><a href="http://c.biancheng.net/view/974.html">23. Java方法的可变参数</a></td>
<td align="center"><a href="http://c.biancheng.net/view/976.html">24. Java构造方法</a></td>
</tr>
<tr>
<td align="center"><a href="http://c.biancheng.net/view/979.html">25. Java查询个人信息</a></td>
<td align="center"><a href="http://c.biancheng.net/view/980.html">26. Java析构方法</a></td>
<td align="center"><a href="http://c.biancheng.net/view/6084.html">27. Java包(package)详解</a></td>
<td align="center"><a href="http://c.biancheng.net/view/985.html">28. Java使用自定义包</a></td>
</tr>
<tr>
<td align="center"><a href="http://c.biancheng.net/view/6116.html">29. Java递归算法</a></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
</tr>
</tbody></table>
<p><strong>完！</strong>  </p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>Python Eclipse+PyDec下载和安装教程</title>
    <url>/posts/6853/</url>
    <content><![CDATA[<p>详细介绍请参考C语言中文网教程<a href="http://c.biancheng.net/view/5810.html">Python Eclipse+PyDec下载和安装教程</a>，以及csdn大佬的<a href="https://blog.csdn.net/yuhaibao324/article/details/108058452?utm_source=app&app_version=4.5.2">Eclipse+PyDec运行Python程序</a>。  </p>
<span id="more"></span>  

<p>若遇到安装失败问题的，请参考这两篇文章，相信会对你有所启发：  </p>
<ul>
<li><a href="https://blog.csdn.net/bb188641864/article/details/78203252?utm_source=app&app_version=4.5.2">eclipse pydev安装不成功 安装失败 异常</a>  </li>
<li><a href="https;//blog.csdn.net/u014267402/article/details/53054407?utm_source=app&app_version=4.5.2">eclipse安装PyDev所遇问题总结</a></li>
</ul>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>Python最简单的图片爬虫</title>
    <url>/posts/19823/</url>
    <content><![CDATA[<p>分享一篇文章，很有技术含量，值得我去学习。  </p>
<p><a href="https://blog.csdn.net/RRRJ97699/article/details/107159814?utm_source=app&app_version=4.5.7">Python最简单的图片爬虫，只用20行代码爬遍全网</a>  </p>
<span id="more"></span>  

<p><strong>完！</strong>  </p>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>MIT教授推荐的学习方法</title>
    <url>/posts/29170/</url>
    <content><![CDATA[<p>老师这样说的，在你思考难题时，如果独自想了45分钟左右仍没有解决题目，那么你就应该选择放弃，就算完全没有搞懂也没有关系，在接下来的时间里可以做其它更有意义的事，难题一般需要团队协作来解决，不仅效率高，而且对个人的学习能力的提升也有很大的帮助，不过，要在团队解决问题之前应该独立思考45分钟左右做好准备，应该怎么问。  </p>
<span id="more"></span>  

<p><strong>完！</strong></p>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>VSCode Code Runner插件运行Java程序输出乱码</title>
    <url>/posts/59895/</url>
    <content><![CDATA[<img src="https://w.wallhaven.cc/full/4g/wallhaven-4g6l30.jpg" style="zoom: 25%;" />  

<span id="more"></span>  

<p>转载一篇文章，我觉得这篇文章可能对出现像标题那样的问题有很大的帮助：<a href="https://jingyan.baidu.com/article/3f16e00313b1a72591c1030a.html">VSCode Code Runner插件运行Java代码输出乱码-百度经验</a>  </p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows安装Git以及连接GitHub</title>
    <url>/posts/5303/</url>
    <content><![CDATA[<h3 id="1-安装"><a href="#1-安装" class="headerlink" title="1.安装"></a>1.安装</h3><ul>
<li><p>Git下载地址：<a href="https://git-scm.com/download">https://git-scm.com/download</a> 根据对应的版本下载安装即可   如果不想修改安装目录的话，一路next即可，修改安装目录后也是一路next即可    </p>
<span id="more"></span></li>
</ul>
<h3 id="2-检查"><a href="#2-检查" class="headerlink" title="2.检查"></a>2.检查</h3><ul>
<li>检查git是否安装成功，在cmd窗口中，输入git显示如下：<br>  <img src="http://qiniu.iloveszy.com/blog/2023/git.png" alt="git 显示"></li>
</ul>
<h3 id="3-连接"><a href="#3-连接" class="headerlink" title="3.连接"></a>3.连接</h3><ul>
<li>Git连接Github，首先在<a href="https://github.com/">Github</a>上注册一个账号(有账号的可以先建一个仓库，之后什么也不做，留着之后用)</li>
</ul>
<h3 id="4-配置"><a href="#4-配置" class="headerlink" title="4.配置"></a>4.配置</h3><ul>
<li>可在桌面右键菜单点击Open Git Bash Here，如下图：<img src="http://qiniu.iloveszy.com/blog/2023/git%20bash.png"> 接着在打开的窗口设置user.name和user.email配置信息：</li>
</ul>
<ol>
<li><code>git config --global user.name &quot;你的GitHub用户名&quot;</code>    回车</li>
<li><code>git config --global user.email &quot;你的GitHub注册邮箱&quot;</code>    回车</li>
</ol>
<ul>
<li>然后生成ssh密钥文件<br>  <code>ssh-keygen -t rsa -C &quot;你的GitHub注册邮箱&quot;</code>  回车<strong>两次</strong>，<strong>不要输入任何东西</strong>    </li>
<li>在C:\Users\用户名.ssh 中找到id_rsa.pub(用记事本打开)，它会有提示你在哪里找到这个id_rsa.pub文件，将里面的所有内容全部复制出来   </li>
<li>在<a href="https://github.com/settings/keys">https://github.com/settings/keys</a>点击New SSH key,如下：<img src="http://qiniu.iloveszy.com/blog/2023/ssh%20key.png">  </li>
<li>Title随便填写，Key粘贴刚才复制的key，然后点击Add SSH key</li>
</ul>
<h3 id="5-检验"><a href="#5-检验" class="headerlink" title="5.检验"></a>5.检验</h3><ul>
<li>在Git Bash中输入 <code>ssh git@github.com</code> 如果显示下图说明连接成功 <img src="http://qiniu.iloveszy.com/blog/2023/ssh%20git.png"></li>
</ul>
<h3 id="6-可能会出现的问题"><a href="#6-可能会出现的问题" class="headerlink" title="6.可能会出现的问题"></a>6.可能会出现的问题</h3><p>我在win11上测试时发现在生成ssh密钥文件时，如果只回车一次它不会生成文件，即使上面已经提升生成了文件，但是当你按它给出的路径去找时会发现不存在该路径，另外回车一次后最好不要输入任何东西再回车，否则它就会在你open bash的地方生成密钥文件，而不是在用户文件夹下生成。</p>
<p>回车两次即可，不需要输入任何东西。</p>
]]></content>
      <categories>
        <category>博客教程</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>hexo</tag>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows安装Node.js</title>
    <url>/posts/11257/</url>
    <content><![CDATA[<h3 id="1-下载"><a href="#1-下载" class="headerlink" title="1.下载"></a>1.下载</h3><p><a href="https://nodejs.org/zh-cn/download">官网下载地址</a>     </p>
<span id="more"></span>  

<h3 id="2-安装"><a href="#2-安装" class="headerlink" title="2.安装"></a>2.安装</h3><p>如果不想修改安装目录的话，一路next即可，修改安装目录后也是一路next即可    </p>
<h3 id="3-检验"><a href="#3-检验" class="headerlink" title="3.检验"></a>3.检验</h3><p>在cmd窗口中输入如下指令：    </p>
<ol>
<li><code>node -v</code>    <ol start="2">
<li><code>npm -v</code></li>
</ol>
</li>
</ol>
<p>显示结果如下代表安装成功：<img src="http://qiniu.iloveszy.com/blog/2023/node%20-v.png">     </p>
<h3 id="4-配值环境变量"><a href="#4-配值环境变量" class="headerlink" title="4.配值环境变量"></a>4.配值环境变量</h3><ol>
<li>首先在nodejs这个文件夹(即刚刚安装node.js所在目录下)建立”node_global”和”node_cache”两个文件夹，如图：<img src="http://qiniu.iloveszy.com/blog/2023/node_global.png">    </li>
<li>打开cmd(是以管理员身份运行，我以前没有以管理员身份运行，后面就会出现错误)，输入：</li>
</ol>
<ul>
<li><code>npm config set prefix &quot;你的路径\nodejs\node_global&quot;</code>  回车   </li>
<li><code>npm config set cache &quot;你的路径\nodejs\node_cache&quot;</code>  回车   </li>
<li>然后关闭cmd窗口，使用win+r键输入control打开控制面板，找到系统-高级系统设置-高级-环境变量，在<em>系统变量</em>下新建变量 <code>NODE_PATH</code> ，变量值填写：<br><code>你的路径\nodejs\node_global\node_modules</code>     </li>
<li>在变量path下新建新的路径：<img src="http://qiniu.iloveszy.com/blog/2023/node%20path.png"></li>
</ul>
<h3 id="5-可能出现的错误"><a href="#5-可能出现的错误" class="headerlink" title="5.可能出现的错误"></a>5.可能出现的错误</h3><ol>
<li>我在win11上遇到过安装hexo失败的问题，原因是权限问题，即之前没用管理员模式打开cmd设置，用户无权访问node_global、node_cache和node_modules文件夹，解决办法是手动更改权限，右键node_cache、node_global、node_modules，属性，安全，更改Authenticated Users的权限，主要是允许写入，然后应用后再确定，如图所示：</li>
</ol>
<p><img src="http://qiniu.iloveszy.com/blog/2023/%E6%9B%B4%E6%94%B9node_global%E6%9D%83%E9%99%90.png"></p>
<ol start="2">
<li>打开cmd窗口，如果你已经安装hexo，输入<code>hexo -v</code>，会出现如下所示，即代表你已经安装成功hexo。</li>
</ol>
<p><img src="http://qiniu.iloveszy.com/blog/2023/hexo%20-v.png"></p>
<p>若出现既不是内部也不是外部指令，就需要设置hexo的路径，如图所示，系统-高级系统设置-高级-环境变量-系统变量-Path，新建路径，如图所示，<em>注意下面这个是设置你的hexo路径，我是因为自定义安装node.js，所以需要手动设置hexo指令路径，你需要找到它，并path上添加这个路径。</em>      </p>
<p><img src="http://qiniu.iloveszy.com/blog/2023/%E6%B7%BB%E5%8A%A0hexo%E8%B7%AF%E5%BE%84.png"></p>
]]></content>
      <categories>
        <category>博客教程</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/posts/16107/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<span id="more"></span>

<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>博客教程</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>不言弃，是胜利的第一步</title>
    <url>/posts/13928/</url>
    <content><![CDATA[<p>成功路上需要不断的坚持，需要多读书，许多伟大的人之所以能成功就在于他们读的书多，思考的多，所以就能成功。</p>
<span id="more"></span>

<iframe width="750" height="435" src="https://ydlunacommon-cdn.nosdn.127.net/494bd228676511fbc63997dd39d3f754.mp4" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>励志</tag>
      </tags>
  </entry>
  <entry>
    <title>个性化博客</title>
    <url>/posts/16544/</url>
    <content><![CDATA[<div class="poem-wrap">
  <div class="poem-border poem-left"></div>
  <div class="poem-border poem-right"></div>
    <h1>诗词</h1>
    <p id="poem">挑选中...</p>
    <p id="info">
   <script src="https://sdk.jinrishici.com/v2/browser/jinrishici.js" charset="utf-8"></script>
  <script type="text/javascript">
    jinrishici.load(function(result) {
      poem.innerHTML = result.data.content
      info.innerHTML = '【' + result.data.origin.dynasty + '】' + result.data.origin.author + '《' + result.data.origin.title + '》'
      document.getElementById("poem").value(poem);
      document.getElementById("info").value(info);  
  });
  </script>
</div>

<span id="more"></span>

<h2 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h2><p>官方主题网站：<a href="https://hexo.io/themes/">https://hexo.io/themes/</a>.</p>
<p>我使用的主题是NexT，官网：<a href="https://github.com/next-theme/hexo-theme-next">next-theme&#x2F;hexo-theme-next: 🎉 Elegant and powerful theme for Hexo. (github.com)</a>.</p>
<p>预览界面：<a href="https://theme-next.js.org/">NexT - Theme for Hexo (theme-next.js.org)</a>.</p>
<p>使用步骤官网上有，建议使用命令下载主题：<code>npm install hexo-theme-next</code>，下载过程可能需要科学上网。</p>
<p>下载好后，在博客根目录下修改<code>_config.yml</code>，设置theme主题为next</p>
<p><code>theme: next</code></p>
<h2 id="修改主题风格"><a href="#修改主题风格" class="headerlink" title="修改主题风格"></a>修改主题风格</h2><p>next主题提供了四种风格可供切换，我选择的是默认风格，如下所示</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Scheme Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># Schemes</span><br><span class="line">scheme: Muse</span><br><span class="line">#scheme: Mist</span><br><span class="line">#scheme: Pisces</span><br><span class="line">#scheme: Gemini</span><br></pre></td></tr></table></figure>

<h3 id="设置icon"><a href="#设置icon" class="headerlink" title="设置icon"></a>设置icon</h3><p>下载地址：<a href="https://www.iconfont.cn/">https://www.iconfont.cn/</a>.</p>
<p>将下载的icon放置在<code>/博客根目录/node_modules/hexo-theme-next/source/images</code></p>
<p>修改主题配置文件中<code>favicon</code>中的内容。</p>
<h3 id="设置菜单栏"><a href="#设置菜单栏" class="headerlink" title="设置菜单栏"></a>设置菜单栏</h3><ol>
<li>编辑主题配置文件<code>_config.yml</code>，修改menu中的内容，将想要展示的内容取消注释。</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: / || fa fa-home</span><br><span class="line">  about: /about/ || fa fa-user</span><br><span class="line">  tags: /tags/ || fa fa-tags</span><br><span class="line">  categories: /categories/ || fa fa-th</span><br><span class="line">  archives: /archives/ || fa fa-archive</span><br><span class="line">  #schedule: /schedule/ || fa fa-calendar</span><br><span class="line">  #sitemap: /sitemap.xml || fa fa-sitemap</span><br><span class="line">  #commonweal: /404/ || fa fa-heartbeat</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>创建页面</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 在站点的根目录</span><br><span class="line"># 下面分别创建 about categories tags 页面</span><br><span class="line">hexo new page about</span><br><span class="line">hexo new page categories</span><br><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>修改<code>type</code></li>
</ol>
<p>创建页面后，在<code>/博客根目录/source/</code>目录中可以看到新创建的页面，修改其中的<code>index.md</code>文件，增加or修改：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 下面是 tags 页面的，categories 页面则是 categories</span><br><span class="line">type: tags</span><br></pre></td></tr></table></figure>

<p>修改之后，可以在本地运行并验证一下，看本地的博客菜单栏中是否正常显示添加的页面。</p>
<ol start="4">
<li>添加公益404，方法同上面，在<code>index.md</code>文件中添加下面的代码：</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE HTML&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html;charset=utf-8;&quot;/&gt;</span><br><span class="line">  &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot; /&gt;</span><br><span class="line">  &lt;meta name=&quot;robots&quot; content=&quot;all&quot; /&gt;</span><br><span class="line">  &lt;meta name=&quot;robots&quot; content=&quot;index,follow&quot;/&gt;</span><br><span class="line">  &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://qzone.qq.com/gy/404/style/404style.css&quot;&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;script type=&quot;text/plain&quot; src=&quot;http://www.qq.com/404/search_children.js&quot;</span><br><span class="line">          charset=&quot;utf-8&quot; homePageUrl=&quot;/&quot;</span><br><span class="line">          homePageName=&quot;回到我的主页&quot;&gt;</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">  &lt;script src=&quot;https://qzone.qq.com/gy/404/data.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script src=&quot;https://qzone.qq.com/gy/404/page.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<ol start="5">
<li>配置回到顶部按钮</li>
</ol>
<p>修改主题配置文件<code>_config.yml</code>，将back2top的enable设置为true即可，边栏和滚动百分比可以按照需求自行添加。</p>
<ol start="6">
<li>设置已读进度条</li>
</ol>
<p>将<code>reading_progress</code>的enable设置为true即可，位置、颜色和高度都可以调整。</p>
<ol start="7">
<li>边角的GitHub banner</li>
</ol>
<p>修改<code>github_banner</code>，设置为true即可。</p>
<ol start="8">
<li>设置头像</li>
</ol>
<p>修改<code>avatar</code>，url设置为<code>https://pic.imgdb.cn/api/avatar</code>，可以设置头像是否为圆形以及旋转。</p>
<ol start="9">
<li>设置语言</li>
</ol>
<p>打开<code>博客根目录/node_modules/hexo-theme-next/languages</code>，可以看到支持的语言。</p>
<p>编辑<strong>站点配置文件</strong>，修改<code>language</code>，填入上述目录下的文件夹名称。</p>
<h3 id="添加友链"><a href="#添加友链" class="headerlink" title="添加友链"></a>添加友链</h3><h4 id="1-新增links页面"><a href="#1-新增links页面" class="headerlink" title="1.新增links页面"></a>1.新增links页面</h4><p>博客根目录下打开终端，输入：<code>hexo new page links</code></p>
<p><strong>PS</strong>：也可以在<code>source</code>目录下手动创建，需要手动创建<code>index.md</code>文件</p>
<h4 id="2-配置menu"><a href="#2-配置menu" class="headerlink" title="2.配置menu"></a>2.配置menu</h4><p>主题配置文件<code>_config.yml</code>中<code>menu</code>下添加：</p>
<p><code>links: /links/ || fa fa-link</code></p>
<p><code>主题/languages/zh-CN.yml</code>文件中<code>menu</code>下增加中文描述</p>
<p><code>links: 友链</code></p>
<h4 id="3-新增links-njk文件"><a href="#3-新增links-njk文件" class="headerlink" title="3.新增links.njk文件"></a>3.新增<code>links.njk</code>文件</h4><p>新建<code>links.njk</code>文件，具体是什么后缀名取决于next主题的layout目录下的文件是什么后缀名，不同的版本后缀名可能不一样。</p>
<p>内容如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% block content %&#125;</span><br><span class="line">  &#123;######################&#125;</span><br><span class="line">  &#123;### LINKS BLOCK ###&#125;</span><br><span class="line">  &#123;######################&#125;</span><br><span class="line"></span><br><span class="line">    &lt;div id=&quot;links&quot;&gt;</span><br><span class="line">        &lt;style&gt;</span><br><span class="line"></span><br><span class="line">            #links&#123;</span><br><span class="line">               margin-top: 5rem;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            .links-content&#123;</span><br><span class="line">                margin-top:1rem;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            .link-navigation::after &#123;</span><br><span class="line">                content: &quot; &quot;;</span><br><span class="line">                display: block;</span><br><span class="line">                clear: both;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            .card &#123;</span><br><span class="line">                width: 300px;</span><br><span class="line">                font-size: 1rem;</span><br><span class="line">                padding: 10px 20px;</span><br><span class="line">                border-radius: 4px;</span><br><span class="line">                transition-duration: 0.15s;</span><br><span class="line">                margin-bottom: 1rem;</span><br><span class="line">                display:flex;</span><br><span class="line">            &#125;</span><br><span class="line">            .card:nth-child(odd) &#123;</span><br><span class="line">                float: left;</span><br><span class="line">            &#125;</span><br><span class="line">            .card:nth-child(even) &#123;</span><br><span class="line">                float: right;</span><br><span class="line">            &#125;</span><br><span class="line">            .card:hover &#123;</span><br><span class="line">                transform: scale(1.1);</span><br><span class="line">                box-shadow: 0 2px 6px 0 rgba(0, 0, 0, 0.12), 0 0 6px 0 rgba(0, 0, 0, 0.04);</span><br><span class="line">            &#125;</span><br><span class="line">            .card a &#123;</span><br><span class="line">                border:none;</span><br><span class="line">            &#125;</span><br><span class="line">            .card .ava &#123;</span><br><span class="line">                width: 3rem!important;</span><br><span class="line">                height: 3rem!important;</span><br><span class="line">                margin:0!important;</span><br><span class="line">                margin-right: 1em!important;</span><br><span class="line">                border-radius:4px;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            .card .card-header &#123;</span><br><span class="line">                font-style: italic;</span><br><span class="line">                overflow: hidden;</span><br><span class="line">                width: 236px;</span><br><span class="line">            &#125;</span><br><span class="line">            .card .card-header a &#123;</span><br><span class="line">                font-style: normal;</span><br><span class="line">                color: #2bbc8a;</span><br><span class="line">                font-weight: bold;</span><br><span class="line">                text-decoration: none;</span><br><span class="line">            &#125;</span><br><span class="line">            .card .card-header a:hover &#123;</span><br><span class="line">                color: #d480aa;</span><br><span class="line">                text-decoration: none;</span><br><span class="line">            &#125;</span><br><span class="line">            .card .card-header .info &#123;</span><br><span class="line">                font-style:normal;</span><br><span class="line">                color:#a3a3a3;</span><br><span class="line">                font-size:14px;</span><br><span class="line">                min-width: 0;</span><br><span class="line">                text-overflow: ellipsis;</span><br><span class="line">                overflow: hidden;</span><br><span class="line">                white-space: nowrap;</span><br><span class="line">            &#125;</span><br><span class="line">        &lt;/style&gt;</span><br><span class="line">        &lt;div class=&quot;links-content&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;link-navigation&quot;&gt;</span><br><span class="line"></span><br><span class="line">                &#123;% for link in theme.mylinks %&#125;</span><br><span class="line"></span><br><span class="line">                    &lt;div class=&quot;card&quot;&gt;</span><br><span class="line">                        &lt;img class=&quot;ava&quot; src=&quot;&#123;&#123; link.avatar &#125;&#125;&quot;/&gt;</span><br><span class="line">                        &lt;div class=&quot;card-header&quot;&gt;</span><br><span class="line">                        &lt;div&gt;&lt;a href=&quot;&#123;&#123; link.site &#125;&#125;&quot; target=&quot;_blank&quot;&gt;@ &#123;&#123; link.nickname &#125;&#125;&lt;/a&gt;&lt;/div&gt;</span><br><span class="line">                        &lt;div class=&quot;info&quot;&gt;&#123;&#123; link.info &#125;&#125;&lt;/div&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">                &#123;% endfor %&#125;</span><br><span class="line"></span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &#123;&#123; page.content &#125;&#125;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">  &#123;##########################&#125;</span><br><span class="line">  &#123;### END LINKS BLOCK ###&#125;</span><br><span class="line">  &#123;##########################&#125;</span><br><span class="line">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure>

<h4 id="4-修改page-njk"><a href="#4-修改page-njk" class="headerlink" title="4.修改page.njk"></a>4.修改<code>page.njk</code></h4><p>修改<code>主题/layout/page.njk</code>文件，在</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;%- elif page.type === &#x27;tags&#x27; and not page.title %&#125;</span><br><span class="line">    &#123;&#123;- __(&#x27;title.tag&#x27;) + page_title_suffix &#125;&#125;</span><br></pre></td></tr></table></figure>

<p>位置下添加类似代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;%- elif page.type === &#x27;links&#x27; and not page.title %&#125;</span><br><span class="line">    &#123;&#123;- __(&#x27;title.links&#x27;) + page_title_suffix &#125;&#125;</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<p><img src="http://qiniu.iloveszy.com/blog/2023/%E5%8F%8B%E9%93%BE%E8%AE%BE%E7%BD%AE1.png"></p>
<h4 id="5-引入links-njk"><a href="#5-引入links-njk" class="headerlink" title="5.引入links.njk"></a>5.引入<code>links.njk</code></h4><p>在<code>主题/layout/page.njk</code>中，在</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% elif page.type === &#x27;categories&#x27; %&#125;</span><br><span class="line">          &#123;%- include &#x27;_partials/page/categories.njk&#x27; -%&#125;</span><br></pre></td></tr></table></figure>

<p>位置下添加类似代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% elif page.type === &#x27;links&#x27; %&#125;</span><br><span class="line">          &#123;%- include &#x27;_partials/page/links.njk&#x27; -%&#125;</span><br></pre></td></tr></table></figure>

<p><strong>PS</strong>：之前新建的文件就放在这个目录下，不要随意更改存放位置。</p>
<h4 id="6-配置友链"><a href="#6-配置友链" class="headerlink" title="6.配置友链"></a>6.配置友链</h4><p>在主题配置文件<code>_config.yml</code>中配置友链，menu下方新增<code>mylinks</code>，如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mylinks:</span><br><span class="line">- nickname: &#x27;黎辉&#x27;</span><br><span class="line">  avatar: https://pic.imgdb.cn/api/avatar</span><br><span class="line">  site: https://iloveszy.com/</span><br><span class="line">  info: 攀峰之高险，岂有崖颠；搏海之明辉，何来彼岸？前进不止，奋斗不息。</span><br><span class="line">  </span><br><span class="line">- nickname: &#x27;花猪のBLOG&#x27;  #友链名称</span><br><span class="line">  avatar: https://gcore.jsdelivr.net/gh/CNhuazhu/Image/avatar.jpg  #友链头像</span><br><span class="line">  site: https://cnhuazhu.top/  #友链地址</span><br><span class="line">  info: 致力于Web应用开发与Python学习,研究,开发。  #友链说明</span><br><span class="line">  </span><br><span class="line">- nickname: &#x27;This is a Lengux blog&#x27;</span><br><span class="line">  avatar: http://q1.qlogo.cn/g?b=qq&amp;nk=1217671134&amp;s=100</span><br><span class="line">  site: https://xushao.top/</span><br><span class="line">  info: 这个人很懒，没有介绍他自己。</span><br></pre></td></tr></table></figure>

<blockquote>
<p>这里只配置了三个友链，多个的配置方式相同。</p>
</blockquote>
<h3 id="添加打赏功能"><a href="#添加打赏功能" class="headerlink" title="添加打赏功能"></a>添加打赏功能</h3><p>首先，要将支付宝或者微信打赏的二维码下载下来，可以修剪一下，放在<code>博客根目录/node_modules/hexo-theme-next/source/images</code>文件夹中。</p>
<p>修改主题配置文件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">reward_settings:</span><br><span class="line">  # If true, a donate button will be displayed in every article by default.</span><br><span class="line">  enable: true</span><br><span class="line">  animation: false</span><br><span class="line"></span><br><span class="line">reward:</span><br><span class="line">  wechatpay: /images/wechatpay.png</span><br><span class="line">  alipay: /images/alipay.png</span><br><span class="line">  #paypal: /images/paypal.png</span><br><span class="line">  #bitcoin: /images/bitcoin.png</span><br></pre></td></tr></table></figure>

<h3 id="添加雪花"><a href="#添加雪花" class="headerlink" title="添加雪花"></a>添加雪花</h3><ol>
<li>在<code>博客根目录/node_modules/hexo-theme-next/source/js</code>下新建文件<code>snow.js</code>，添加如下代码：</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">(<span class="keyword">function</span>(<span class="params">$</span>)&#123;</span><br><span class="line">	$.fn.<span class="property">snow</span> = <span class="keyword">function</span>(<span class="params">options</span>)&#123;</span><br><span class="line">	<span class="keyword">var</span> $flake = $(<span class="string">&#x27;&lt;div id=&quot;snowbox&quot; /&gt;&#x27;</span>).<span class="title function_">css</span>(&#123;<span class="string">&#x27;position&#x27;</span>: <span class="string">&#x27;absolute&#x27;</span>,<span class="string">&#x27;z-index&#x27;</span>:<span class="string">&#x27;9999&#x27;</span>, <span class="string">&#x27;top&#x27;</span>: <span class="string">&#x27;-50px&#x27;</span>&#125;).<span class="title function_">html</span>(<span class="string">&#x27;&amp;#10052;&#x27;</span>),</span><br><span class="line">	documentHeight 	= $(<span class="variable language_">document</span>).<span class="title function_">height</span>(),</span><br><span class="line">	documentWidth	= $(<span class="variable language_">document</span>).<span class="title function_">width</span>(),</span><br><span class="line">	defaults = &#123;</span><br><span class="line">		minSize		: <span class="number">10</span>,</span><br><span class="line">		maxSize		: <span class="number">20</span>,</span><br><span class="line">		newOn		: <span class="number">1000</span>,</span><br><span class="line">		flakeColor	: <span class="string">&quot;#AFDAEF&quot;</span> <span class="comment">/* 此处可以定义雪花颜色，若要白色可以改为#FFFFFF */</span></span><br><span class="line">	&#125;,</span><br><span class="line">	options	= $.<span class="title function_">extend</span>(&#123;&#125;, defaults, options);</span><br><span class="line">	<span class="keyword">var</span> interval= <span class="built_in">setInterval</span>( <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">	<span class="keyword">var</span> startPositionLeft = <span class="title class_">Math</span>.<span class="title function_">random</span>() * documentWidth - <span class="number">100</span>,</span><br><span class="line">	startOpacity = <span class="number">0.5</span> + <span class="title class_">Math</span>.<span class="title function_">random</span>(),</span><br><span class="line">	sizeFlake = options.<span class="property">minSize</span> + <span class="title class_">Math</span>.<span class="title function_">random</span>() * options.<span class="property">maxSize</span>,</span><br><span class="line">	endPositionTop = documentHeight - <span class="number">200</span>,</span><br><span class="line">	endPositionLeft = startPositionLeft - <span class="number">500</span> + <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">500</span>,</span><br><span class="line">	durationFall = documentHeight * <span class="number">10</span> + <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">5000</span>;</span><br><span class="line">	$flake.<span class="title function_">clone</span>().<span class="title function_">appendTo</span>(<span class="string">&#x27;body&#x27;</span>).<span class="title function_">css</span>(&#123;</span><br><span class="line">		<span class="attr">left</span>: startPositionLeft,</span><br><span class="line">		<span class="attr">opacity</span>: startOpacity,</span><br><span class="line">		<span class="string">&#x27;font-size&#x27;</span>: sizeFlake,</span><br><span class="line">		<span class="attr">color</span>: options.<span class="property">flakeColor</span></span><br><span class="line">	&#125;).<span class="title function_">animate</span>(&#123;</span><br><span class="line">		<span class="attr">top</span>: endPositionTop,</span><br><span class="line">		<span class="attr">left</span>: endPositionLeft,</span><br><span class="line">		<span class="attr">opacity</span>: <span class="number">0.2</span></span><br><span class="line">	&#125;,durationFall,<span class="string">&#x27;linear&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">		$(<span class="variable language_">this</span>).<span class="title function_">remove</span>()</span><br><span class="line">	&#125;);</span><br><span class="line">	&#125;, options.<span class="property">newOn</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;)(jQuery);</span><br><span class="line">$(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    $.fn.<span class="title function_">snow</span>(&#123; </span><br><span class="line">	    <span class="attr">minSize</span>: <span class="number">5</span>, 	<span class="comment">// 定义雪花最小尺寸 </span></span><br><span class="line">	    <span class="attr">maxSize</span>: <span class="number">50</span>,	<span class="comment">// 定义雪花最大尺寸 </span></span><br><span class="line">	    <span class="attr">newOn</span>: <span class="number">500</span>  	<span class="comment">// 定义密集程度，数字越小越密集 </span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>在<code>博客根目录/node_modules/hexo-theme-next/layout/layout.njk</code>下添加：</li>
</ol>
<p><code>&lt;script src=&quot;/js/snow.js&quot;&gt;&lt;/script&gt;</code></p>
<ol start="3">
<li><strong>注意事项</strong>：需要注意的就是要引入jquery，代码：</li>
</ol>
<p><code>&lt;script type=&quot;text/javascript&quot; src=&quot;//libs.baidu.com/jquery/1.8.3/jquery.min.js&quot;&gt;&lt;/script&gt;</code></p>
<h3 id="配置黑暗模式"><a href="#配置黑暗模式" class="headerlink" title="配置黑暗模式"></a>配置黑暗模式</h3><ol>
<li>安装</li>
</ol>
<p><code>npm install hexo-next-darkmode --save</code></p>
<ol start="2">
<li>修改<code>博客根目录/node_modules/hexo-theme-next/_config.yml</code>文件，确保黑暗模式选项是关闭状态</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Dark Mode</span><br><span class="line">darkmode: false</span><br></pre></td></tr></table></figure>

<p>再添加如下代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Darkmode JS</span><br><span class="line"># For more information: https://github.com/rqh656418510/hexo-next-darkmode, https://github.com/sandoche/Darkmode.js</span><br><span class="line">darkmode_js:</span><br><span class="line">  enable: true</span><br><span class="line">  bottom: &#x27;64px&#x27; # default: &#x27;32px&#x27;</span><br><span class="line">  right: &#x27;unset&#x27; # default: &#x27;32px&#x27;</span><br><span class="line">  left: &#x27;32px&#x27; # default: &#x27;unset&#x27;</span><br><span class="line">  time: &#x27;0.5s&#x27; # default: &#x27;0.3s&#x27;</span><br><span class="line">  mixColor: &#x27;transparent&#x27; # default: &#x27;#fff&#x27;</span><br><span class="line">  backgroundColor: &#x27;transparent&#x27; # default: &#x27;#fff&#x27;</span><br><span class="line">  buttonColorDark: &#x27;#100f2c&#x27; # default: &#x27;#100f2c&#x27;</span><br><span class="line">  buttonColorLight: &#x27;#fff&#x27; # default: &#x27;#fff&#x27;</span><br><span class="line">  isActivated: true # default false</span><br><span class="line">  saveInCookies: false # default: true</span><br><span class="line">  label: &#x27;🌓&#x27; # default: &#x27;&#x27;</span><br><span class="line">  autoMatchOsTheme: false # default: true</span><br><span class="line">  libUrl: # Set custom library cdn url for Darkmode.js</span><br></pre></td></tr></table></figure>

<p>其中</p>
<p><code>isActivated: true</code> 默认用于激活黑暗模式，始终与<code>saveInCookies: false</code>和<code>autoMatchOsTheme: false</code>一起使用。同时，需要在NexT主题的配置文件中设置<code>pjax: true</code>，即启用Pjax。</p>
<h3 id="配置代码块"><a href="#配置代码块" class="headerlink" title="配置代码块"></a>配置代码块</h3><p>新版NexT主题集成了一键复制功能，只需要在主题配置文件中更改即可，不用添加代码，如图所示：</p>
<p><img src="http://qiniu.iloveszy.com/blog/2022/next%E4%B8%BB%E9%A2%98%E4%BB%A3%E7%A0%81%E5%9D%97.jpg"></p>
<h3 id="添加每日一言或诗"><a href="#添加每日一言或诗" class="headerlink" title="添加每日一言或诗"></a>添加每日一言或诗</h3><p><strong>今日诗词官方API文档</strong>：<a href="https://www.jinrishici.com/doc/">https://www.jinrishici.com/doc/</a>.</p>
<ol>
<li>为子标题添加今日诗词</li>
</ol>
<p><strong>使用方法</strong>：博客根目录配置文件<code>_config.yml</code>中的subtitle上加入代码<code>&lt;span id=&quot;jinrishici-sentence&quot;&gt;正在加载今日诗词....&lt;/span&gt;&lt;script src=&quot;https://sdk.jinrishici.com/v2/browser/jinrishici.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;</code>，一行即可。</p>
<ol start="2">
<li>为博客文章添加今日诗词、每日一言</li>
</ol>
<p><code>主题/source/css/_schemes/你所使用的主题/</code></p>
<p>使用的哪个主题就直接在那个主题下的index.styl文件中更改，直接在后面加上如下代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/*诗*/</span><br><span class="line">.poem-wrap &#123;</span><br><span class="line">    position: relative;</span><br><span class="line">    width: 730px;</span><br><span class="line">    max-width: 80%;</span><br><span class="line">    border: 2px solid #797979;</span><br><span class="line">    border-top: none;</span><br><span class="line">    text-align: center;</span><br><span class="line">    margin: 80px auto;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">.poem-wrap h1 &#123;</span><br><span class="line">    font-size: 30px;</span><br><span class="line">    position: relative;</span><br><span class="line">    margin-top: -20px;</span><br><span class="line">    display: inline-block;</span><br><span class="line">    letter-spacing: 4px;</span><br><span class="line">    color: #797979</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">.poem-wrap p &#123;</span><br><span class="line">    width: 70%;</span><br><span class="line">    margin: auto;</span><br><span class="line">    line-height: 30px;</span><br><span class="line">    color: #797979;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">.poem-wrap p#poem &#123;</span><br><span class="line">    font-size: 25px;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">.poem-wrap p#info &#123;</span><br><span class="line">    font-size: 15px;</span><br><span class="line">    margin: 15px auto;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">.poem-border &#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">    height: 2px;</span><br><span class="line">    width: 27%;</span><br><span class="line">    background-color: #797979;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">.poem-right &#123;</span><br><span class="line">    right: 0;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">.poem-left &#123;</span><br><span class="line">    left: 0;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">@media (max-width: 685px) &#123;</span><br><span class="line">    .poem-border &#123;</span><br><span class="line">        width: 18%;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">@media (max-width: 500px) &#123;</span><br><span class="line">    .poem-wrap &#123;</span><br><span class="line">        margin-top: 60px;</span><br><span class="line">        margin-bottom: 20px;</span><br><span class="line">        border-top: 2px solid #797979;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    .poem-wrap h1 &#123;</span><br><span class="line">        margin: 20px 6px;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    .poem-border &#123;</span><br><span class="line">        display: none;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>然后在你想添加诗词的<code>.md</code>文件中添加如下代码：</p>
<p>一诗</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div class=&quot;poem-wrap&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;poem-border poem-left&quot;&gt;&lt;/div&gt;</span><br><span class="line">  &lt;div class=&quot;poem-border poem-right&quot;&gt;&lt;/div&gt;</span><br><span class="line">    &lt;h1&gt;念两句诗&lt;/h1&gt;</span><br><span class="line">    &lt;p id=&quot;poem&quot;&gt;挑选中...&lt;/p&gt;</span><br><span class="line">    &lt;p id=&quot;info&quot;&gt;</span><br><span class="line"></span><br><span class="line">  &lt;script src=&quot;https://sdk.jinrishici.com/v2/browser/jinrishici.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">    jinrishici.load(function(result) &#123;</span><br><span class="line">      poem.innerHTML = result.data.content</span><br><span class="line">      info.innerHTML = &#x27;【&#x27; + result.data.origin.dynasty + &#x27;】&#x27; + result.data.origin.author + &#x27;《&#x27; + result.data.origin.title + &#x27;》&#x27;</span><br><span class="line">      document.getElementById(&quot;poem&quot;).value(poem);</span><br><span class="line">      document.getElementById(&quot;info&quot;).value(info);  </span><br><span class="line">  &#125;);</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>

<p>一言</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;p id=&quot;hitokoto&quot;&gt;获取中...&lt;/p&gt;</span><br><span class="line">&lt;script src=&quot;https://v1.hitokoto.cn/?encode=js&amp;select=%23hitokoto&quot; defer&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>也可以直接在<code>.md</code>或者<code>.html</code>文件中插入如下代码显示每日诗词：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;poem-wrap&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;poem-border poem-left&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;poem-border poem-right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>念两句诗<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;poem&quot;</span>&gt;</span>挑选中...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;info&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://sdk.jinrishici.com/v2/browser/jinrishici.js&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    jinrishici.<span class="title function_">load</span>(<span class="keyword">function</span>(<span class="params">result</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      poem.<span class="property">innerHTML</span> = result.<span class="property">data</span>.<span class="property">content</span></span></span><br><span class="line"><span class="language-javascript">      info.<span class="property">innerHTML</span> = <span class="string">&#x27;【&#x27;</span> + result.<span class="property">data</span>.<span class="property">origin</span>.<span class="property">dynasty</span> + <span class="string">&#x27;】&#x27;</span> + result.<span class="property">data</span>.<span class="property">origin</span>.<span class="property">author</span> + <span class="string">&#x27;《&#x27;</span> + result.<span class="property">data</span>.<span class="property">origin</span>.<span class="property">title</span> + <span class="string">&#x27;》&#x27;</span></span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;poem&quot;</span>).<span class="title function_">value</span>(poem);</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;info&quot;</span>).<span class="title function_">value</span>(info);  </span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>也可在文本中插入如下代码显示每日一言：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;hitokoto&quot;</span>&gt;</span>获取中...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://v1.hitokoto.cn/?encode=js&amp;select=%23hitokoto&quot;</span> <span class="attr">defer</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="去掉顶部黑线"><a href="#去掉顶部黑线" class="headerlink" title="去掉顶部黑线"></a>去掉顶部黑线</h3><p>NexT主题顶部的黑线让人看着难受，去掉它的办法就是将<code>主题/layout/_layout.njk</code>文件中的下面这句话注释掉就行。</p>
<p><code>&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;</code></p>
<h3 id="播放网络视频"><a href="#播放网络视频" class="headerlink" title="播放网络视频"></a>播放网络视频</h3><iframe width="1350" height="575" src="https://api.dogecloud.com/player/get.mp4?vcode=5ac682e6f8231991&userId=17&ext=.mp4" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

<p>插入iframe代码</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">width</span>=<span class="string">&quot;951&quot;</span> <span class="attr">height</span>=<span class="string">&quot;535&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://www.youtube.com/embed/m4iRwp_FWxI&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span> <span class="attr">allow</span>=<span class="string">&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot;</span> <span class="attr">allowfullscreen</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="提高加载速度"><a href="#提高加载速度" class="headerlink" title="提高加载速度"></a>提高加载速度</h3><p>有几种办法：</p>
<ol>
<li><a href="https://www.vercel.com/">vercel</a></li>
<li><a href="https://www.netlify.com/">netlify</a></li>
<li><a href="https://www.cloudflare.com/">cloudflare</a></li>
<li>域名绑定GitHub page页面，然后使用国内cdn提供商加速，如七牛云cdn、又拍云cdn、腾讯云cdn、阿里云cdn，这些都需要域名备案才具有更好的性价比。</li>
<li>hexo主题优化，替换谷歌字体，如下：</li>
</ol>
<p>修改主题配置文件<code>_config.yml</code>，找到其中的font配置，设置为true，编辑host，替换原来的<code>https://fonts.googleapis.com</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">font:</span><br><span class="line">  enable: true</span><br><span class="line"></span><br><span class="line">  # Uri of fonts host, e.g. https://fonts.googleapis.com (Default).</span><br><span class="line">  host: https://fonts.lug.ustc.edu.cn/</span><br></pre></td></tr></table></figure>

<p>替换JQuery服务，编辑主题配置文件<code>_config.yml</code>，找到vendors配置，自定义custom_cdn_url，如下：</p>
<p><code>custom_cdn_url: https://code.jquery.com/jquery-2.0.3.min.js</code></p>
<ol start="6">
<li>hexo懒加载插件，在配置文件中配置图片lazyload，进一步减少网页呈现的时间。</li>
<li>hexo代码压缩插件。</li>
<li>hexo-offline-popup插件。</li>
</ol>
<h3 id="添加valine评论"><a href="#添加valine评论" class="headerlink" title="添加valine评论"></a>添加valine评论</h3><p><a href="https://github.com/next-theme/hexo-theme-next/issues/188#issuecomment-766578906">Why remove the valine comment in the latest version？</a>.</p>
<p><img src="http://qiniu.iloveszy.com/blog/2022/NexT%E4%B8%BB%E9%A2%98%E7%A7%BB%E9%99%A4Valine%E8%AF%84%E8%AE%BA.png"></p>
<p><strong>解决办法</strong></p>
<ol>
<li>换一个评论系统，完事…</li>
<li>参考<a href="https://github.com/next-theme/hexo-next-valine">Hexo NexT Valine</a>.</li>
</ol>
<p>① powershell管理员模式下cd到博客根目录，执行<code>npm install next-theme/hexo-next-valine</code></p>
<p>② 进入主题配置文件夹，加入如下代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Valine</span><br><span class="line"># For more information: https://valine.js.org, https://github.com/xCss/Valine</span><br><span class="line">valine:</span><br><span class="line">  enable: false</span><br><span class="line">  appId:  # your leancloud application appid</span><br><span class="line">  appKey:  # your leancloud application appkey</span><br><span class="line">  serverURLs: # When the custom domain name is enabled, fill it in here</span><br><span class="line">  placeholder: Just go go # comment box placeholder</span><br><span class="line">  avatar: mm # gravatar style</span><br><span class="line">  meta: [nick, mail, link] # Custom comment header</span><br><span class="line">  pageSize: 10 # pagination size</span><br><span class="line">  visitor: false # leancloud-counter-security is not supported for now. When visitor is set to be true, appid and appkey are recommended to be the same as leancloud_visitors&#x27; for counter compatibility. Article reading statistic https://valine.js.org/visitor.html</span><br><span class="line">  comment_count: true # If false, comment count will only be displayed in post page, not in home page</span><br><span class="line">  recordIP: false # Whether to record the commenter IP</span><br></pre></td></tr></table></figure>

<p>③ <a href="https://www.leancloud.cn/">leancloud</a>. 创建开发板项目(已有的无需再创建)，获取appid和appkey，并将其填入上面的appId和appKey中</p>
<p>④ 调试，一般情况下到这里就完成了，不过因为我的是next主题，所以有点特殊，经过上述配置后，调试时，在文章底部会看到如下问题：</p>
<p><img src="http://qiniu.iloveszy.com/blog/2022/2022-05-07_144622.jpg"></p>
<p><strong>解决办法</strong>：进入leancloud控制台，在设置-应用凭证里复制<code>REST API 服务器地址</code>，粘贴到上面代码中的<code>serverURLs</code>中，即可解决。</p>
<h3 id="valine评论设置邮件提醒"><a href="#valine评论设置邮件提醒" class="headerlink" title="valine评论设置邮件提醒"></a>valine评论设置邮件提醒</h3><ol>
<li>打开leancloud<a href="https://console.leancloud.app/">官网</a>登录进入控制台，然后按照图示来(PS: 就为了找到这个Git部署，我花了好长时间，真的感觉自己眼睛不大好使啊😂)</li>
</ol>
<p><img src="http://qiniu.iloveszy.com/blog/2022/leancloudGit%E9%83%A8%E7%BD%B2.jpg"></p>
<p><strong>注意</strong>：可能一开始看不到Git部署，要先部署项目，然后选择Git部署；</p>
<ol start="2">
<li>选择配置Git</li>
</ol>
<p><img src="http://qiniu.iloveszy.com/blog/2022/leancloud%E9%85%8D%E7%BD%AEGit.jpg"></p>
<ol start="3">
<li>配置Git填写<code>https://github.com/DesertsP/Valine-Admin</code>(<strong>随着时间的更改，可能会因为该仓库下的node版本过低而导致部署失败，这时就去GitHub上搜索新的Valine-Admin</strong>)，分支填写master，点击部署；</li>
</ol>
<p><img src="http://qiniu.iloveszy.com/blog/2022/leancloud%E9%85%8D%E7%BD%AEGit2.jpg"></p>
<p><img src="http://qiniu.iloveszy.com/blog/2022/leancloud%E9%85%8D%E7%BD%AEGit3.jpg"></p>
<ol start="4">
<li>设置6个变量；</li>
</ol>
<p><img src="http://qiniu.iloveszy.com/blog/2022/leancloud%E8%AE%BE%E7%BD%AE%E5%8F%98%E9%87%8F.jpg"></p>
<p><strong>注意</strong>：</p>
<p><code>SMTP_PASS</code>就是邮箱授权码，需要支持smtp，如何获取请百度或者谷歌。</p>
<p><code>SMEP_SERVICE</code>支持列表<a href="https://nodemailer.com/smtp/well-known/#supported-services">https://nodemailer.com/smtp/well-known/#supported-services</a>.</p>
<p><code>SMTP_USER</code>就是邮箱地址。</p>
<ol start="5">
<li>需要设置邮箱的休眠策略，<del>需要有管理后台的必须域名备案(国际版好像不用，但我用的是国内开发版)，然后参考上面的文章即可，没有备案的可忽略</del>，表达式填写<code>0 */20 7-23 * * ?</code></li>
</ol>
<p><img src="http://qiniu.iloveszy.com/blog/2022/leancloud%E8%AE%BE%E7%BD%AE%E9%82%AE%E7%AE%B1%E4%BC%91%E7%9C%A0%E7%AD%96%E7%95%A5.jpg"></p>
<ol start="6">
<li>重启服务，重新部署，不要忘记填写分支master</li>
</ol>
<p><img src="http://qiniu.iloveszy.com/blog/2022/leancloud%E9%87%8D%E6%96%B0Git%E9%83%A8%E7%BD%B2.jpg"></p>
<ol start="7">
<li>到这里就结束了，不用更新hexo，等待一会儿之后，在博客网站里面提交评论时就会收到邮件提醒了。</li>
</ol>
<h3 id="关于next主题配置执行hexo-g出现问题"><a href="#关于next主题配置执行hexo-g出现问题" class="headerlink" title="关于next主题配置执行hexo g出现问题"></a>关于next主题配置执行hexo g出现问题</h3><p>这是next主题的原因，我使用其它主题都没出现过这种情况，关闭杀毒软件，退出窗口重新进入再执行<code>hexo g</code>命令即可，如果是其它的问题就可能不是主题的原因了，需要另外分析了。</p>
<h2 id="推荐其它几个好看的主题"><a href="#推荐其它几个好看的主题" class="headerlink" title="推荐其它几个好看的主题"></a>推荐其它几个好看的主题</h2><ol>
<li><a href="https://github.com/blinkfox/hexo-theme-matery">GitHub - blinkfox&#x2F;hexo-theme-matery: A beautiful hexo blog theme with material design and responsive design.一个基于材料设计和响应式设计而成的全面、美观的Hexo主题。国内访问：http://blinkfox.com</a>.</li>
<li><a href="https://github.com/fluid-dev/hexo-theme-fluid">GitHub - fluid-dev&#x2F;hexo-theme-fluid: :ocean: 一款 Material Design 风格的 Hexo 主题 &#x2F; An elegant Material-Design theme for Hexo</a>.</li>
<li><a href="https://github.com/zhaoo/hexo-theme-zhaoo">GitHub - zhaoo&#x2F;hexo-theme-zhaoo: 🐳 A simple theme for Hexo</a>.</li>
<li><a href="https://github.com/anzhiyu-c/hexo-theme-anzhiyu">GitHub - anzhiyu-c&#x2F;hexo-theme-anzhiyu: 安知鱼主题，这是一个简洁美丽的hexo主题。</a>.</li>
</ol>
<h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ol>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzA4MzA2NDUxOQ==&mid=2247484074&idx=1&sn=5f5afa93c6c5aa7a9ea3b1d62ce31cd0&chksm=9ffd6102a88ae81480769c40377ab9414bad00f895684df8ea3b68d0a9e4285672bf01ecd1f2&cur_album_id=1339610139661484036&scene=189#rd">Hexo主题配置-Next</a>.</li>
<li><a href="https://juejin.cn/post/6997775533840793614#heading-10">【Hexo】全面改造属于你的个性化博客</a>.</li>
<li><a href="https://www.imooc.com/article/272005?block_id=tuijian_wz">Hexo添加雪花飘落效果_慕课手记 (imooc.com)</a>.</li>
<li><a href="https://cnhuazhu.gitee.io/2021/02/24/Hexo%E9%AD%94%E6%94%B9/Hexo%E6%B7%BB%E5%8A%A0%E9%9B%AA%E8%8A%B1%E5%8A%A8%E6%80%81%E6%95%88%E6%9E%9C%E8%83%8C%E6%99%AF/">Hexo添加雪花动态效果背景 | 花猪のBlog (gitee.io)</a>.</li>
<li><a href="https://github.com/rqh656418510/hexo-next-darkmode">GitHub - rqh656418510&#x2F;hexo-next-darkmode: Add Dark Mode support for NexT</a>.</li>
<li><a href="https://blog.csdn.net/qq_44036990/article/details/105088198">hexo(next)——每日一言、今日诗词_hexo 诗词-CSDN博客</a>.</li>
<li><a href="https://cnhuazhu.top/butterfly/2021/05/29/Hexo%E9%AD%94%E6%94%B9/Hexo%E6%B7%BB%E5%8A%A0%E4%B8%A4%E5%8F%A5%E8%AF%97%E8%AF%8D/">Hexo添加两句诗词 | 花猪のBlog (cnhuazhu.top)</a>.</li>
<li><a href="https://juejin.cn/post/6997775533840793614#heading-8">【Hexo】全面改造属于你的个性化博客 - 掘金 (juejin.cn)</a>.</li>
<li><a href="https://blog.csdn.net/qq_44036990/article/details/105088198?utm_source=app">hexo(next)——每日一言、今日诗词_hexo 诗词-CSDN博客</a>.</li>
<li><a href="https://cloud.tencent.com/developer/article/2199563">hexo博客插入音视频-腾讯云开发者社区-腾讯云 (tencent.com)</a>.</li>
<li><a href="https://www.jianshu.com/p/ef110f36650b">Hexo NexT主题自定义友链页面</a>.</li>
<li><a href="https://blog.csdn.net/MSDN_tang/article/details/106610897">Hexo页面加载速度优化</a>.</li>
<li><a href="https://blog.csdn.net/qq_37402392/article/details/127029330">Hexo博客再次完善_hexo 图片懒加载-CSDN博客</a>.</li>
<li><a href="https://blog.csdn.net/weixin_58068682/article/details/116613947">Hexo博客技巧：提升博客访问速度</a>.</li>
<li><a href="https://zhuanlan.zhihu.com/p/424932976">Next主题设置-安装Valine和Artitalk</a>.</li>
<li><a href="https://github.com/zhaojun1998/Valine-Admin">GitHub - zhaojun1998&#x2F;Valine-Admin: 一个 Valine 的拓展应用，用来增强 Valine 的邮件通知。</a>.</li>
<li><a href="https://blog.csdn.net/weixin_43167980/article/details/113808068">为Valine评论系统添加邮件提醒_fluid主题实现valine评论通知系统-CSDN博客</a>.</li>
<li><a href="https://github.com/DesertsP/Valine-Admin">GitHub - DesertsP&#x2F;Valine-Admin: 🔥A simple comment system based on LeanCloud and Valine.</a>。</li>
<li><a href="https://github.com/DesertsP/Valine-Admin/issues/63">关于时区的一个问题 · Issue #63 · DesertsP&#x2F;Valine-Admin (github.com)</a>。</li>
<li>可参考文章(next主题配置美化)：<a href="https://blog.csdn.net/nightmare_dimple/article/details/86661502?utm_source=app&app_version=4.5.8">《Hexo博客优化之Next主题美化》</a>、<a href="https://blog.csdn.net/forever_008/article/details/113524039?utm_source=app&app_version=4.5.8">《安装并优化next主题》</a></li>
<li><a href="https://blog.csdn.net/weixin_53070478/article/details/122328889">hexo下NexT的主题背景及框体透明度修改_hexo 透明度-CSDN博客</a>.</li>
<li><a href="https://www.izhaoo.com/">zhaoo (izhaoo.com)</a>.</li>
<li><a href="https://github.com/zhaoo/hexo-theme-zhaoo">zhaoo&#x2F;hexo-theme-zhaoo: 🐳 A simple theme for Hexo (github.com)</a>.</li>
<li><a href="https://cloud.tencent.com/developer/article/1964392">https://cloud.tencent.com/developer/article/1964392</a>.</li>
<li><a href="https://zhuanlan.zhihu.com/p/463548944?utm_id=0">https://zhuanlan.zhihu.com/p/463548944?utm_id=0</a>.</li>
<li><a href="https://blog.csdn.net/zpf1813763637/article/details/128340109">https://blog.csdn.net/zpf1813763637/article/details/128340109</a>.</li>
<li><a href="https://blog.csdn.net/Hodors/article/details/103226958">https://blog.csdn.net/Hodors/article/details/103226958</a>.</li>
<li><a href="https://www.cnblogs.com/ssgeek/p/10854839.html">https://www.cnblogs.com/ssgeek/p/10854839.html</a>.</li>
<li><a href="https://developer.qiniu.com/kodo/5972/kodo-browser">https://developer.qiniu.com/kodo/5972/kodo-browser</a>.</li>
</ol>
]]></content>
      <categories>
        <category>博客教程</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>hexo</tag>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title>免费在线影视网址集合</title>
    <url>/posts/34575/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码不太对，请再试试" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="03fe879d974ff45d1fcad679a4288a4542fc0e92e6565a4bb2db877c5183976c"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">这里需要密码才能访问</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>员工排序</title>
    <url>/posts/1480/</url>
    <content><![CDATA[<h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>某公司要针对员工情况统一调薪，现有一个员工列表，包含姓名、职级、工作年限、工资信息。现要求将该列表按以下规则重新排序：</p>
<span id="more"></span>

<p>1、职级高的排在前面</p>
<p>2、若职级相同，按工资少的排前面</p>
<p>3、若工资相同，工作年限长的排前面</p>
<p><strong>输入描述</strong>：</p>
<p>第一行输入一个整数n，表示员工列表中员工的人数</p>
<p>接下来的n行，分别输入员工的姓名、职级、工作年限和工资信息，各项信息用空格分隔</p>
<p><strong>输出描述</strong>：</p>
<p>输出按要求重新排列的员工列表，每名员工信息（姓名、职级、工作年限和工资）占一行</p>
<h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><p><strong>示例1</strong>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">6</span><br><span class="line">张三 3 3 3000</span><br><span class="line">李四 3 4 3000</span><br><span class="line">王五 3 3 4000</span><br><span class="line">赵六 4 3 3000</span><br><span class="line">陆奇 4 4 4000</span><br><span class="line">闫八 4 4 3980.99</span><br></pre></td></tr></table></figure>

<p><strong>输出</strong>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">赵六 4 3 3000.00</span><br><span class="line">闫八 4 4 3980.99</span><br><span class="line">陆奇 4 4 4000.00</span><br><span class="line">李四 3 4 3000.00</span><br><span class="line">张三 3 3 3000.00</span><br><span class="line">王五 3 3 4000.00</span><br></pre></td></tr></table></figure>

<h4 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h4><ol>
<li>员工有多个信息，因此想到用结构体作为员工类型；</li>
<li>由于员工数是不确定的，可以想到采用链表的数据结构，但是链表无法通过下标访问，排序效率低，题目所求需要排序，所以不应用链表，还是采用数组，不过是动态创建数组，使用<code>malloc</code>或<code>calloc</code>函数，需要包含库文件<code>&lt;stdlib.h&gt;</code>；</li>
<li>再看题目，表面上是要我们作出排序，其实员工的信息我们是采用数组存放的，可以直接通过下标访问，因此我们没必要真的对员工进行排序，只需要按照顺序记录他们的下标即可，通过另外的数组存储下标，然后按顺序访问该数组的元素，即可得到排好序的员工信息，有了思路，代码就好写了；</li>
<li>这里需要注意的是，每找到一个员工，需要将他从原数组中排除，即后续的寻找中不应再有该员工的信息出现，因此需要另加一个函数判断此员工下标是否在已排好序的数组中，同时，每次循环时，数组当前下标存放的信息每次都需要更新，不能存放已排好序的员工信息的下标。</li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Worker</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="type">char</span> name[<span class="number">20</span>];</span><br><span class="line">	<span class="type">int</span> state;</span><br><span class="line">	<span class="type">int</span> workAge;</span><br><span class="line">	<span class="type">double</span> wage;</span><br><span class="line"></span><br><span class="line">&#125; Worker;</span><br><span class="line"></span><br><span class="line">Worker *<span class="title function_">init</span><span class="params">(<span class="type">int</span> num)</span>;</span><br><span class="line"><span class="type">int</span> *<span class="title function_">sortWorker</span><span class="params">(<span class="type">int</span> num, Worker *worker)</span>;</span><br><span class="line"><span class="type">bool</span> <span class="title function_">isIn</span><span class="params">(<span class="type">int</span> a, <span class="type">const</span> <span class="type">int</span> *p, <span class="type">int</span> num)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line">	Worker *worker = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="type">int</span> *<span class="built_in">array</span> = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;num);</span><br><span class="line"></span><br><span class="line">	<span class="comment">//³õÊ¼»¯</span></span><br><span class="line">	worker = init(num);</span><br><span class="line">	<span class="keyword">if</span> (worker == <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;ÉêÇë¿Õ¼äÊ§°Ü\n&quot;</span>);</span><br><span class="line">		<span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%s %d %d %lf&quot;</span>, worker[i].name, &amp;worker[i].state, &amp;worker[i].workAge, &amp;worker[i].wage);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">array</span> = sortWorker(num, worker);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%s %d %d %.2f\n&quot;</span>, worker[<span class="built_in">array</span>[i]].name, worker[<span class="built_in">array</span>[i]].state,</span><br><span class="line">			   worker[<span class="built_in">array</span>[i]].workAge, worker[<span class="built_in">array</span>[i]].wage);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">free</span>(worker);</span><br><span class="line">	<span class="built_in">free</span>(<span class="built_in">array</span>);</span><br><span class="line"></span><br><span class="line">	getchar();</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Worker *<span class="title function_">init</span><span class="params">(<span class="type">int</span> num)</span></span><br><span class="line">&#123;</span><br><span class="line">	Worker *worker = (Worker *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Worker) * num);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> worker;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> *<span class="title function_">sortWorker</span><span class="params">(<span class="type">int</span> num, Worker *worker)</span></span><br><span class="line">&#123;</span><br><span class="line">	Worker w = worker[<span class="number">0</span>];</span><br><span class="line">	<span class="type">int</span> *label = (<span class="type">int</span> *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">int</span>) * num);</span><br><span class="line">	<span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">	label[count] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (; count &lt; num; count++)</span><br><span class="line">	&#123;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (!isIn(i, label, count))</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span> (w.state == worker[i].state)</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="keyword">if</span> (<span class="built_in">fabs</span>(w.wage - worker[i].wage) &lt; <span class="number">1e-10</span>)</span><br><span class="line">					&#123;</span><br><span class="line">						<span class="keyword">if</span> (w.workAge &lt; worker[i].workAge)</span><br><span class="line">						&#123;</span><br><span class="line">							w = worker[i];</span><br><span class="line">							label[count] = i;</span><br><span class="line">						&#125;</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">else</span></span><br><span class="line">					&#123;</span><br><span class="line">						<span class="keyword">if</span> (w.wage &gt; worker[i].wage)</span><br><span class="line">						&#123;</span><br><span class="line">							w = worker[i];</span><br><span class="line">							label[count] = i;</span><br><span class="line">						&#125;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span></span><br><span class="line">				&#123;</span><br><span class="line">					<span class="keyword">if</span> (w.state &lt; worker[i].state)</span><br><span class="line">					&#123;</span><br><span class="line">						w = worker[i];</span><br><span class="line">						label[count] = i;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (!isIn(i, label, count))</span><br><span class="line">			&#123;</span><br><span class="line">				w = worker[i];</span><br><span class="line">				label[count + <span class="number">1</span>] = i;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> label;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> <span class="title function_">isIn</span><span class="params">(<span class="type">int</span> a, <span class="type">const</span> <span class="type">int</span> *p, <span class="type">int</span> num)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= num; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (a == p[i])</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>大佬都还在坚持，我有什么理由去选择放弃。</title>
    <url>/posts/25287/</url>
    <content><![CDATA[<p><strong>干就完事！</strong>  </p>
<span id="more"></span>  

<iframe width="1350" height="775" src="//player.bilibili.com/player.html?aid=248824623&bvid=BV1fv411n73Q&cid=359525880&p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>励志</tag>
      </tags>
  </entry>
  <entry>
    <title>关于一个PC里面使用多个github账号的问题</title>
    <url>/posts/6720/</url>
    <content><![CDATA[<p>因为我有两个github账号，但是在git push仓库时发现在同一台PC上只能对一个账号下的仓库进行git push操作，另外一个执行git push会出现denied to错误。参考网上的文章，问题得到了解决。</p>
<span id="more"></span>

<h4 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h4><p><a href="https://zhuanlan.zhihu.com/p/373072996">如何在一台电脑上使用多个github账号？ - 知乎 (zhihu.com)</a>.</p>
<h4 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h4><p>这里推荐第二种</p>
<ol>
<li>进入windows控制面板，快捷键<code>win+r</code>，<code>control</code>，回车；</li>
<li>点击用户账户</li>
</ol>
<p><img src="https://photo.lihui327.cn/blog/2022/2022-05-07_150427.jpg"> </p>
<ol start="3">
<li>选择凭据管理器</li>
</ol>
<p><img src="https://photo.lihui327.cn/blog/2022/2022-05-07_150602.jpg"> </p>
<ol start="4">
<li>选择windows凭据</li>
</ol>
<p><img src="https://photo.lihui327.cn/blog/2022/2022-05-07_150757.jpg"> </p>
<ol start="5">
<li>找到github，编辑，改为你需要进行git push操作的账号和密码，然后保存，就ok了。</li>
</ol>
<p><img src="https://photo.lihui327.cn/blog/2022/2022-05-07_150949.jpg"> </p>
<p>希望上面的内容能帮到你，如有疑问请留下你的评论。</p>
]]></content>
      <categories>
        <category>Github</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>关于Java自定义方法内部进行数值相等比较产生的问题</title>
    <url>/posts/36358/</url>
    <content><![CDATA[<p>我的建议就是不要在函数内部进行例如整数之类的相等比较，不管怎样，总是false，我也不知道为啥，例如下面的这个程序，如果我在自定义方法内部进行比较的话，一定出错，不信可以自己试试，但是在主方法内部进行比较时没有问题，so，我认为还是不要在方法内进行比较，这个原因还有待我考证，再说吧…   </p>
<span id="more"></span>  

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">L2_2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">loop</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] num=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">8</span>];</span><br><span class="line">        <span class="type">int</span> k=<span class="number">0</span>,sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">10</span>;x!=<span class="number">0</span>; ) &#123;</span><br><span class="line">            num[k]=(x%<span class="number">10</span>);</span><br><span class="line">            <span class="comment">//System.out.print(num[k]);</span></span><br><span class="line">            k++;</span><br><span class="line">            x/=<span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(k&gt;<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;(k-<span class="number">1</span>);i++) &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> j=i;j&lt;(k-<span class="number">1</span>);j++) </span><br><span class="line">                    num[i]*=<span class="number">10</span>;</span><br><span class="line">                sum+=num[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        sum+=num[k-<span class="number">1</span>];</span><br><span class="line">        <span class="comment">//System.out.println(sum);</span></span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Scanner input=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> a=input.nextInt();</span><br><span class="line">        <span class="type">int</span> b=input.nextInt();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=a;i&lt;=b;i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(loop(i)==i) &#123;</span><br><span class="line">                System.out.println(i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        input.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>完！</strong></p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建Hexo博客详细教程</title>
    <url>/posts/31931/</url>
    <content><![CDATA[<p>欢迎来到我的博客！这是我用hexo建立的第一个博客静态网页，部署在<a href="https://github.com/">github</a>上的，因此难免会有些许不尽人意的地方，但我会努力改善的，我会分享一些我平时所学的知识与经验，也分享一些我遇到过的技术错误。    </p>
<span id="more"></span>  

<h2 id="搭建hexo博客经验分享"><a href="#搭建hexo博客经验分享" class="headerlink" title="搭建hexo博客经验分享"></a>搭建hexo博客经验分享</h2><h3 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h3><p>这就相当是制作一个静态网页，但是不用自掏资本，但只能是轻量的网页，因此非常适合博客的搭建，本网页界面就是用hexo制作的，也许不足以激发你的兴趣，但是它也可以用来分享你的生活的点点滴滴，只要你有一颗好奇的心，以及敢于去尝试的勇气，搞定博客不在话下。</p>
<h3 id="1-安装Git以及连接GitHub"><a href="#1-安装Git以及连接GitHub" class="headerlink" title="1.安装Git以及连接GitHub"></a>1.安装Git以及连接GitHub</h3><p><a href="/posts/5303">详细教程</a>      </p>
<h3 id="2-安装Node-js"><a href="#2-安装Node-js" class="headerlink" title="2.安装Node.js"></a>2.安装Node.js</h3><p><a href="/posts/11257">详细教程</a>   </p>
<h3 id="3-安装Hexo"><a href="#3-安装Hexo" class="headerlink" title="3.安装Hexo"></a>3.安装Hexo</h3><ul>
<li>首先创建一个文件夹，命名(感觉最好全是英文)，进入文件夹后，按住shift键同时右键鼠标，点击<code>在此处打开PowerShell窗口(s)</code> ，使用npm命令安装hexo，<code>npm install -g hexo-cli</code> ，安装完后输入<code>hexo -v</code> 来验证是否安装成功，若显示既不是外部也不是内部命令，则请参考文章：<a href="/2021-02-09-%E5%AE%89%E8%A3%85Node-js">安装Node.js</a> ，若提示这是非签名脚本，已被系统拒绝执行，请参考以下步骤(没有则请忽略😂)：     <ul>
<li>win10下关闭脚本执行安全策略<br>点击开始，设置，搜索power，点击powershell developer settings，往下拉，找到应用以下设置已执行powershell脚本，勾选，点击应用就可以了</li>
</ul>
</li>
<li>hexo -v正确显示之后就开始初始化网址，输入<br>  <code>hexo init</code>   </li>
<li>接着输入npm install来安装这个网址需要的插件<br>  <code>npm install</code>    </li>
<li>完成后，输入hexo g来生成静态网页<br>  <code>hexo g</code>   </li>
<li>结果显示：<img src="http://qiniu.iloveszy.com/blog/2023/hexo%20g.png">   </li>
<li>hexo s开启本地服务器<br>  <code>hexo s</code>   </li>
<li>结果显示：<img src="http://qiniu.iloveszy.com/blog/2023/hexo%20s.png"> 这就代表启动成功了。  </li>
<li>可在浏览器输入网址<a href="http://localhost:4000/">http://localhost:4000</a>就可以查看了，关闭本地服务可直接ctrl+c</li>
</ul>
<h3 id="4-写作"><a href="#4-写作" class="headerlink" title="4.写作"></a>4.写作</h3><blockquote>
<p>注意：请求地址url中的<u>文件名</u>不能有空格(文档中的标题没有影响)，文件名可以用<code>-</code>隔开，否则会出问题。</p>
</blockquote>
<p>执行下列命令来创建一篇新文章或者新的页面</p>
<p><code>hexo new [layout] &lt;title&gt;</code></p>
<p>可以在命令中指定文章的布局(layout)，默认为<code>post</code>，可以通过修改<code>_config.yml</code>中的<code>default_layout</code>参数来指定默认布局。</p>
<ul>
<li>新建页面：<code>hexo new page &lt;title&gt;</code></li>
<li>新建文章：<code>hexo new &lt;title&gt;</code> or <code>hexo new post &lt;title&gt;</code></li>
</ul>
<h4 id="layout"><a href="#layout" class="headerlink" title="layout"></a>layout</h4><p>Hexo默认有三种布局：<code>post</code>、<code>page</code>和<code>draft</code>。在创建三种不同类型的文件时，它们将会被保存到不同的路径，而我们自定义的其它布局和<code>post</code>相同，都将储存到<code>source/_posts</code>文件夹。</p>
<table>
<thead>
<tr>
<th align="center">layout</th>
<th>路径</th>
</tr>
</thead>
<tbody><tr>
<td align="center">post</td>
<td>source&#x2F;_posts</td>
</tr>
<tr>
<td align="center">page</td>
<td>source</td>
</tr>
<tr>
<td align="center">draft</td>
<td>source&#x2F;_drafts</td>
</tr>
</tbody></table>
<h4 id="文件名称"><a href="#文件名称" class="headerlink" title="文件名称"></a>文件名称</h4><p>Hexo默认以标题作为文件名称，但可以编辑<code>new_post_name</code>参数来改变默认的文件名称，举例来说，设为<code>:year-:month-:day&amp;:title.md</code>可以让我们更方便的通过日期来管理文章。</p>
<table>
<thead>
<tr>
<th align="center">变量</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">:title</td>
<td>标题(小写，空格将会被替换为短杠)</td>
</tr>
<tr>
<td align="center">:year</td>
<td>建立的年份，如2015</td>
</tr>
<tr>
<td align="center">:month</td>
<td>建立的月份(有前导零)，如04</td>
</tr>
<tr>
<td align="center">:i_month</td>
<td>建立的月份(无导零)，如4</td>
</tr>
<tr>
<td align="center">:day</td>
<td>建立的日期(有前导零)，如07</td>
</tr>
<tr>
<td align="center">:i_day</td>
<td>建立的日期(无前导零)，如7</td>
</tr>
</tbody></table>
<h4 id="草稿"><a href="#草稿" class="headerlink" title="草稿"></a>草稿</h4><p>Hexo的一种特殊布局：<code>draft</code>，这种布局在建立时会被保存到<code>source/_drafts</code>文件夹，可以通过<code>publish</code>命令将草稿移动到<code>source/_posts</code>文件夹，该命令的使用方式与<code>new</code>十分类似，可以在命令中指定<code>layout</code>来指定布局。</p>
<p><code>hexo publish [layout] &lt;title&gt;</code></p>
<p>草稿默认不会显示在页面中，可以在执行时加上<code>--draft</code>参数，或是把<code>render_drafts</code>参数设为<code>true</code>来预览草稿。</p>
<h4 id="模板-Scaffold"><a href="#模板-Scaffold" class="headerlink" title="模板(Scaffold)"></a>模板(Scaffold)</h4><p>在新建文章时，Hexo会根据<code>scaffolds</code>文件夹中寻找<code>photo.md</code>，并根据其内容建立文章，以下是我们可以在模板中使用的变量：</p>
<table>
<thead>
<tr>
<th align="center">变量</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">layout</td>
<td>布局</td>
</tr>
<tr>
<td align="center">title</td>
<td>标题</td>
</tr>
<tr>
<td align="center">date</td>
<td>文件建立日期</td>
</tr>
</tbody></table>
<h3 id="5-参考文章"><a href="#5-参考文章" class="headerlink" title="5.参考文章"></a>5.参考文章</h3><p><a href="https://www.sakura521.cn/technology/hexoTutorial.html">Hexo博客 搭建超详细教程</a>.</p>
<p><a href="https://mp.weixin.qq.com/s/2Spv9KHO6mLHui0CFBmCnQ">Hexo 搭建个人博客网站</a>.</p>
<h3 id="6-后续美化"><a href="#6-后续美化" class="headerlink" title="6.后续美化"></a>6.后续美化</h3><p>我正在学习，慢慢添加吧，网上有很多教程供参考，我这里也有文章专门介绍博客主题的美化，<a href="/posts/16544">方向门</a>。</p>
<h3 id="安装过程中出现的问题"><a href="#安装过程中出现的问题" class="headerlink" title="安装过程中出现的问题"></a>安装过程中出现的问题</h3><ol>
<li>连接<strong>GitHub</strong>和上传博客到<strong>GitHub</strong>出现问题，建议搭梯子，科学上网。</li>
<li>node.js和安装hexo中遇到的问题可以参考文章<a href="/posts/11257">安装Node.js</a>.</li>
</ol>
<h3 id="其它个人博客搭建框架"><a href="#其它个人博客搭建框架" class="headerlink" title="其它个人博客搭建框架"></a>其它个人博客搭建框架</h3><p><strong>hexo</strong>：<a href="https://hexo.io/">https://hexo.io</a>.</p>
<p><strong>jekyll</strong>：<a href="https://jekyllrb.com/">https://jekyllrb.com</a>.</p>
<p><strong>hugo</strong>: <a href="https://www.gohugo.org/">https://www.gohugo.org</a>.</p>
<p><strong>vuepress</strong>：<a href="https://vuepress.vuejs.org/">https://vuepress.vuejs.org</a>.</p>
<p><strong>solo</strong>：<a href="https://solo.b3log.org/">https://solo.b3log.org</a>.</p>
<p><strong>wordpress</strong>：<a href="https://wordpress.org/">https://wordpress.org</a>.</p>
<p><strong>typecho</strong>：<a href="https://typecho.org/">https://typecho.org</a>.</p>
<p>参考文章：<a href="https://blog.csdn.net/weixin_45784655/article/details/104780438">《个人博客搭建——介绍几种博客搭建框架》</a>.</p>
]]></content>
      <categories>
        <category>博客教程</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>hexo</tag>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title>数据结构用C实现非递减有序单链表删除重复元素值</title>
    <url>/posts/29063/</url>
    <content><![CDATA[<p>参考文章<a href="/My2Blog/2021/03/28/C%E5%AE%9E%E7%8E%B0%E9%9D%9E%E9%80%92%E5%87%8F%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E5%88%A0%E9%99%A4%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0">C实现非递减有序数组删除重复元素值</a>   </p>
<span id="more"></span>  

<p>具体实现代码如下：  </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> //声明单链表</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">int</span> data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Node</span>* <span class="title">next</span>;</span></span><br><span class="line">&#125; Node, *LList;</span><br><span class="line"><span class="type">void</span> <span class="title function_">InitList</span><span class="params">(LList *L)</span> <span class="comment">//初始化单链表</span></span><br><span class="line">&#123;</span><br><span class="line">    *L=(LList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Node));</span><br><span class="line">    (*L)-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">CFTail</span><span class="params">(LList L)</span> <span class="comment">//用尾插法建立单链表</span></span><br><span class="line">&#123;</span><br><span class="line">    Node *r,*s;</span><br><span class="line">    <span class="type">int</span> flag=<span class="number">1</span>;</span><br><span class="line">    r=L;</span><br><span class="line">    <span class="keyword">while</span>(flag)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> c;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;c);</span><br><span class="line">        <span class="keyword">if</span>(c!=<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            s=(Node*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Node));</span><br><span class="line">            s-&gt;data=c;</span><br><span class="line">            r-&gt;next=s;</span><br><span class="line">            r=s;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            flag=<span class="number">0</span>;</span><br><span class="line">            r-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">DelSameX</span><span class="params">(LList L)</span> <span class="comment">//删除重复的元素值</span></span><br><span class="line">&#123;</span><br><span class="line">    Node *pre,*p;</span><br><span class="line">    pre=L-&gt;next;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="keyword">if</span>(pre==<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        pre=L-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(p=pre-&gt;next;p!=<span class="literal">NULL</span>;p=p-&gt;next)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(p-&gt;data != pre-&gt;data)</span><br><span class="line">            &#123;</span><br><span class="line">                pre-&gt;next=p;</span><br><span class="line">                pre=pre-&gt;next;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">print</span><span class="params">(LList L)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span>(L-&gt;next != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        L=L-&gt;next;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,L-&gt;data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    LList L;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;jian li dan lian biao: \n&quot;</span>);</span><br><span class="line">    InitList(&amp;L);</span><br><span class="line">    CFTail(L);</span><br><span class="line">    DelSameX(L);</span><br><span class="line">    print(L);</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>实现效果如图：<img src="https://cdn.jsdelivr.net/gh/Li-hui327/PhotoBed/img/DelSame2.JPG">  </p>
<p>这说明这个程序还是有些许bug，检查原因，发现还是在最后的结点处没有给它指向空，因此它又指向了原先的那个最后的结点，简单点说，就是没有断开原先的尾结点，改变后的程序如下：  </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> //声明单链表</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">int</span> data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Node</span>* <span class="title">next</span>;</span></span><br><span class="line">&#125; Node, *LList;</span><br><span class="line"><span class="type">void</span> <span class="title function_">InitList</span><span class="params">(LList *L)</span> <span class="comment">//初始化单链表</span></span><br><span class="line">&#123;</span><br><span class="line">    *L=(LList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Node));</span><br><span class="line">    (*L)-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">CFTail</span><span class="params">(LList L)</span> <span class="comment">//用尾插法建立单链表</span></span><br><span class="line">&#123;</span><br><span class="line">    Node *r,*s;</span><br><span class="line">    <span class="type">int</span> flag=<span class="number">1</span>;</span><br><span class="line">    r=L;</span><br><span class="line">    <span class="keyword">while</span>(flag)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> c;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;c);</span><br><span class="line">        <span class="keyword">if</span>(c!=<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            s=(Node*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Node));</span><br><span class="line">            s-&gt;data=c;</span><br><span class="line">            r-&gt;next=s;</span><br><span class="line">            r=s;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            flag=<span class="number">0</span>;</span><br><span class="line">            r-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">DelSameX</span><span class="params">(LList L)</span> <span class="comment">//删除重复的元素值</span></span><br><span class="line">&#123;</span><br><span class="line">    Node *pre,*p;</span><br><span class="line">    pre=L-&gt;next;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="keyword">if</span>(pre==<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        pre=L-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(p=pre-&gt;next;p!=<span class="literal">NULL</span>;p=p-&gt;next)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(p-&gt;data != pre-&gt;data)</span><br><span class="line">            &#123;</span><br><span class="line">                pre-&gt;next=p;</span><br><span class="line">                pre=p;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        pre-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">print</span><span class="params">(LList L)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span>(L-&gt;next != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        L=L-&gt;next;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,L-&gt;data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    LList L;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;jian li dan lian biao: \n&quot;</span>);</span><br><span class="line">    InitList(&amp;L);</span><br><span class="line">    CFTail(L);</span><br><span class="line">    DelSameX(L);</span><br><span class="line">    print(L);</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>运行结果如图：<img src="https://cdn.jsdelivr.net/gh/Li-hui327/PhotoBed/img/DelSame2_1.JPG">  </p>
<p>还有一种写法，一并放在这里。  </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*删除递增有序单链表中的重复元素*/</span></span><br><span class="line"><span class="comment">/*包含头文件*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;ds.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义ElemType类型和使用到的物理数据类型*/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> ElemType;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Node</span>    /* 结点类型定义 */</span></span><br><span class="line"><span class="class">&#123;</span> ElemType data;</span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">Node</span>  * <span class="title">next</span>;</span></span><br><span class="line">&#125;Node, *LinkList;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化单链表</span></span><br><span class="line">LinkList <span class="title function_">InitList</span><span class="params">(LinkList *L)</span></span><br><span class="line">&#123;</span><br><span class="line">	*L=(LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Node));</span><br><span class="line">	(*L)-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*声明物理数据类型的操作（函数）和使用到的其他功能函数*/</span></span><br><span class="line"><span class="comment">/*根据输入的任意次序的字符元素创建升序单链表*/</span></span><br><span class="line">LinkList  <span class="title function_">CreateASCList</span><span class="params">(LinkList L)</span>;</span><br><span class="line"><span class="comment">/*打印链表*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LListPrint</span><span class="params">(LinkList L)</span>;</span><br><span class="line"><span class="comment">/*删除递增有序单链表中的重复元素*/</span></span><br><span class="line"><span class="type">void</span>  <span class="title function_">LListDelElem</span><span class="params">(LinkList L)</span>;</span><br><span class="line"><span class="comment">/*销毁单链表*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">ListDestroy</span><span class="params">(LinkList L)</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义物理数据类型的操作（函数）和使用到的其他功能函数*/</span></span><br><span class="line"><span class="comment">/*根据输入的任意次序的字符元素创建升序单链表*/</span></span><br><span class="line">LinkList  <span class="title function_">CreateASCList</span><span class="params">(LinkList L)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please input int xing numbers and input -1 means end input: \n&quot;</span>);</span><br><span class="line">	<span class="type">int</span> count=<span class="number">0</span>;</span><br><span class="line">	ElemType ch[MAXSIZE];</span><br><span class="line">	<span class="keyword">do</span> &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;ch[count]);</span><br><span class="line">		count++;</span><br><span class="line">	&#125; <span class="keyword">while</span>(ch[count<span class="number">-1</span>]!=<span class="number">-1</span>);</span><br><span class="line">	<span class="type">int</span> i,j;</span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;count<span class="number">-1</span>;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span>(j=count<span class="number">-2</span>;j&gt;i;j--)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(ch[j<span class="number">-1</span>]&gt;ch[j])</span><br><span class="line">			&#123;</span><br><span class="line">				ElemType t=ch[j<span class="number">-1</span>];</span><br><span class="line">				ch[j<span class="number">-1</span>]=ch[j];</span><br><span class="line">				ch[j]=t;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	Node *r,*s;</span><br><span class="line">	r=L;</span><br><span class="line">	i=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">do</span> &#123;</span><br><span class="line">		s=(Node *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Node));</span><br><span class="line">		s-&gt;data=ch[i];</span><br><span class="line">		r-&gt;next=s;</span><br><span class="line">		r=s;</span><br><span class="line">		i++;</span><br><span class="line">	&#125; <span class="keyword">while</span>(i&lt;(count<span class="number">-1</span>));</span><br><span class="line">	r-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">	<span class="keyword">return</span> L;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*打印链表*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LListPrint</span><span class="params">(LinkList L)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">while</span>((L-&gt;next)!= <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        L=L-&gt;next;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,L-&gt;data);</span><br><span class="line">    &#125;</span><br><span class="line">	<span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*删除递增有序单链表中的重复元素*/</span></span><br><span class="line"><span class="type">void</span>  <span class="title function_">LListDelElem</span><span class="params">(LinkList L)</span></span><br><span class="line">&#123;</span><br><span class="line">	Node *pre,*p;</span><br><span class="line">    pre=L-&gt;next;</span><br><span class="line">    <span class="keyword">if</span>(pre==<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        pre=L-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(p=pre-&gt;next;p!=<span class="literal">NULL</span>;p=p-&gt;next)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(p-&gt;data != pre-&gt;data)</span><br><span class="line">            &#123;</span><br><span class="line">                pre-&gt;next=p;</span><br><span class="line">                pre=pre-&gt;next;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">		pre-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*销毁单链表*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">ListDestroy</span><span class="params">(LinkList L)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="built_in">free</span>(L);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义主函数，通过主函数调用各物理数据类型的操作和功能函数*/</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	LinkList a;</span><br><span class="line">	InitList(&amp;a);</span><br><span class="line">	a=CreateASCList(a);</span><br><span class="line">	LListPrint(a);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;shan chu chong fu yuan su hou\n&quot;</span>);	</span><br><span class="line">	LListDelElem(a);</span><br><span class="line">	LListPrint(a);</span><br><span class="line">	ListDestroy(a);</span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>其中ds.h文件定义如下：  </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span>		TRUE	1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>		FALSE	0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>		OK		1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>		ERROR	0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>		MAXSIZE	100</span></span><br></pre></td></tr></table></figure>

<p><strong>完！</strong></p>
]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>悼念外婆</title>
    <url>/posts/44562/</url>
    <content><![CDATA[<p>最近因为做英语诗歌赏析，所选取的诗歌就是一首悼亡诗，由感而发，想到了已经去世十多年的外婆，触物生情，故在此抒发一下自己的情绪，同时表达一下对外婆的怀念！  </p>
<span id="more"></span>  
<p><strong>江城子·乙卯正月二十日夜记梦</strong><br>                                ————苏轼<br>十年生死两茫茫，不思量，自难忘。千里孤坟，无处话凄凉。纵使相逢应不识，尘满面，鬓如霜。<br>夜来幽梦忽还乡，小轩窗，正梳妆。相顾无言，惟有泪千行。料得年年肠断处，明月夜，短松冈。  </p>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>浅谈Java面向对象</title>
    <url>/posts/33537/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>详细教程可参考<a href="http://c.biancheng.net/view/939.html">Java面向对象：对象的概念及面向对象的三个基本特征</a>，我就粗略介绍下我比较认为的重点。  </p>
<span id="more"></span>  

<h2 id="面向对象的三大核心特性"><a href="#面向对象的三大核心特性" class="headerlink" title="面向对象的三大核心特性"></a>面向对象的三大核心特性</h2><ol>
<li><p>可重用性：代码重复使用，减少代码量，提高开发效率。继承、封装和多态都围绕这个核心  </p>
</li>
<li><p>可扩展性：新的功能可以很容易地加入到系统中来，便于软件的修改。  </p>
</li>
<li><p>可管理性：能够将功能与数据结合，方便管理  </p>
<p><strong>继承性</strong>  </p>
<p>Java只支持单继承  </p>
<p>例如定义一个语文老师类和数学老师类，如果不采用继承方式，那么两个类中需要定义的属性和方法如图：<img src="https://cdn.jsdelivr.net/gh/Li-hui327/PhotoBed/img/3-1Q01G40613629.jpg"></p>
</li>
</ol>
<p>语文老师类和数学老师类中的许多属性和方法相同，这些相同的属性和方法可以提取出放在一个父类中，这个父类用于被语文老师类和数学老师类继承。当然父类还可以继承别的类，如图所示：<img src="https://cdn.jsdelivr.net/gh/Li-hui327/PhotoBed/img/3-1Q01G40AR23.jpg" style="zoom:80%;" />  </p>
<p>总结上图的继承关系，可以用概括的树形关系来表示，如图所示：<img src="https://cdn.jsdelivr.net/gh/Li-hui327/PhotoBed/img/3-1Q01G40RT47.jpg">  </p>
<p>从图中可以看出，学校主要人员是一个大的类别，老师和学生是学校主要人员的两个子类，而老师又可以分为语文老师和数学老师两个子类，学生也可以分为班长和组长两个子类。  </p>
<p>使用这种层次形的分类方式，是为了将多个类的通用属性和方法提取出来，放在它们的父类中，然后只需要在子类中各自定义自己独有的属性和方法，并以继承的形式在父类中获取它们的通用属性和方法即可。  </p>
<p><strong>封装性</strong>  </p>
<p>封装是将代码及其处理的数据绑定在一起的一种编程机制。封装的目的在于保护信息  </p>
<p><em>Java语言的基本封装单位是类</em>，类的用途是封装复杂性，所以类的内部有隐藏实现复杂性的机制。  </p>
<p><strong>多态性</strong>  </p>
<p>即”一个接口，多个方法”。<em>多态性允许一个接口被多个同类使用</em>，弥补了单继承的不足。多态概念可以用树形关系来表示，如图所示：<img src="https://cdn.jsdelivr.net/gh/Li-hui327/PhotoBed/img/3-1Q01G4095bW.jpg" style="zoom:50%;" /></p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>浑河之战--戚家军的最后一战</title>
    <url>/posts/62204/</url>
    <content><![CDATA[<p>转载一篇文章，还原历史。<a href="http://m.qulishi.com/article/201810/300924.html">浑河之战–戚家军的最后一战</a>  </p>
<span id="more"></span>  

<p><strong>完！</strong>  </p>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>历史</tag>
      </tags>
  </entry>
  <entry>
    <title>新年祝福</title>
    <url>/posts/47961/</url>
    <content><![CDATA[<div class="poem-wrap">
  <div class="poem-border poem-left"></div>
  <div class="poem-border poem-right"></div>
    <h1>两句诗</h1>
    <p id="poem">挑选中...</p>
    <p id="info">  
  <script src="https://sdk.jinrishici.com/v2/browser/jinrishici.js" charset="utf-8"></script>
  <script type="text/javascript">
    jinrishici.load(function(result) {
      poem.innerHTML = result.data.content
      info.innerHTML = '【' + result.data.origin.dynasty + '】' + result.data.origin.author + '《' + result.data.origin.title + '》'
      document.getElementById("poem").value(poem);
      document.getElementById("info").value(info);  
  });
  </script> 
</div>  
<span id="more"></span>  

<p><strong>新的一年，我在博客上祝福大家愿所求皆如愿，所行化坦途！！！</strong></p>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>用C语言来表示有理数</title>
    <url>/posts/13387/</url>
    <content><![CDATA[<p>废话不多说，附上源码，欢迎大家指点学习！ </p>
<span id="more"></span>   

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">有理数：整数，小数（包括有限小数，有限循环小数和无限循环小数）有理数均可表示为两整数的分数形式</span></span><br><span class="line"><span class="comment">无理数：无法表示为两整数的分数形式</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*包含头文件*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义常量*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>		TRUE	1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>		FALSE	0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>		OK		1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>		ERROR	0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>		MAXSIZE	100</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义ElemType类型和使用到的物理数据类型*/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> ElemType;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span>	<span class="comment">//有理数结构体</span></span><br><span class="line">	ElemType num;<span class="comment">//分子</span></span><br><span class="line">	ElemType den;<span class="comment">//分母</span></span><br><span class="line">&#125;Rational;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*声明物理数据类型的操作（函数）和使用到的其他功能函数*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">InitRational</span><span class="params">(Rational *a)</span>;					<span class="comment">//有理数初始化</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">RSum</span><span class="params">(Rational a,Rational b,Rational *c)</span>;	<span class="comment">//有理数加法</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">RSub</span><span class="params">(Rational a,Rational b,Rational *c)</span>;	<span class="comment">//有理数减法</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">RMul</span><span class="params">(Rational a,Rational b,Rational *c)</span>;	<span class="comment">//有理数乘法</span></span><br><span class="line"><span class="type">int</span>  <span class="title function_">RDiv</span><span class="params">(Rational a,Rational b,Rational *c)</span>;	<span class="comment">//有理数除法，函数返回值表示是否完成除法，注意被0除 </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">RPrint</span><span class="params">(Rational a)</span>;						<span class="comment">//有理数打印</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">RNorm</span><span class="params">(Rational *a)</span>;						<span class="comment">//分子分母约分</span></span><br><span class="line"><span class="comment">//void RND(Rational a,ElemType *b,ElemType *c);	//求有理数分子分母</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义物理数据类型的操作（函数）和使用到的其他功能函数*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">InitRational</span><span class="params">(Rational *a)</span>&#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please input 分子: &quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;(a-&gt;num));</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please input 分母: &quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;(a-&gt;den));</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">RSum</span><span class="params">(Rational a,Rational b,Rational *c)</span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(a.den!=b.den)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> x=a.den;</span><br><span class="line">		a.den*=b.den;</span><br><span class="line">		a.num*=b.den;</span><br><span class="line">		b.num*=x;</span><br><span class="line">	&#125;</span><br><span class="line">	c-&gt;num=a.num+b.num;</span><br><span class="line">	c-&gt;den=a.den;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">RSub</span><span class="params">(Rational a,Rational b,Rational *c)</span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(a.den!=b.den)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> x=a.den;</span><br><span class="line">		a.den*=b.den;</span><br><span class="line">		a.num*=b.den;</span><br><span class="line">		b.num*=x;</span><br><span class="line">	&#125;</span><br><span class="line">	c-&gt;num=a.num-b.num;</span><br><span class="line">	c-&gt;den=a.den;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">RMul</span><span class="params">(Rational a,Rational b,Rational *c)</span>&#123;</span><br><span class="line">	c-&gt;num=a.num*b.num;</span><br><span class="line">	c-&gt;den=a.den*b.den;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">RDiv</span><span class="params">(Rational a,Rational b,Rational *c)</span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(b.num)</span><br><span class="line">	&#123;</span><br><span class="line">		Rational *d=c;</span><br><span class="line">        <span class="type">int</span> x=b.den;</span><br><span class="line">		b.den=b.num;</span><br><span class="line">		b.num=x;</span><br><span class="line">		RMul(a,b,d);</span><br><span class="line">		<span class="keyword">return</span> TRUE;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	<span class="keyword">return</span> FALSE;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">RPrint</span><span class="params">(Rational a)</span>&#123;</span><br><span class="line">    Rational b=a;</span><br><span class="line">	RNorm(&amp;b);</span><br><span class="line">    <span class="keyword">if</span>(b.num&lt;<span class="number">0</span> || b.den&lt;<span class="number">0</span>)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;(-)%d/%d\n&quot;</span>,<span class="built_in">abs</span>(b.num),<span class="built_in">abs</span>(b.den));</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d/%d\n&quot;</span>,b.num,b.den);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">RNorm</span><span class="params">(Rational *a)</span>&#123;</span><br><span class="line">	<span class="type">int</span> min=(a-&gt;num);</span><br><span class="line">	<span class="keyword">if</span>(min&gt;(a-&gt;den))</span><br><span class="line">	min=a-&gt;den;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=(min/<span class="number">2</span>);i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(((a-&gt;num)%i)==<span class="number">0</span> &amp;&amp; ((a-&gt;den)%i)==<span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			a-&gt;num/=i;</span><br><span class="line">			a-&gt;den/=i;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">void RND(Rational a,ElemType *b,ElemType *c)&#123;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义主函数，通过主函数调用各物理数据类型的操作和功能函数*/</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	Rational m,n,s;</span><br><span class="line">	InitRational(&amp;m);</span><br><span class="line">	RPrint(m);</span><br><span class="line">	InitRational(&amp;n);</span><br><span class="line">	RPrint(n);</span><br><span class="line">	RSum(m,n,&amp;s);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d/%d+%d/%d=&quot;</span>,m.num,m.den,n.num,n.den);</span><br><span class="line">	RPrint(s);</span><br><span class="line">	RSub(m,n,&amp;s);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d/%d-%d/%d=&quot;</span>,m.num,m.den,n.num,n.den);</span><br><span class="line">    RPrint(s);</span><br><span class="line">	RMul(m,n,&amp;s);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d/%d*%d/%d=&quot;</span>,m.num,m.den,n.num,n.den);</span><br><span class="line">	RPrint(s);</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span>(!RDiv(m,n,&amp;s))&#123;</span><br><span class="line">		<span class="built_in">puts</span>(<span class="string">&quot;Error!&quot;</span>);</span><br><span class="line">		<span class="comment">//return 1;</span></span><br><span class="line">	&#125; </span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d/%d(/)%d/%d=&quot;</span>,m.num,m.den,n.num,n.den);</span><br><span class="line">        RPrint(s);</span><br><span class="line">    &#125;</span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>运行后的结果如图：<img src="https://cdn.jsdelivr.net/gh/Li-hui327/PhotoBed/img/Rational.JPG"></p>
<p>自认为写的还是比较清晰，就可能结构体指针以及函数的参数传递不大好理解，因为每个人写代码的风格不一样，所以会有些许差别，但思路大致是一样的，准确来说，这个代码也不是我写的，老师之前已将框架写好，而我只是负责写具体的内容，具体的实现，学习代码还是要学习前辈的经验，会令我们受益匪浅。  </p>
<p><strong>完！</strong></p>
]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>矩阵连乘暨动态规划</title>
    <url>/posts/12885/</url>
    <content><![CDATA[<p>推荐观看b站上的up主九章算术发布的视频，有关于动态规划，个人认为讲的非常好，老师还是一名清华大学毕业生！</p>
<span id="more"></span>

<p>前言：现在懂了一点…  </p>
<p>先来看一道题目：用2、5、7拼成27，假设2、5、7各有很多，要求所需要的个数最少。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">graph LR</span><br><span class="line">A[2?] --&gt; B[5?] --&gt; C[7?] --&gt; D[27]</span><br></pre></td></tr></table></figure>

<p>这是一道比较常见的可以用动态规划求解的题目，用4步来解决此题  </p>
<blockquote>
<p>1.确定状态  </p>
<blockquote>
<p>最后一步  </p>
<p>子问题</p>
</blockquote>
</blockquote>
<p>本题最后一步就是不管怎样进行取舍，最后拿的一定是2、5、7三个中的一个，不可能是其它，因此就可以分条件了，原文题就转化为如何用最少数量拼凑出27-2、27-5、27-7，这样问题规模就缩小了，就划分成了三个子问题，即三个中哪个所需最少，同样可以继续对27-2、27-5、27-7进行类似分析，思路就逐步明朗了，由此可以联想到用递归算法进行求解，但是用递归会有重复步骤，效率不高，这里使用动态规划算法  </p>
<blockquote>
<p>2.转移方程  </p>
</blockquote>
<p>经过上述分析，大致有了一个思路，接下来就要列转移方程了，这里用函数f[x]来表示拼出x所需的最少数量，本题我们计算f[27]</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p><strong>未完待续！</strong></p>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>算法实现从顺序表中删除所有元素值介于x和y之间的所有元素且要求空间复杂度为O(1)</title>
    <url>/posts/24179/</url>
    <content><![CDATA[<p><strong>题目1：</strong>设计一个高效的算法，从顺序表L中删除所有元素值介于x和y之间的所有元素，要求空间复杂度为O(1)，即算法最多只额外使用一个元素空间。函数原型如下所示：  </p>
<p><code>int SListDelXY(SeqList *L,ElemType x,ElemType y)</code>  </p>
<span id="more"></span>  

<p>完整程序实现如下：  </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXSIZE 100</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OK 1;</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> False 0;</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> ElemType;	<span class="comment">//自定义线性表数据类型 </span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>	//定义线性表 </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	ElemType elem[MAXSIZE];</span><br><span class="line">	<span class="type">int</span> last;</span><br><span class="line">&#125;SeqList;</span><br><span class="line"><span class="type">void</span> <span class="title function_">InitialSList</span><span class="params">(SeqList *L)</span>	<span class="comment">//初始化线性表 </span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please input int Xing numbers,and input -1 means endinput: \n&quot;</span>);</span><br><span class="line">	<span class="keyword">do</span> &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;(L-&gt;elem[i]));</span><br><span class="line">		i++;</span><br><span class="line">	&#125; <span class="keyword">while</span>((L-&gt;elem[i<span class="number">-1</span>])!=<span class="number">-1</span>);</span><br><span class="line">	L-&gt;last=i<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">SListDelXY</span><span class="params">(SeqList *L,ElemType x, ElemType y)</span>	<span class="comment">//函数实现删除线性表中元素值介于x和y之间的元素 </span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span>(L-&gt;last)	<span class="comment">//判断单链表是否为空表 </span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> i;</span><br><span class="line">		<span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;(L-&gt;last);i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>((L-&gt;elem[i])&gt;x &amp;&amp; (L-&gt;elem[i])&lt;y)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="type">int</span> j;</span><br><span class="line">				<span class="keyword">for</span>(j=i;j&lt;(L-&gt;last<span class="number">-1</span>);j++)</span><br><span class="line">					L-&gt;elem[j]=L-&gt;elem[j+<span class="number">1</span>];</span><br><span class="line">				i--;</span><br><span class="line">				(L-&gt;last)--;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> OK;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="keyword">return</span> False;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">printSList</span><span class="params">(SeqList L)</span>	<span class="comment">//打印线性表 </span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> i;</span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;(L.last);i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,L.elem[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	SeqList a;</span><br><span class="line">	InitialSList(&amp;a);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please input two numbers,and the first one &lt; the next: \n&quot;</span>);</span><br><span class="line">	<span class="type">int</span> x,y;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;x,&amp;y);</span><br><span class="line">	<span class="keyword">if</span>(SListDelXY(&amp;a,x,y))</span><br><span class="line">		printSList(a);</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;ERROR! \n&quot;</span>);</span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>实现结果如图：<img src="https://cdn.jsdelivr.net/gh/Li-hui327/PhotoBed/img/ShuJuJieGou2-1.PNG"></p>
<p>正确答案：  </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">SListDelXY</span><span class="params">(SeqList *L,ElemType x,ElemType y)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i,j;</span><br><span class="line">    <span class="keyword">if</span>(!L || x&gt;y)	<span class="comment">//判断L是否为空以及x,y取值是否合乎逻辑</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;参数错误&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    &#125;</span><br><span class="line">    i=j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(j&lt;=(L-&gt;last))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>((L-&gt;elem[j])&gt;=x &amp;&amp; (L-&gt;elem[j])&lt;=y)	<span class="comment">//判断第j个元素是否在[x,y]区间内，若在，保持i不变，j继续向后推进</span></span><br><span class="line">            j++;</span><br><span class="line">        <span class="keyword">else</span>	<span class="comment">//若不在，则第i个元素就为第j个元素，i和j均向后推进</span></span><br><span class="line">            L-&gt;elem[i++]=L-&gt;elem[j++];</span><br><span class="line">    &#125;</span><br><span class="line">    L-&gt;last=i<span class="number">-1</span>;<span class="comment">//使不在[x,y]区间内的元素均在数组的前i-1个</span></span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>题目2：</strong>已知顺序表L中的元素为int类型，编写一个时间复杂度为O(n)、空间复杂度为O(1)的算法，将L中的奇数元素都排在前面，偶数元素都排在后面。函数原型如下所示：  </p>
<p><code>int AdjustSqlist(SeqList *L)</code>  </p>
<p>完整程序实现如下：  </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXSIZE 100</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OK 1;</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> False 0;</span></span><br><span class="line"><span class="comment">//还需有待改进 </span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> ElemType;	<span class="comment">//自定义线性表数据类型 </span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>	//定义线性表 </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	ElemType elem[MAXSIZE];</span><br><span class="line">	<span class="type">int</span> last;</span><br><span class="line">&#125;SeqList;</span><br><span class="line"><span class="type">void</span> <span class="title function_">InitialSList</span><span class="params">(SeqList *L)</span>	<span class="comment">//初始化线性表 </span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please input int Xing numbers,and input -1 means endinput: \n&quot;</span>);</span><br><span class="line">	<span class="keyword">do</span> &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;(L-&gt;elem[i]));</span><br><span class="line">		i++;</span><br><span class="line">	&#125; <span class="keyword">while</span>((L-&gt;elem[i<span class="number">-1</span>])!=<span class="number">-1</span>);</span><br><span class="line">	L-&gt;last=i<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">AdjustSList</span><span class="params">(SeqList *L)</span>	<span class="comment">//函数实现将线性表中的奇数元素排在前面，偶数元素排在后面 </span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span>(L-&gt;last)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> count=<span class="number">0</span>,i;</span><br><span class="line">		<span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;(L-&gt;last);i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>((L-&gt;elem[i])%<span class="number">2</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				ElemType t=L-&gt;elem[i];</span><br><span class="line">				L-&gt;elem[i]=L-&gt;elem[count];</span><br><span class="line">				L-&gt;elem[count]=t;</span><br><span class="line">				count++;</span><br><span class="line">			&#125;	</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> OK;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="keyword">return</span> False;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">printSList</span><span class="params">(SeqList L)</span>	<span class="comment">//打印线性表 </span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> i;</span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;(L.last);i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,L.elem[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	SeqList a;</span><br><span class="line">	InitialSList(&amp;a);</span><br><span class="line">	<span class="keyword">if</span>(AdjustSList(&amp;a))</span><br><span class="line">		printSList(a);</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;ERRPR! \n&quot;</span>);</span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>实现结果如图：<img src="https://cdn.jsdelivr.net/gh/Li-hui327/PhotoBed/img/ShuJuJieGou2-2.PNG"></p>
<p>正确答案：  </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">AdjustSqlist</span><span class="params">(SeqList *L)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>,j;</span><br><span class="line">    <span class="keyword">if</span>(!L)	<span class="comment">//判断顺序表是否为空</span></span><br><span class="line">        <span class="keyword">return</span> ERROR;  </span><br><span class="line">    j=L-&gt;last;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;j)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span>((L-&gt;elem[i])%<span class="number">2</span> != <span class="number">0</span> &amp;&amp; i&lt;j)<span class="comment">//从前往后找偶数</span></span><br><span class="line">            i++;</span><br><span class="line">        <span class="keyword">while</span>((L0&gt;elem[j])%<span class="number">2</span> == <span class="number">0</span> &amp;&amp; i&lt;j)<span class="comment">//从后往前找奇数</span></span><br><span class="line">            j--;</span><br><span class="line">        <span class="keyword">if</span>(i&lt;j)	<span class="comment">//实现前面的的偶数与后面的奇数对调</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> t=L-&gt;elem[i];</span><br><span class="line">            L-&gt;elem[i]=L-&gt;elem[j];</span><br><span class="line">            L-&gt;elem[j]=t;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>题目3：</strong>已知线性表中的元素（整数）以值递增有序排列，并以单链表作存储结构。试写一高效算法，删除表中所有大于mink且小于maxk的元素（若表中存在这样的元素），分析所编写算法的时间复杂度。函数原型如下所示：  </p>
<p><code>int ListDelRange(LinkList L,int mink,int maxk)</code>  </p>
<p>完整程序实现如下：  </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXSIZE 100</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OK 1;</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> False 0;</span></span><br><span class="line"><span class="comment">//还需有待改进 </span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> ElemType;	<span class="comment">//自定义线性表数据类型 </span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Node</span>	//定义线性表为单链表 </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	ElemType data;</span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">Node</span> * <span class="title">next</span>;</span></span><br><span class="line">&#125;Node, *LinkList;</span><br><span class="line"><span class="type">void</span> <span class="title function_">InitList</span><span class="params">(LinkList *L)</span>	<span class="comment">//初始化单链表 </span></span><br><span class="line">&#123;</span><br><span class="line">	*L=(LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Node));</span><br><span class="line">	(*L)-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">CFTail</span><span class="params">(LinkList L)</span>	<span class="comment">//使用尾插法建立单链表 </span></span><br><span class="line">&#123;</span><br><span class="line">	Node *r,*s;</span><br><span class="line">	<span class="type">int</span> i=<span class="number">1</span>;</span><br><span class="line">	r=L;</span><br><span class="line">	ElemType c;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please input int Xing numbers,and input -1 means endinput: \n&quot;</span>);</span><br><span class="line">	<span class="keyword">do</span> &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;c);</span><br><span class="line">		<span class="keyword">if</span>(c!=<span class="number">-1</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			s=(Node *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Node));</span><br><span class="line">			s-&gt;data=c;</span><br><span class="line">			r-&gt;next=s;</span><br><span class="line">			r=s;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			i=<span class="number">0</span>;</span><br><span class="line">			r-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125; <span class="keyword">while</span>(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">ListDelRange</span><span class="params">(LinkList L, <span class="type">int</span> mink, <span class="type">int</span> maxk)</span>	<span class="comment">//函数实现删除表中所有大于mink且小于maxk的元素 </span></span><br><span class="line">&#123;</span><br><span class="line">	Node *r,*s;</span><br><span class="line">	r=L;</span><br><span class="line">	s=L;</span><br><span class="line">	<span class="keyword">if</span>(r-&gt;next!=<span class="literal">NULL</span>)	<span class="comment">//判断是否为空表 </span></span><br><span class="line">	&#123;</span><br><span class="line">		r=r-&gt;next;</span><br><span class="line">		<span class="keyword">for</span>(;r-&gt;next!=<span class="literal">NULL</span>;r=r-&gt;next)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>((r-&gt;data)&gt;mink &amp;&amp; (r-&gt;data)&lt;maxk)</span><br><span class="line">			&#123;</span><br><span class="line">				s-&gt;next=r-&gt;next;</span><br><span class="line">				r=s;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">				s=r;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>((r-&gt;data)&gt;mink &amp;&amp; (r-&gt;data)&lt;maxk)</span><br><span class="line">		&#123;</span><br><span class="line">			s-&gt;next=r-&gt;next;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> OK;</span><br><span class="line">	&#125;	</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="keyword">return</span> False;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">printLList</span><span class="params">(LinkList L)</span>	<span class="comment">//打印单链表 </span></span><br><span class="line">&#123;</span><br><span class="line">	Node *r;</span><br><span class="line">	r=L-&gt;next;</span><br><span class="line">	<span class="keyword">while</span>(r-&gt;next!=<span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,r-&gt;data);</span><br><span class="line">		r=r-&gt;next;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,r-&gt;data);</span><br><span class="line">	<span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	LinkList L;</span><br><span class="line">	InitList(&amp;L);</span><br><span class="line">	CFTail(L);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please input two numbers,and the first one &lt; the next: \n&quot;</span>);</span><br><span class="line">	<span class="type">int</span> mink,maxk;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;mink,&amp;maxk);</span><br><span class="line">	<span class="keyword">if</span>(ListDelRange(L,mink,maxk))</span><br><span class="line">		printLList(L);</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;ERROR! \n&quot;</span>);</span><br><span class="line">	<span class="built_in">free</span>(L);</span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>实现结果如图：<img src="https://cdn.jsdelivr.net/gh/Li-hui327/PhotoBed/img/ShuJuJieGou2-3.PNG"></p>
<p>正确答案：  </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">ListDelRange</span><span class="params">(LinkList L,<span class="type">int</span> mink,<span class="type">int</span> maxk)</span></span><br><span class="line">&#123;</span><br><span class="line">    Node *pre,*p;</span><br><span class="line">    <span class="keyword">if</span>(mink&gt;=maxk || !L)	<span class="comment">//判断[mink,maxk]区间是否合理以及L不为空表</span></span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    pre=L;	<span class="comment">//pre指向头结点</span></span><br><span class="line">    p=L-&gt;next;	<span class="comment">//p指向首元结点</span></span><br><span class="line">    <span class="keyword">while</span>(p &amp;&amp; (p-&gt;data)&lt;maxk)	<span class="comment">//p不指向NULL且p的数据域小于给定的最大数，前提是得非递减有序排列</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>((p-&gt;data)&gt;mink)	<span class="comment">//p的数据域大于给定的最小数</span></span><br><span class="line">        &#123;<span class="comment">//进行删除p指向的结点的操作</span></span><br><span class="line">            pre-&gt;next=p-&gt;next;</span><br><span class="line">            <span class="built_in">free</span>(p);</span><br><span class="line">            p=pre-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>	<span class="comment">//p的数据域小于给定的最小数，向后推进</span></span><br><span class="line">        &#123;</span><br><span class="line">            pre=pre-&gt;next;</span><br><span class="line">            p=p-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>题目4：</strong>假设两个按元素值递增有序排列的线性表A和B，均以单链表作为存储结构，编写算法，将A表和B表归并成一个按元素值递减有序排列的线性表C，要求利用原A表和B表的节点空间存放表C(提示：用头插法)。函数原型如下所示：  </p>
<p><code>LinkList MergeLinkListR(LinkList LA, LinkList LB)</code>  </p>
<p>完整程序实现如下：  </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXSIZE 100</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OK 1;</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> False 0;</span></span><br><span class="line"><span class="comment">//还需有待改进 </span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> ElemType;	<span class="comment">//自定义线性表数据类型 </span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Node</span>	//定义线性表为单链表 </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	ElemType data;</span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">Node</span> * <span class="title">next</span>;</span></span><br><span class="line">&#125;Node, *LinkList;</span><br><span class="line"><span class="type">void</span> <span class="title function_">InitList</span><span class="params">(LinkList *L)</span>	<span class="comment">//初始化单链表 </span></span><br><span class="line">&#123;</span><br><span class="line">	*L=(LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Node));</span><br><span class="line">	(*L)-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">CFTail</span><span class="params">(LinkList L)</span>	<span class="comment">//使用尾插法建立单链表 </span></span><br><span class="line">&#123;</span><br><span class="line">	Node *r,*s;</span><br><span class="line">	<span class="type">int</span> i=<span class="number">1</span>;</span><br><span class="line">	r=L;</span><br><span class="line">	ElemType c;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please input int Xing numbers,and input -1 means endinput: \n&quot;</span>);</span><br><span class="line">	<span class="keyword">do</span> &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;c);</span><br><span class="line">		<span class="keyword">if</span>(c!=<span class="number">-1</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			s=(Node *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Node));</span><br><span class="line">			s-&gt;data=c;</span><br><span class="line">			r-&gt;next=s;</span><br><span class="line">			r=s;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			i=<span class="number">0</span>;</span><br><span class="line">			r-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125; <span class="keyword">while</span>(i);</span><br><span class="line">&#125;</span><br><span class="line">LinkList  <span class="title function_">MergeLinkListR</span><span class="params">(LinkList LA, LinkList LB)</span>	<span class="comment">//使用头插法合并线性表 </span></span><br><span class="line">&#123;</span><br><span class="line">	Node *r,*s,*t;</span><br><span class="line">	LinkList LC;</span><br><span class="line">	r=LA-&gt;next;</span><br><span class="line">	s=LB-&gt;next;</span><br><span class="line">	LC=LA;</span><br><span class="line">	LC-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">	<span class="keyword">for</span>(;r!=<span class="literal">NULL</span> &amp;&amp; s!=<span class="literal">NULL</span>;)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>((r-&gt;data)&lt;(s-&gt;data))</span><br><span class="line">		&#123;</span><br><span class="line">			t=(Node *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Node));</span><br><span class="line">			t-&gt;data=r-&gt;data;</span><br><span class="line">			t-&gt;next=LC-&gt;next;</span><br><span class="line">			LC-&gt;next=t;</span><br><span class="line">			r=r-&gt;next;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			t=(Node *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Node));</span><br><span class="line">			t-&gt;data=s-&gt;data;</span><br><span class="line">			t-&gt;next=LC-&gt;next;</span><br><span class="line">			LC-&gt;next=t;</span><br><span class="line">			s=s-&gt;next;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(r)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span>(;r!=<span class="literal">NULL</span>;)</span><br><span class="line">		&#123;</span><br><span class="line">			t=(Node *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Node));</span><br><span class="line">			t-&gt;data=r-&gt;data;</span><br><span class="line">			t-&gt;next=LC-&gt;next;</span><br><span class="line">			LC-&gt;next=t;</span><br><span class="line">			r=r-&gt;next;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span>(;s!=<span class="literal">NULL</span>;)</span><br><span class="line">		&#123;</span><br><span class="line">			t=(Node *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Node));</span><br><span class="line">			t-&gt;data=s-&gt;data;</span><br><span class="line">			t-&gt;next=LC-&gt;next;</span><br><span class="line">			LC-&gt;next=t;</span><br><span class="line">			s=s-&gt;next;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> LC;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">printLList</span><span class="params">(LinkList L)</span>	<span class="comment">//打印单链表 </span></span><br><span class="line">&#123;</span><br><span class="line">	Node *r;</span><br><span class="line">	r=L-&gt;next;</span><br><span class="line">	<span class="keyword">while</span>(r-&gt;next!=<span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,r-&gt;data);</span><br><span class="line">		r=r-&gt;next;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,r-&gt;data);</span><br><span class="line">	<span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	LinkList LA,LB;</span><br><span class="line">	InitList(&amp;LA);</span><br><span class="line">	CFTail(LA);</span><br><span class="line">	InitList(&amp;LB);</span><br><span class="line">	CFTail(LB);</span><br><span class="line">	printLList(MergeLinkListR(LA,LB));</span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>实现结果如图：<img src="https://cdn.jsdelivr.net/gh/Li-hui327/PhotoBed/img/ShuJuJieGou2-4.PNG"></p>
<p>正确答案：  </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">LinkList <span class="title function_">MergeLinkListR</span><span class="params">(LinkList LA,LinkList LB)</span></span><br><span class="line">&#123;</span><br><span class="line">    Node *pa,*pb,*r;</span><br><span class="line">    LinkList LC;</span><br><span class="line">    <span class="keyword">if</span>(!LA || !LB)<span class="comment">//LA,LB均不能为空</span></span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    pa=LA-&gt;next;	<span class="comment">//pa指向LA首元结点</span></span><br><span class="line">    pb=LB-&gt;next;	<span class="comment">//pb指向LB首元结点</span></span><br><span class="line">    LC=LA;</span><br><span class="line">    LC-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">while</span>(pa!=<span class="literal">NULL</span> || pb!=<span class="literal">NULL</span>)<span class="comment">//只要有一个不为空，循环继续</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(pa &amp;&amp; (!pb || (pa-&gt;data)&lt;(pb-&gt;data)))</span><br><span class="line">        &#123;</span><br><span class="line">            r=pa-&gt;next;</span><br><span class="line">            pa-&gt;next=LC-&gt;next;<span class="comment">//pa指向的结点指向LC的首元结点</span></span><br><span class="line">            LC-&gt;next=pa;<span class="comment">//LC的首元结点为pa指向的结点</span></span><br><span class="line">            pa=r;<span class="comment">//pa指针向原LA的后续结点后移</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>	<span class="comment">//分析同上</span></span><br><span class="line">        &#123;</span><br><span class="line">            r=pb-&gt;next;</span><br><span class="line">            pb-&gt;next=LC-&gt;next;</span><br><span class="line">            LC-&gt;next=pb;</span><br><span class="line">            pb=r;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">free</span>(LB);</span><br><span class="line">        <span class="keyword">return</span> LC;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>题目5：</strong>假设有一个循环链表的长度大于1，且表中既无头结点也无头指针。已知s为指向链表某个结点的指针，试编写算法在链表中删除指针s所指结点的前驱结点，函数原型如下所示：  </p>
<p><code>int DelPrior(Node *s)</code>  </p>
<p>完整程序实现如下：  </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXSIZE 100</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OK 1;</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> False 0;</span></span><br><span class="line"><span class="comment">//还需有待改进 </span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> ElemType;	<span class="comment">//自定义线性表数据类型 </span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Node</span>	//定义线性表为单链表 </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	ElemType data;</span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">Node</span> * <span class="title">next</span>;</span></span><br><span class="line">&#125;Node, *LinkList;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">InitCLinkList</span><span class="params">(LinkList *CL)</span>	<span class="comment">//初始化循环单链表 </span></span><br><span class="line">&#123;</span><br><span class="line">	*CL=(LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Node));</span><br><span class="line">	(*CL)-&gt;next=*CL;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">CCLinkList</span><span class="params">(LinkList CL)</span>	<span class="comment">//利用尾插法建立循环单链表 </span></span><br><span class="line">&#123;</span><br><span class="line">	Node *r,*s;</span><br><span class="line">	ElemType c;</span><br><span class="line">	r=CL;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please input int Xing numbers,and input -1 means endinput: \n&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;c);</span><br><span class="line">	<span class="keyword">while</span>(c!=<span class="number">-1</span>) </span><br><span class="line">	&#123;</span><br><span class="line">		s=(Node *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Node));</span><br><span class="line">		s-&gt;data=c;</span><br><span class="line">		r-&gt;next=s;</span><br><span class="line">		r=s;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;c);</span><br><span class="line">	&#125;</span><br><span class="line">	r-&gt;next=CL;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">DelPrior</span><span class="params">(Node *s)</span>	<span class="comment">//函数实现删除s所指节点的前驱节点 </span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span>(s)	<span class="comment">//判断是否为空循环链表 </span></span><br><span class="line">	&#123;</span><br><span class="line">		Node *r;</span><br><span class="line">		r=s-&gt;next;</span><br><span class="line">		<span class="keyword">for</span>(;(r-&gt;next-&gt;next)!=s;)</span><br><span class="line">			r=r-&gt;next;</span><br><span class="line">		r-&gt;next=s;</span><br><span class="line">		<span class="keyword">return</span> OK;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="keyword">return</span> False;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Node * <span class="title function_">FindNum</span><span class="params">(LinkList CL,ElemType c)</span>	<span class="comment">//函数实现寻找循环链表中指定数的指针 </span></span><br><span class="line">&#123;</span><br><span class="line">	Node *r;</span><br><span class="line">	r=CL;</span><br><span class="line">	<span class="keyword">for</span>(;(r-&gt;next)!=CL;)</span><br><span class="line">	&#123;</span><br><span class="line">		r=r-&gt;next;</span><br><span class="line">		<span class="keyword">if</span>((r-&gt;data)!=c)</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">printLList</span><span class="params">(LinkList CL)</span>	<span class="comment">//打印单链表 </span></span><br><span class="line">&#123;</span><br><span class="line">	Node *r;</span><br><span class="line">	r=CL-&gt;next;</span><br><span class="line">	<span class="keyword">while</span>((r-&gt;next)!=CL)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,r-&gt;data);</span><br><span class="line">		r=r-&gt;next;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,r-&gt;data);</span><br><span class="line">	<span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	LinkList CL;</span><br><span class="line">	InitCLinkList(&amp;CL);</span><br><span class="line">	CCLinkList(CL);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Please input the number&#x27;s later number you want to delete: \n&quot;</span>);</span><br><span class="line">	ElemType c;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;c);</span><br><span class="line">	<span class="keyword">if</span>(DelPrior(FindNum(CL,c)))</span><br><span class="line">		printLList(CL);</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;ERROR! \n&quot;</span>);</span><br><span class="line">	system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>实现结果如图：<img src="https://cdn.jsdelivr.net/gh/Li-hui327/PhotoBed/img/ShuJuJieGou2-5.PNG"></p>
<p>正确答案：  </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">DelPrior</span><span class="params">(Node *s)</span></span><br><span class="line">&#123;</span><br><span class="line">    Node *p,*pre;</span><br><span class="line">    <span class="keyword">if</span>(!s)	<span class="comment">//判断s指向是否为空</span></span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    pre=s;</span><br><span class="line">    p=s-&gt;next;</span><br><span class="line">    <span class="keyword">if</span>(p==s)	<span class="comment">//只有一个结点，但已被约束不可能发生</span></span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    <span class="keyword">while</span>((p-&gt;next)!=s)	<span class="comment">//p先找到s的前驱</span></span><br><span class="line">    &#123;</span><br><span class="line">        pre=pre-&gt;next;</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    pre-&gt;next=p-&gt;next;<span class="comment">//使p的前驱指向p的后继</span></span><br><span class="line">    <span class="built_in">free</span>(p);</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>完！</strong>  </p>
]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>联想工程师内部专用工具</title>
    <url>/posts/52374/</url>
    <content><![CDATA[<p>分享一篇公众号文章：<a href="https://mp.weixin.qq.com/s/IqHR3zKrKk2c7NCCGaxvZg">内部泄露软件！足足两百多款！</a>，再附上下载链接：<a href="https://pan.baidu.com/s/1O0IlN1zx0GZUmDIAk8QWuw">https://pan.baidu.com/s/1O0IlN1zx0GZUmDIAk8QWuw</a>，提取码：qqve  </p>
<span id="more"></span>  ]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>编写算法求一元多项式的值</title>
    <url>/posts/4387/</url>
    <content><![CDATA[<p>题目如图：<img src="https://cdn.jsdelivr.net/gh/Li-hui327/PhotoBed/img/Czuoye1.JPG"></p>
<span id="more"></span>  

<p>废话不多说，直接上代码：  </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 10</span></span><br><span class="line"><span class="comment">/* 使用迭代法重写第一次作业算法题 */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">QiuMi</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> a)</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> a*x;</span><br><span class="line">&#125;   </span><br><span class="line"><span class="type">void</span> <span class="title function_">PrintPn</span><span class="params">(<span class="type">int</span> *a,<span class="type">int</span> n,<span class="type">int</span> x)</span> <span class="comment">/* 负责打印结果，以及调用求幂函数参与运算 */</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> Pn=<span class="number">0</span>,count=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++) </span><br><span class="line">    &#123;</span><br><span class="line">        Pn+=(a[i]*QiuMi(x,count));<span class="comment">//该语句一共执行n-1次</span></span><br><span class="line">        count=QiuMi(x,count);</span><br><span class="line">    &#125;</span><br><span class="line">    Pn+=a[<span class="number">0</span>];<span class="comment">//执行1次</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Pn(%d)=%d\n&quot;</span>,x,Pn);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a[N],x;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Please input %d numbers: \n&quot;</span>,N);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;N;i++) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Please input X0: \n&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">    PrintPn(a,N,x);</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>程序运行结果如图：<img src="https://cdn.jsdelivr.net/gh/Li-hui327/PhotoBed/img/CdiyizhangZuoYe.JPG">  </p>
<p>正确答案如图：<img src="https://cdn.jsdelivr.net/gh/Li-hui327/PhotoBed/img/Czuoye1DaAn.JPG"></p>
]]></content>
      <categories>
        <category>C</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>虎牙云游戏手机端体验</title>
    <url>/posts/59253/</url>
    <content><![CDATA[<p>不得不说，体验云游戏的感觉就是速度快，延迟特别小，有个缺点就是手机不太好操作PC端游戏，反应也挺快的，就是人的思路没有跟上，哈哈😂，我用手机打了两盘联盟，真心想说，我太难了，还是不能适应它的操作啊，暂且就这样吧，我觉得云游戏可能是以后游戏的一个发展趋势，普通人也许不需要配置很好的电脑就能玩要求很高的游戏，同样，手机也是如此，让我们拭目以待吧！但是不得不说，云游戏的确还有很长一段路要走。 </p>
<span id="more"></span>  ]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>要做就做努力的失败者，绝不做沉沦的失败者</title>
    <url>/posts/47530/</url>
    <content><![CDATA[<p><strong>算是对学习上出现思想下滑的自己一种勉励吧！</strong>  </p>
<span id="more"></span>  

<p><strong>完！</strong>  </p>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>励志</tag>
      </tags>
  </entry>
  <entry>
    <title>要求循环队列不损失一个空间全部都能得到利用，...</title>
    <url>/posts/50715/</url>
    <content><![CDATA[<p><strong>题目1：</strong>要求循环队列不损失一个空间全部都能得到利用，设置一个标志量tag，以tag为0或1来区分头尾指针相同时的队列状态，请编写与此结构相应的入队与出队算法，循环队列的类型声明与函数原型如下所示：  </p>
<span id="more"></span>  

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">SeqQueue</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    QueueElementType element[MAXSIZE];<span class="comment">/*队列的元素空间*/</span></span><br><span class="line">    <span class="type">int</span> front;<span class="comment">/*头指针指示器*/</span></span><br><span class="line">    <span class="type">int</span> rear;<span class="comment">/*尾指针指示器*/</span></span><br><span class="line">    <span class="type">int</span> tag;<span class="comment">/*结合front和rear表示当前栈空或满*/</span></span><br><span class="line">    <span class="comment">/*front==rear &amp;&amp; tag==1表示满，front==rear &amp;&amp; tag==0表示空*/</span></span><br><span class="line">&#125;SeqQueue;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*入队操作*/</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">EnterQueue</span><span class="params">(SeqQueue *Q,QueueElementType x)</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">/*出队操作*/</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">DeleteQueue</span><span class="params">(SeqQueue *Q,QueueElementType *x)</span></span><br></pre></td></tr></table></figure>

<p>完整程序如下：  </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OK 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ERROR 0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXSIZE 20</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> QueueElementType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">SeqQueue</span> //定义循环队列</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    QueueElementType element[MAXSIZE];</span><br><span class="line">    <span class="type">int</span> front;</span><br><span class="line">    <span class="type">int</span> rear;</span><br><span class="line">    <span class="type">int</span> tag;</span><br><span class="line">&#125;SeqQueue;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">InitQueue</span><span class="params">(SeqQueue *Q)</span> <span class="comment">//初始化循环队列</span></span><br><span class="line">&#123;</span><br><span class="line">    Q-&gt;front=Q-&gt;rear=<span class="number">0</span>;</span><br><span class="line">    Q-&gt;tag=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">EnterQueue</span><span class="params">(SeqQueue *Q,QueueElementType x)</span>  <span class="comment">//入队</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(((Q-&gt;rear)%MAXSIZE)==(Q-&gt;front) &amp;&amp; Q-&gt;tag==<span class="number">1</span>)<span class="comment">//判断队列是否已满</span></span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        Q-&gt;element[Q-&gt;rear]=x;</span><br><span class="line">        Q-&gt;rear=(Q-&gt;rear+<span class="number">1</span>)%MAXSIZE;</span><br><span class="line">        <span class="keyword">if</span>((Q-&gt;rear)==(Q-&gt;front))<span class="comment">//判断队列是否已满</span></span><br><span class="line">            Q-&gt;tag=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> OK;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">DeleteQueue</span><span class="params">(SeqQueue *Q,QueueElementType *x)</span> <span class="comment">//出队</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(((Q-&gt;rear)%MAXSIZE)==(Q-&gt;front) &amp;&amp; Q-&gt;tag==<span class="number">0</span>)<span class="comment">//判断队列是否为空</span></span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    &#123;</span><br><span class="line">        (*x)=Q-&gt;element[Q-&gt;front];</span><br><span class="line">        Q-&gt;front=(Q-&gt;front+<span class="number">1</span>)%MAXSIZE;</span><br><span class="line">        <span class="keyword">if</span>((Q-&gt;front)==(Q-&gt;rear))<span class="comment">//判断队列是否已空</span></span><br><span class="line">            Q-&gt;tag=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> OK;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">void printQueue(SeqQueue Q)</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">    int i;</span></span><br><span class="line"><span class="comment">    for(i=Q.front;i&lt;Q.rear;i++)</span></span><br><span class="line"><span class="comment">        printf(&quot;%d &quot;,Q.element[i]);</span></span><br><span class="line"><span class="comment">    putchar(&#x27;\n&#x27;);</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    SeqQueue s;</span><br><span class="line">    InitQueue(&amp;s);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Please input int xing numbers: \n&quot;</span>);</span><br><span class="line">    QueueElementType x;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">    &#125; <span class="keyword">while</span>(EnterQueue(&amp;s,x));</span><br><span class="line">    <span class="keyword">while</span>(DeleteQueue(&amp;s,&amp;x))</span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,x);</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>运行结果如图：<img src="https://cdn.jsdelivr.net/gh/Li-hui327/PhotoBed/img/ShuJuJieGou3-1.JPG"> </p>
<p>正确答案如下：  </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">SeqQueue</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	QueueElementType  element[MAXSIZE];  <span class="comment">/* 队列的元素空间*/</span></span><br><span class="line">	<span class="type">int</span> front;  <span class="comment">/*头指针指示器*/</span></span><br><span class="line">	<span class="type">int</span> rear;  <span class="comment">/*尾指针指示器*/</span></span><br><span class="line">	<span class="type">int</span> tag;<span class="comment">/*结合front和rear表示当前栈空或满*/</span></span><br><span class="line">	<span class="comment">/*front==rear &amp;&amp;tag==1表示满，front==rear &amp;&amp;tag==0表示空*/</span></span><br><span class="line">&#125;SeqQueue;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*初始化操作*/</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">InitQueue</span><span class="params">(SeqQueue *Q)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span>(!Q)<span class="keyword">return</span> ERROR;</span><br><span class="line">	<span class="comment">/* 将*Q初始化为一个空的循环队列 */</span></span><br><span class="line">	Q-&gt;front=Q-&gt;rear=<span class="number">0</span>;</span><br><span class="line">	Q-&gt;tag=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*入队操作*/</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">EnterQueue</span><span class="params">(SeqQueue *Q, QueueElementType x)</span></span><br><span class="line">&#123;  <span class="comment">/*将元素x入队*/</span></span><br><span class="line">	<span class="keyword">if</span>(!Q)<span class="keyword">return</span> ERROR;</span><br><span class="line">	<span class="keyword">if</span>(Q-&gt;rear==Q-&gt;front &amp;&amp; Q-&gt;tag)  <span class="comment">/*队列已经满了*/</span></span><br><span class="line">    &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;OVERFLOW\n&quot;</span>);</span><br><span class="line">		<span class="keyword">return</span>(FALSE);</span><br><span class="line">	&#125;</span><br><span class="line">	Q-&gt;element[Q-&gt;rear]=x;<span class="comment">/* 注意入栈与修改队尾指针的次序 */</span></span><br><span class="line">	Q-&gt;rear=(Q-&gt;rear+<span class="number">1</span>)%MAXSIZE;  <span class="comment">/* 重新设置队尾指针 */</span></span><br><span class="line">	<span class="keyword">if</span>(Q-&gt;rear==Q-&gt;front)</span><br><span class="line">    	Q-&gt;tag=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">return</span>(TRUE);  <span class="comment">/*操作成功*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*出队操作*/</span> </span><br><span class="line"><span class="type">int</span> <span class="title function_">DeleteQueue</span><span class="params">(SeqQueue *Q, QueueElementType *x)</span></span><br><span class="line">&#123; <span class="comment">/*删除队列的队头元素，用x返回其值*/</span></span><br><span class="line">	<span class="keyword">if</span>(!Q)<span class="keyword">return</span> ERROR;</span><br><span class="line">	<span class="keyword">if</span>(Q-&gt;front==Q-&gt;rear &amp;&amp; !(Q-&gt;tag))  <span class="comment">/*队列为空*/</span></span><br><span class="line">    &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;UNDERFLOW\n&quot;</span>);</span><br><span class="line">		<span class="keyword">return</span>(FALSE);</span><br><span class="line">	&#125;</span><br><span class="line">	*x=Q-&gt;element[Q-&gt;front]; <span class="comment">/* 注意出队与修改队首指针的次序 */</span></span><br><span class="line">	Q-&gt;front=(Q-&gt;front+<span class="number">1</span>)%MAXSIZE;  <span class="comment">/*重新设置队头指针*/</span></span><br><span class="line">	<span class="keyword">if</span>(Q-&gt;rear==Q-&gt;front)</span><br><span class="line">        Q-&gt;tag=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">return</span>(TRUE);  <span class="comment">/*操作成功*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>题目2：</strong>回文判断。称正读与反读都相同的字符序列为“回文”序列。试写一算法，判断依次读入的一个以@为结束符的字符序列，是否为形如“序列1&amp;序列2”模式的字符序列。其中序列1和序列2中都不包含字符”&amp;”，且序列2是序列1的逆序列。例如”a+b&amp;b+a”是属于该模式的字符序列，而”1+3&amp;3-1”则不是。函数原型如下所示：  </p>
<p><code>/*序列从终端读入*/</code>  </p>
<p><code>int IsReverse()</code>  </p>
<p>完整程序如下：  </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;ds.h&quot;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">isReverse</span><span class="params">(<span class="type">char</span> *c)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>,j,k,count=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Please input characters and input @ means endinput: \n&quot;</span>);</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;c[i]);</span><br><span class="line">        i++;</span><br><span class="line">    &#125; <span class="keyword">while</span>(c[i<span class="number">-1</span>]!=<span class="string">&#x27;@&#x27;</span>);</span><br><span class="line">    i--;</span><br><span class="line">    <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;i;j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(c[j]==<span class="string">&#x27;&amp;&#x27;</span>)</span><br><span class="line">            count++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(count)</span><br><span class="line">    &#123;</span><br><span class="line">         <span class="keyword">for</span>(j=<span class="number">0</span>;c[j]!=<span class="string">&#x27;&amp;&#x27;</span>;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            k=i<span class="number">-1</span>-j;</span><br><span class="line">            <span class="keyword">if</span>(c[k]==c[j])</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> ERROR;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> OK;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> c[Stack_Size];</span><br><span class="line">    <span class="keyword">if</span>(isReverse(c))</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Yes! \n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;NO! \n&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>其中，ds.h文件如下：  </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*定义常量*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>		TRUE	1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>		FALSE	0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>		OK		1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>		ERROR	0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>		Stack_Size 20<span class="comment">/*顺序栈空间大小*/</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义ElemType类型和使用到的物理数据类型*/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">char</span> StackElementType;</span><br><span class="line"><span class="comment">/*定义使用顺序栈*/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">SeqStack</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	StackElementType elem[Stack_Size]; <span class="comment">/*用来存放栈中元素的一维数组*/</span></span><br><span class="line">	<span class="type">int</span> top;          		<span class="comment">/*用来存放栈顶元素的下标，top为-1表示空栈*/</span></span><br><span class="line">&#125;SeqStack;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*声明物理数据类型的操作（函数）和使用到的其他功能函数*/</span></span><br><span class="line"><span class="comment">/*初始化*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">InitStack</span><span class="params">(SeqStack *S)</span>;</span><br><span class="line"><span class="comment">/*判栈空*/</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">IsEmpty</span><span class="params">(SeqStack *S)</span>; <span class="comment">/*判断栈S为空栈时返回值为真，反之为假*/</span></span><br><span class="line"><span class="comment">/*判栈满*/</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">IsFull</span><span class="params">(SeqStack *S)</span>;	<span class="comment">/*判断栈S为满栈时返回值为真，反之为假*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Push</span><span class="params">(SeqStack *S,StackElementType x)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Pop</span><span class="params">(SeqStack *S,StackElementType *x)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义物理数据类型的操作（函数）和使用到的其他功能函数*/</span></span><br><span class="line"><span class="comment">/*初始化*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">InitStack</span><span class="params">(SeqStack *S)</span></span><br><span class="line">&#123;</span><br><span class="line">	S-&gt;top=<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*判栈空*/</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">IsEmpty</span><span class="params">(SeqStack *S)</span> <span class="comment">/*判断栈S为空栈时返回值为真，反之为假*/</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span>((S-&gt;top)==<span class="number">-1</span>)</span><br><span class="line">		<span class="keyword">return</span> TRUE;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*判栈满*/</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">IsFull</span><span class="params">(SeqStack *S)</span>	<span class="comment">/*判断栈S为满栈时返回值为真，反之为假*/</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>((S-&gt;top)==(Stack_Size<span class="number">-1</span>))</span><br><span class="line">        <span class="keyword">return</span> TRUE;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Push</span><span class="params">(SeqStack *S,StackElementType x)</span> <span class="comment">//进栈</span></span><br><span class="line">&#123;</span><br><span class="line">    S-&gt;top++;</span><br><span class="line">    S-&gt;elem[S-&gt;top]=x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Pop</span><span class="params">(SeqStack *S,StackElementType *x)</span> <span class="comment">//出栈</span></span><br><span class="line">&#123;</span><br><span class="line">    (*x)=S-&gt;elem[S-&gt;top];</span><br><span class="line">    S-&gt;top--;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>运行结果如图：<img src="https://cdn.jsdelivr.net/gh/Li-hui327/PhotoBed/img/ShuJuJieGou3-2.JPG"></p>
<p>正确答案如下：  </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">IsReverse</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	LinkStack s;</span><br><span class="line">	<span class="type">char</span> c,e;</span><br><span class="line">	InitLStack(&amp;s);</span><br><span class="line">	<span class="keyword">while</span>((e=getchar())!=<span class="string">&#x27;&amp;&#x27;</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(e==<span class="string">&#x27;@&#x27;</span>)  <span class="comment">//不允许在&#x27;&amp;&#x27;之前出现&#x27;@&#x27;</span></span><br><span class="line">		<span class="keyword">return</span> ERROR;</span><br><span class="line">		Push(s,e); </span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">/*有些同学此处用了do…while循环，最好使用while循环*/</span></span><br><span class="line">	<span class="keyword">while</span>( (e=getchar())!=<span class="string">&#x27;@&#x27;</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(StackEmpty(s))<span class="comment">//栈空</span></span><br><span class="line">			<span class="keyword">return</span> ERROR;</span><br><span class="line">		Pop(s,&amp;c);</span><br><span class="line">		<span class="keyword">if</span>(e!=c)</span><br><span class="line">			<span class="keyword">return</span> ERROR;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(!StackEmpty(s)) <span class="comment">//栈非空</span></span><br><span class="line">		<span class="keyword">return</span> ERROR;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;<span class="comment">//IsReverse</span></span><br></pre></td></tr></table></figure>

<p><strong>题目3：</strong>一般性回文判断。称正读与反读都相同的字符序列为”回文“序列。试写一算法，判断依次读入的一个字符序列，是否为形如”序列1序列2”模式的字符序列。其中序列2是序列1的逆序列。例如”a+bb+a”是属于该模式的字符序列，而”1+33-1”则不是。(提示：同时使用栈和队列实现)函数原型如下所示：  </p>
<p><code>/*序列从终端读入*/</code>  </p>
<p><code>int Palindrome_Test()</code>  </p>
<p>完整程序如下：  </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Stack_Size 50</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TRUE 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FALSE 0</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">char</span> StackElementType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">char</span> QueueElementType;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> //声明顺序栈</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    StackElementType elem[Stack_Size];</span><br><span class="line">    <span class="type">int</span> top;</span><br><span class="line">&#125;SeqStack;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">InitStack</span><span class="params">(SeqStack *S)</span> <span class="comment">//初始化顺序栈</span></span><br><span class="line">&#123;</span><br><span class="line">    S-&gt;top=<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">Push</span><span class="params">(SeqStack *S,StackElementType x)</span> <span class="comment">//进栈</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(S-&gt;top==(Stack_Size<span class="number">-1</span>))</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    S-&gt;top++;</span><br><span class="line">    S-&gt;elem[S-&gt;top]=x;</span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">Pop</span><span class="params">(SeqStack *S,StackElementType *x)</span> <span class="comment">//出栈</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(S-&gt;top==<span class="number">-1</span>)</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        (*x)=S-&gt;elem[S-&gt;top];</span><br><span class="line">        S-&gt;top--;</span><br><span class="line">        <span class="keyword">return</span> TRUE;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> //声明循环队列</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    QueueElementType element[Stack_Size];</span><br><span class="line">    <span class="type">int</span> front;</span><br><span class="line">    <span class="type">int</span> rear;</span><br><span class="line">&#125;SeqQueue;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">InitQueue</span><span class="params">(SeqQueue *Q)</span> <span class="comment">//循环队列初始化</span></span><br><span class="line">&#123;</span><br><span class="line">    Q-&gt;front=Q-&gt;rear=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">EnterQueue</span><span class="params">(SeqQueue *Q,QueueElementType x)</span> <span class="comment">//循环队列进队</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(((Q-&gt;rear+<span class="number">1</span>)%Stack_Size)==Q-&gt;front)</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    Q-&gt;element[Q-&gt;rear]=x;</span><br><span class="line">    Q-&gt;rear=(Q-&gt;rear+<span class="number">1</span>)%Stack_Size;</span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">DleteQueue</span><span class="params">(SeqQueue *Q,QueueElementType *x)</span> <span class="comment">//循环队列出队</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(Q-&gt;front==Q-&gt;rear)</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    (*x)=Q-&gt;element[Q-&gt;front];</span><br><span class="line">    Q-&gt;front=(Q-&gt;front+<span class="number">1</span>)%Stack_Size;</span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">Palindrome_Test</span><span class="params">(SeqStack *S,SeqQueue *Q)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Please input characters and input @ means endinput: \n&quot;</span>);</span><br><span class="line">    StackElementType c,d;</span><br><span class="line">    <span class="type">int</span> count=<span class="number">0</span>,i;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;c);</span><br><span class="line">    <span class="keyword">while</span>(c!=<span class="string">&#x27;@&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        count++;</span><br><span class="line">        Push(S,c);</span><br><span class="line">        EnterQueue(Q,c);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;c);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;count/<span class="number">2</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(Pop(S,&amp;c));</span><br><span class="line">        <span class="keyword">if</span>(DleteQueue(Q,&amp;d));</span><br><span class="line">        <span class="keyword">if</span>(c==d)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> FALSE;  </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    SeqStack s;</span><br><span class="line">    SeqQueue q;</span><br><span class="line">    InitStack(&amp;s);</span><br><span class="line">    InitQueue(&amp;q);</span><br><span class="line">    <span class="keyword">if</span>(Palindrome_Test(&amp;s,&amp;q))</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;Yes! &quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;No! &quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>运行结果如图：<img src="https://cdn.jsdelivr.net/gh/Li-hui327/PhotoBed/img/ShuJuJieGou3-3.JPG"></p>
<p>正确答案如下：  </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">Palindrome_Test</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	SeqStack s;</span><br><span class="line">	SeqQueue q;</span><br><span class="line">	<span class="type">char</span> c,e;</span><br><span class="line">	InitStack(&amp;s);</span><br><span class="line">	InitQueue(&amp;q);</span><br><span class="line">	<span class="keyword">while</span>((c=getchar())!=<span class="string">&#x27;\n&#x27;</span>)<span class="comment">/*终端输入结束是通过’\n’表示，不是’\0’表示（字符串结束）*/</span></span><br><span class="line">	&#123;</span><br><span class="line">		Push(&amp;s,c);EnterQueue(&amp;q,c); <span class="comment">//同时使用栈和队列两种结构</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">/*不需要判断栈和队列是否同时为空，因为二者的长度相同，也可以在前面增加计数器保证只判断一半的字符串即可*/</span></span><br><span class="line">	<span class="keyword">while</span>(!IsEmpty(&amp;s))</span><br><span class="line">	&#123;</span><br><span class="line">		Pop(&amp;s,&amp;c);DeleteQueue(&amp;q,&amp;e);</span><br><span class="line">		<span class="keyword">if</span>(c!=e) <span class="keyword">return</span> FALSE;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>完！</strong></p>
]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机组成原理定点除法运算</title>
    <url>/posts/41291/</url>
    <content><![CDATA[<p>对于定点除法运算，我认为我只掌握了一点皮毛，真正的精髓我还没触碰到，最重要的是，我发现老师讲的与书上说的有一点出入，这令我很不解，第一次感到很困惑，哎，有点难受！  </p>
<span id="more"></span>  

<p>先用一张图看一道题的解法：<img src="https://cdn.jsdelivr.net/gh/Li-hui327/PhotoBed/img/411b355a601c5fcf.png">  </p>
<p>首先第一步，确定符号，若两数均为正，则直接进行第二步，若有一个负号，将负号提前，若两数均为负号，去掉负号；  </p>
<p>第二步，保证接下来的除数与被除数均为正(如有负号则已提前)，对除数与被除数进行小数点向左的移位，将除数与被除数均转化为小数，此时要注意有效数据的位数；  </p>
<p>第三步，对被除数求补码，再对除数求补码以及其相反数的补码，然后开始进行加法，此时先用除数相反数的补码与被除数的补码进行相加  </p>
<blockquote>
<p>1.若得出的小数点左边第一位是1，就先将得出的结果进行小数点右移(溢出的直接舍掉)，再用除数补码与该结果进行相加</p>
</blockquote>
<blockquote>
<p>2.若得出的小数点左边第一位是0，将得出的结果进行小数点右移(溢出的直接舍弃)，再用除数的相反数的补码与该结果进行相加</p>
</blockquote>
<p>反复进行上述1、2过程，直到达到题目所说的精度，<strong>要注意最后对余数的处理</strong>，不要忘了符号！！！  </p>
<p><strong>完！</strong></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机栈原理</title>
    <url>/posts/9040/</url>
    <content><![CDATA[<p>分享一篇文章：<a href="http://www.360doc.cn/mip/834063726.html">《计算机栈原理，让你一次彻底理解！》</a>  </p>
<span id="more"></span>  

<p><strong>完！</strong></p>
]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>谷歌镜像网站</title>
    <url>/posts/50687/</url>
    <content><![CDATA[<div class="poem-wrap">
  <div class="poem-border poem-left"></div>
  <div class="poem-border poem-right"></div>
    <h1>诗词</h1>
    <div>
    <span id="jinrishici-sentence">小荷才露尖尖角，早有蜻蜓立上头。</span></div>
<script src="https://sdk.jinrishici.com/v2/browser/jinrishici.js" charset="utf-8"></script>
</div>

<span id="more"></span>

<p>网址：<a href="https://jia110.github.io/">https://jia110.github.io/</a>. <a href="http://gufenso.coderschool.cn/">http://gufenso.coderschool.cn/</a>.</p>
<h5 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h5><ol>
<li><a href="https://www.wrfou.com/google.html">2022谷歌镜像网站大全，教你无限制使用谷歌搜索及谷歌学术科学上网查阅资料</a>.</li>
<li><a href="https://funletu.com/1158/.html">谷歌镜像站大全</a>.</li>
</ol>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>生活</tag>
        <tag>google</tag>
      </tags>
  </entry>
  <entry>
    <title>采用定长顺序串编写算法...</title>
    <url>/posts/21955/</url>
    <content><![CDATA[<p>用定长顺序串编写下列算法：  </p>
<p>(1)将顺序串s中所有值为ch1的字符转换成ch2的字符，其中参数ch1和ch2传入的均为字符量。  </p>
<p><code>int charReplace(SString *s,char ch1,char ch2)</code>  </p>
<p>(2)将顺序串s中所有字符按照相反的次序仍存放在s中，即实现字符串的逆置。  </p>
<p><code>int strInverse(SString *s)</code>  </p>
<p>(3)从顺序串s中删除其值等于ch的所有字符，其中参数ch传入的为字符量。  </p>
<p><code>int charDelete(SString *s,char ch)</code>    </p>
<span id="more"></span>

<p>(1)我的答案：  </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OK 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ERROR 0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXSIZE 20</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> QueueElementType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">SeqQueue</span> //定义循环队列</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    QueueElementType element[MAXSIZE];</span><br><span class="line">    <span class="type">int</span> front;</span><br><span class="line">    <span class="type">int</span> rear;</span><br><span class="line">    <span class="type">int</span> tag;</span><br><span class="line">&#125;SeqQueue;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">InitQueue</span><span class="params">(SeqQueue *Q)</span> <span class="comment">//初始化循环队列</span></span><br><span class="line">&#123;</span><br><span class="line">    Q-&gt;front=Q-&gt;rear=<span class="number">0</span>;</span><br><span class="line">    Q-&gt;tag=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">EnterQueue</span><span class="params">(SeqQueue *Q,QueueElementType x)</span>  <span class="comment">//入队</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(((Q-&gt;rear)%MAXSIZE)==(Q-&gt;front) &amp;&amp; Q-&gt;tag==<span class="number">1</span>)<span class="comment">//判断队列是否已满</span></span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        Q-&gt;element[Q-&gt;rear]=x;</span><br><span class="line">        Q-&gt;rear=(Q-&gt;rear+<span class="number">1</span>)%MAXSIZE;</span><br><span class="line">        <span class="keyword">if</span>((Q-&gt;rear)==(Q-&gt;front))<span class="comment">//判断队列是否已满</span></span><br><span class="line">            Q-&gt;tag=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> OK;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">DeleteQueue</span><span class="params">(SeqQueue *Q,QueueElementType *x)</span> <span class="comment">//出队</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(((Q-&gt;rear)%MAXSIZE)==(Q-&gt;front) &amp;&amp; Q-&gt;tag==<span class="number">0</span>)<span class="comment">//判断队列是否为空</span></span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    &#123;</span><br><span class="line">        (*x)=Q-&gt;element[Q-&gt;front];</span><br><span class="line">        Q-&gt;front=(Q-&gt;front+<span class="number">1</span>)%MAXSIZE;</span><br><span class="line">        <span class="keyword">if</span>((Q-&gt;front)==(Q-&gt;rear))<span class="comment">//判断队列是否已空</span></span><br><span class="line">            Q-&gt;tag=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> OK;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">void printQueue(SeqQueue Q)</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">    int i;</span></span><br><span class="line"><span class="comment">    for(i=Q.front;i&lt;Q.rear;i++)</span></span><br><span class="line"><span class="comment">        printf(&quot;%d &quot;,Q.element[i]);</span></span><br><span class="line"><span class="comment">    putchar(&#x27;\n&#x27;);</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    SeqQueue s;</span><br><span class="line">    InitQueue(&amp;s);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Please input int xing numbers: \n&quot;</span>);</span><br><span class="line">    QueueElementType x;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">    &#125; <span class="keyword">while</span>(EnterQueue(&amp;s,x));</span><br><span class="line">    <span class="keyword">while</span>(DeleteQueue(&amp;s,&amp;x))</span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,x);</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>正确答案：  </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">charReplace</span><span class="params">(SString *s,<span class="type">char</span> ch1,<span class="type">char</span> ch2)</span> &#123;</span><br><span class="line">  <span class="type">int</span> i;</span><br><span class="line">  <span class="keyword">if</span>(!s)		<span class="keyword">return</span> ERROR;		<span class="comment">/*参数为空*/</span></span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;(s-&gt;len);i++)</span><br><span class="line">    <span class="keyword">if</span>(s-&gt;ch[i]==ch1)</span><br><span class="line">      s-&gt;ch[i]=ch2;</span><br><span class="line">  <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>(2)我的答案：  </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;ds.h&quot;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">isReverse</span><span class="params">(<span class="type">char</span> *c)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>,j,k,count=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Please input characters and input @ means endinput: \n&quot;</span>);</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;c[i]);</span><br><span class="line">        i++;</span><br><span class="line">    &#125; <span class="keyword">while</span>(c[i<span class="number">-1</span>]!=<span class="string">&#x27;@&#x27;</span>);</span><br><span class="line">    i--;</span><br><span class="line">    <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;i;j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(c[j]==<span class="string">&#x27;&amp;&#x27;</span>)</span><br><span class="line">            count++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(count)</span><br><span class="line">    &#123;</span><br><span class="line">         <span class="keyword">for</span>(j=<span class="number">0</span>;c[j]!=<span class="string">&#x27;&amp;&#x27;</span>;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            k=i<span class="number">-1</span>-j;</span><br><span class="line">            <span class="keyword">if</span>(c[k]==c[j])</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> ERROR;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> OK;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> c[Stack_Size];</span><br><span class="line">    <span class="keyword">if</span>(isReverse(c))</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Yes! \n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;NO! \n&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>其中，”ds.h”文件源码如下：  </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*定义常量*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>		TRUE	1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>		FALSE	0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>		OK		1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>		ERROR	0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>		Stack_Size 20<span class="comment">/*顺序栈空间大小*/</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义ElemType类型和使用到的物理数据类型*/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">char</span> StackElementType;</span><br><span class="line"><span class="comment">/*定义使用顺序栈*/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">SeqStack</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	StackElementType elem[Stack_Size]; <span class="comment">/*用来存放栈中元素的一维数组*/</span></span><br><span class="line">	<span class="type">int</span> top;          		<span class="comment">/*用来存放栈顶元素的下标，top为-1表示空栈*/</span></span><br><span class="line">&#125;SeqStack;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*声明物理数据类型的操作（函数）和使用到的其他功能函数*/</span></span><br><span class="line"><span class="comment">/*初始化*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">InitStack</span><span class="params">(SeqStack *S)</span>;</span><br><span class="line"><span class="comment">/*判栈空*/</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">IsEmpty</span><span class="params">(SeqStack *S)</span>; <span class="comment">/*判断栈S为空栈时返回值为真，反之为假*/</span></span><br><span class="line"><span class="comment">/*判栈满*/</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">IsFull</span><span class="params">(SeqStack *S)</span>;	<span class="comment">/*判断栈S为满栈时返回值为真，反之为假*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Push</span><span class="params">(SeqStack *S,StackElementType x)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Pop</span><span class="params">(SeqStack *S,StackElementType *x)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义物理数据类型的操作（函数）和使用到的其他功能函数*/</span></span><br><span class="line"><span class="comment">/*初始化*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">InitStack</span><span class="params">(SeqStack *S)</span></span><br><span class="line">&#123;</span><br><span class="line">	S-&gt;top=<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*判栈空*/</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">IsEmpty</span><span class="params">(SeqStack *S)</span> <span class="comment">/*判断栈S为空栈时返回值为真，反之为假*/</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span>((S-&gt;top)==<span class="number">-1</span>)</span><br><span class="line">		<span class="keyword">return</span> TRUE;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*判栈满*/</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">IsFull</span><span class="params">(SeqStack *S)</span>	<span class="comment">/*判断栈S为满栈时返回值为真，反之为假*/</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>((S-&gt;top)==(Stack_Size<span class="number">-1</span>))</span><br><span class="line">        <span class="keyword">return</span> TRUE;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Push</span><span class="params">(SeqStack *S,StackElementType x)</span> <span class="comment">//进栈</span></span><br><span class="line">&#123;</span><br><span class="line">    S-&gt;top++;</span><br><span class="line">    S-&gt;elem[S-&gt;top]=x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Pop</span><span class="params">(SeqStack *S,StackElementType *x)</span> <span class="comment">//出栈</span></span><br><span class="line">&#123;</span><br><span class="line">    (*x)=S-&gt;elem[S-&gt;top];</span><br><span class="line">    S-&gt;top--;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>正确答案如下：  </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">strInverse</span><span class="params">(SString *s)</span> &#123;</span><br><span class="line">  <span class="type">int</span> i,j;</span><br><span class="line">  <span class="type">char</span> ch;</span><br><span class="line">  <span class="keyword">if</span>(!s)		<span class="keyword">return</span> ERROR;		<span class="comment">/*参数为空*/</span></span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>,j=s-&gt;len<span class="number">-1</span>;i&lt;j;i++,j--) &#123;</span><br><span class="line">    ch=s-&gt;ch[i];</span><br><span class="line">    s-&gt;ch[i]=s-&gt;ch[j];</span><br><span class="line">    s-&gt;ch[j]=ch;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>(3)我的答案：  </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Stack_Size 50</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TRUE 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FALSE 0</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">char</span> StackElementType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">char</span> QueueElementType;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> //声明顺序栈</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    StackElementType elem[Stack_Size];</span><br><span class="line">    <span class="type">int</span> top;</span><br><span class="line">&#125;SeqStack;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">InitStack</span><span class="params">(SeqStack *S)</span> <span class="comment">//初始化顺序栈</span></span><br><span class="line">&#123;</span><br><span class="line">    S-&gt;top=<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">Push</span><span class="params">(SeqStack *S,StackElementType x)</span> <span class="comment">//进栈</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(S-&gt;top==(Stack_Size<span class="number">-1</span>))</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    S-&gt;top++;</span><br><span class="line">    S-&gt;elem[S-&gt;top]=x;</span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">Pop</span><span class="params">(SeqStack *S,StackElementType *x)</span> <span class="comment">//出栈</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(S-&gt;top==<span class="number">-1</span>)</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        (*x)=S-&gt;elem[S-&gt;top];</span><br><span class="line">        S-&gt;top--;</span><br><span class="line">        <span class="keyword">return</span> TRUE;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> //声明循环队列</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    QueueElementType element[Stack_Size];</span><br><span class="line">    <span class="type">int</span> front;</span><br><span class="line">    <span class="type">int</span> rear;</span><br><span class="line">&#125;SeqQueue;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">InitQueue</span><span class="params">(SeqQueue *Q)</span> <span class="comment">//循环队列初始化</span></span><br><span class="line">&#123;</span><br><span class="line">    Q-&gt;front=Q-&gt;rear=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">EnterQueue</span><span class="params">(SeqQueue *Q,QueueElementType x)</span> <span class="comment">//循环队列进队</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(((Q-&gt;rear+<span class="number">1</span>)%Stack_Size)==Q-&gt;front)</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    Q-&gt;element[Q-&gt;rear]=x;</span><br><span class="line">    Q-&gt;rear=(Q-&gt;rear+<span class="number">1</span>)%Stack_Size;</span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">DleteQueue</span><span class="params">(SeqQueue *Q,QueueElementType *x)</span> <span class="comment">//循环队列出队</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(Q-&gt;front==Q-&gt;rear)</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    (*x)=Q-&gt;element[Q-&gt;front];</span><br><span class="line">    Q-&gt;front=(Q-&gt;front+<span class="number">1</span>)%Stack_Size;</span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">Palindrome_Test</span><span class="params">(SeqStack *S,SeqQueue *Q)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Please input characters and input @ means endinput: \n&quot;</span>);</span><br><span class="line">    StackElementType c,d;</span><br><span class="line">    <span class="type">int</span> count=<span class="number">0</span>,i;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;c);</span><br><span class="line">    <span class="keyword">while</span>(c!=<span class="string">&#x27;@&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        count++;</span><br><span class="line">        Push(S,c);</span><br><span class="line">        EnterQueue(Q,c);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;c);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;count/<span class="number">2</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(Pop(S,&amp;c));</span><br><span class="line">        <span class="keyword">if</span>(DleteQueue(Q,&amp;d));</span><br><span class="line">        <span class="keyword">if</span>(c==d)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> FALSE;  </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    SeqStack s;</span><br><span class="line">    SeqQueue q;</span><br><span class="line">    InitStack(&amp;s);</span><br><span class="line">    InitQueue(&amp;q);</span><br><span class="line">    <span class="keyword">if</span>(Palindrome_Test(&amp;s,&amp;q))</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;Yes! &quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;No! &quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>正确答案如下：  </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">charDelete</span><span class="params">(SString *s,<span class="type">char</span> ch)</span> &#123;</span><br><span class="line">  <span class="type">int</span> i,j;</span><br><span class="line">  <span class="keyword">if</span>(!s)		<span class="keyword">return</span> ERROR;		<span class="comment">/*参数为空*/</span></span><br><span class="line">  i=j=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span>(j&lt;(s-&gt;len)) &#123;</span><br><span class="line">    <span class="keyword">if</span>(s-&gt;ch[j]!=ch) &#123;</span><br><span class="line">      s-&gt;ch[i]=s-&gt;ch[j];</span><br><span class="line">      i++;j++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      j++;</span><br><span class="line">  &#125;</span><br><span class="line">  s-&gt;len=i;</span><br><span class="line">  <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>完！</strong></p>
]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
</search>
